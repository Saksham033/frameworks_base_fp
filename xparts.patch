commit 0fe533f53c632394f97065f2a4b08955126a99cf
Author: khanfrd <khanfrd94@gmail.com>
Date:   Sat Jul 13 02:32:20 2019 +0530

    daisy: add xparts

diff --git a/XiaomiParts/Android.mk b/XiaomiParts/Android.mk
new file mode 100644
index 0000000..7646274
--- /dev/null
+++ b/XiaomiParts/Android.mk
@@ -0,0 +1,38 @@
+LOCAL_PATH := $(call my-dir)
+ifeq ($(BOARD_VENDOR_PLATFORM),xiaomi-sdm660)
+include $(CLEAR_VARS)
+
+LOCAL_MODULE_TAGS := optional
+LOCAL_STATIC_ANDROID_LIBRARIES := \
+    android-support-v14-preference \
+    android-support-v13 \
+    android-support-v7-appcompat \
+    android-support-v7-preference \
+    android-support-v7-recyclerview \
+    android-support-v4
+
+LOCAL_SRC_FILES := $(call all-java-files-under, src)
+LOCAL_PACKAGE_NAME := XiaomiParts
+LOCAL_CERTIFICATE := platform
+LOCAL_PRIVILEGED_MODULE := true
+LOCAL_PRIVATE_PLATFORM_APIS := true
+LOCAL_RESOURCE_DIR := $(LOCAL_PATH)/res
+LOCAL_USE_AAPT2 := true
+
+package_resource_overlays := $(strip \
+    $(wildcard $(foreach dir, $(PRODUCT_PACKAGE_OVERLAYS), \
+      $(addprefix $(dir)/, packages/apps/XiaomiParts/res))) \
+    $(wildcard $(foreach dir, $(DEVICE_PACKAGE_OVERLAYS), \
+      $(addprefix $(dir)/, packages/apps/XiaomiParts/res))))
+
+LOCAL_RESOURCE_DIR := $(package_resource_overlays) $(LOCAL_RESOURCE_DIR)
+
+LOCAL_PROGUARD_ENABLED := disabled
+LOCAL_DEX_PREOPT := false
+
+include frameworks/base/packages/SettingsLib/common.mk
+
+include $(BUILD_PACKAGE)
+
+include $(call all-makefiles-under,$(LOCAL_PATH))
+endif
diff --git a/XiaomiParts/AndroidManifest.xml b/XiaomiParts/AndroidManifest.xml
new file mode 100644
index 0000000..eb30616
--- /dev/null
+++ b/XiaomiParts/AndroidManifest.xml
@@ -0,0 +1,96 @@
+<?xml version="1.0" encoding="utf-8"?>
+<!-- Copyright (C) 2018 The Xiaomi-SDM660 Project
+
+     Licensed under the Apache License, Version 2.0 (the "License");
+     you may not use this file except in compliance with the License.
+     You may obtain a copy of the License at
+
+          http://www.apache.org/licenses/LICENSE-2.0
+
+     Unless required by applicable law or agreed to in writing, software
+     distributed under the License is distributed on an "AS IS" BASIS,
+     WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+     See the License for the specific language governing permissions and
+     limitations under the License.
+-->
+<manifest xmlns:android="http://schemas.android.com/apk/res/android"
+    package="org.lineageos.settings.device"
+    android:sharedUserId="android.uid.system">
+
+    <uses-permission android:name="android.permission.EXPAND_STATUS_BAR" />
+    <uses-permission android:name="android.permission.RECEIVE_BOOT_COMPLETED" />
+    <uses-permission android:name="android.permission.VIBRATE" />
+    <uses-permission android:name="android.permission.WRITE_SETTINGS" />
+
+    <uses-sdk android:minSdkVersion="27" />
+
+    <application
+        android:label="@string/advanced_settings"
+        android:supportsRtl="true"
+        android:theme="@style/AppTheme">
+        <receiver
+            android:name=".BootReceiver"
+            android:defaultToDeviceProtectedStorage="true"
+            android:directBootAware="true"
+            android:enabled="true"
+            android:exported="false">
+            <intent-filter>
+                <action android:name="android.intent.action.BOOT_COMPLETED" />
+                <action android:name="android.intent.action.LOCKED_BOOT_COMPLETED" />
+
+                <category android:name="android.intent.category.DEFAULT" />
+                <action android:name="com.android.settings.action.EXTRA_SETTINGS" />
+            </intent-filter>
+        </receiver>
+
+        <activity
+            android:name=".DeviceSettingsActivity"
+            android:exported="false"
+            android:icon="@drawable/round_build_24"
+            android:label="@string/advanced_settings"
+            android:launchMode="singleTask">
+            <intent-filter>
+                <action android:name="android.intent.action.MAIN" />
+                <category android:name="android.intent.category.DEFAULT" />
+                <action android:name="com.android.settings.action.EXTRA_SETTINGS" />
+            </intent-filter>
+
+            <meta-data
+                android:name="com.android.settings.dismiss"
+                android:value="9,13,30" />
+            <meta-data
+                android:name="com.android.settings.category"
+                android:value="com.android.settings.category.ia.homepage" />
+            <meta-data
+                android:name="com.android.settings.summary"
+                android:resource="@string/advanced_settings_summary" />
+        </activity>
+
+        <activity
+            android:name=".kcal.KCalSettingsActivity"
+            android:exported="false"
+            android:label="@string/advanced_settings_kcal">
+
+            <intent-filter>
+                <action android:name="android.intent.action.MAIN" />
+                <category android:name="android.intent.category.DEFAULT" />
+            </intent-filter>
+        </activity>
+
+        <service
+            android:name=".PerformanceTileService"
+            android:icon="@drawable/spectrum_balance"
+            android:label="@string/spectrum_balance"
+            android:permission="android.permission.BIND_QUICK_SETTINGS_TILE">
+            <intent-filter>
+                <action android:name="android.service.quicksettings.action.QS_TILE"/>
+            </intent-filter>
+        </service>
+
+        <service android:name=".StartAction" />
+        <service
+            android:name=".DiracService"
+            android:enabled="true"
+            android:stopWithTask="false" />
+    </application>
+</manifest>
diff --git a/XiaomiParts/res/drawable/action_presets.xml b/XiaomiParts/res/drawable/action_presets.xml
new file mode 100644
index 0000000..5e9b32c
--- /dev/null
+++ b/XiaomiParts/res/drawable/action_presets.xml
@@ -0,0 +1,9 @@
+<vector xmlns:android="http://schemas.android.com/apk/res/android"
+    android:width="24dp"
+    android:height="24dp"
+    android:viewportWidth="24"
+    android:viewportHeight="24">
+    <path
+        android:fillColor="?android:attr/colorAccent"
+        android:pathData="M12,3c-4.97,0 -9,4.03 -9,9s4.03,9 9,9c0.83,0 1.5,-0.67 1.5,-1.5 0,-0.39 -0.15,-0.74 -0.39,-1.01 -0.23,-0.26 -0.38,-0.61 -0.38,-0.99 0,-0.83 0.67,-1.5 1.5,-1.5L16,16c2.76,0 5,-2.24 5,-5 0,-4.42 -4.03,-8 -9,-8zM6.5,12c-0.83,0 -1.5,-0.67 -1.5,-1.5S5.67,9 6.5,9 8,9.67 8,10.5 7.33,12 6.5,12zM9.5,8C8.67,8 8,7.33 8,6.5S8.67,5 9.5,5s1.5,0.67 1.5,1.5S10.33,8 9.5,8zM14.5,8c-0.83,0 -1.5,-0.67 -1.5,-1.5S13.67,5 14.5,5s1.5,0.67 1.5,1.5S15.33,8 14.5,8zM17.5,12c-0.83,0 -1.5,-0.67 -1.5,-1.5S16.67,9 17.5,9s1.5,0.67 1.5,1.5 -0.67,1.5 -1.5,1.5z" />
+</vector>
diff --git a/XiaomiParts/res/drawable/action_reset.xml b/XiaomiParts/res/drawable/action_reset.xml
new file mode 100644
index 0000000..28e7f8f
--- /dev/null
+++ b/XiaomiParts/res/drawable/action_reset.xml
@@ -0,0 +1,9 @@
+<vector xmlns:android="http://schemas.android.com/apk/res/android"
+    android:width="24dp"
+    android:height="24dp"
+    android:viewportWidth="24"
+    android:viewportHeight="24">
+    <path
+        android:fillColor="?android:attr/colorAccent"
+        android:pathData="M12.5,8C9.85,8 7.45,9 5.6,10.6L2,7V16H11L7.38,12.38C8.77,11.22 10.54,10.5 12.5,10.5C16.04,10.5 19.05,12.81 20.1,16L22.47,15.22C21.08,11.03 17.15,8 12.5,8Z" />
+</vector>
\ No newline at end of file
diff --git a/XiaomiParts/res/drawable/round_build_24.xml b/XiaomiParts/res/drawable/round_build_24.xml
new file mode 100644
index 0000000..fbf1d17
--- /dev/null
+++ b/XiaomiParts/res/drawable/round_build_24.xml
@@ -0,0 +1,10 @@
+<vector xmlns:android="http://schemas.android.com/apk/res/android"
+        android:width="24dp"
+        android:height="24dp"
+        android:viewportWidth="24.0"
+        android:viewportHeight="24.0"
+        android:tint="?attr/colorControlNormal">
+    <path
+        android:fillColor="@android:color/white"
+        android:pathData="M12.09,2.91C10.08,0.9 7.07,0.49 4.65,1.67L8.28,5.3c0.39,0.39 0.39,1.02 0,1.41L6.69,8.3c-0.39,0.4 -1.02,0.4 -1.41,0L1.65,4.67C0.48,7.1 0.89,10.09 2.9,12.1c1.86,1.86 4.58,2.35 6.89,1.48l7.96,7.96c1.03,1.03 2.69,1.03 3.71,0 1.03,-1.03 1.03,-2.69 0,-3.71L13.54,9.9c0.92,-2.34 0.44,-5.1 -1.45,-6.99z"/>
+</vector>
diff --git a/XiaomiParts/res/drawable/spectrum_balance.xml b/XiaomiParts/res/drawable/spectrum_balance.xml
new file mode 100644
index 0000000..90560a3
--- /dev/null
+++ b/XiaomiParts/res/drawable/spectrum_balance.xml
@@ -0,0 +1,12 @@
+<vector xmlns:android="http://schemas.android.com/apk/res/android"
+    android:width="24dp"
+    android:height="24dp"
+    android:viewportWidth="24"
+    android:viewportHeight="24">
+  <group>
+    <clip-path android:pathData="M0,0h24v24H0V0z M 0,0"/>
+    <path
+        android:fillColor="#FF000000"
+        android:pathData="M23,8c0,1.1 -0.9,2 -2,2 -0.18,0 -0.35,-0.02 -0.51,-0.07l-3.56,3.55c0.05,0.16 0.07,0.34 0.07,0.52 0,1.1 -0.9,2 -2,2s-2,-0.9 -2,-2c0,-0.18 0.02,-0.36 0.07,-0.52l-2.55,-2.55c-0.16,0.05 -0.34,0.07 -0.52,0.07s-0.36,-0.02 -0.52,-0.07l-4.55,4.56c0.05,0.16 0.07,0.33 0.07,0.51 0,1.1 -0.9,2 -2,2s-2,-0.9 -2,-2 0.9,-2 2,-2c0.18,0 0.35,0.02 0.51,0.07l4.56,-4.55C8.02,9.36 8,9.18 8,9c0,-1.1 0.9,-2 2,-2s2,0.9 2,2c0,0.18 -0.02,0.36 -0.07,0.52l2.55,2.55c0.16,-0.05 0.34,-0.07 0.52,-0.07s0.36,0.02 0.52,0.07l3.55,-3.56C19.02,8.35 19,8.18 19,8c0,-1.1 0.9,-2 2,-2s2,0.9 2,2z"/>
+  </group>
+</vector>
diff --git a/XiaomiParts/res/layout/custom_seekbar_preference_dialog.xml b/XiaomiParts/res/layout/custom_seekbar_preference_dialog.xml
new file mode 100644
index 0000000..6979b1e
--- /dev/null
+++ b/XiaomiParts/res/layout/custom_seekbar_preference_dialog.xml
@@ -0,0 +1,49 @@
+<?xml version="1.0" encoding="utf-8"?>
+<!--
+  ~ Copyright (C) 2015 The Android Open Source Project
+  ~
+  ~ Licensed under the Apache License, Version 2.0 (the "License");
+  ~ you may not use this file except in compliance with the License.
+  ~ You may obtain a copy of the License at
+  ~
+  ~      http://www.apache.org/licenses/LICENSE-2.0
+  ~
+  ~ Unless required by applicable law or agreed to in writing, software
+  ~ distributed under the License is distributed on an "AS IS" BASIS,
+  ~ WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+  ~ See the License for the specific language governing permissions and
+  ~ limitations under the License
+  -->
+
+<ScrollView xmlns:android="http://schemas.android.com/apk/res/android"
+    android:layout_width="match_parent"
+    android:layout_height="match_parent"
+    android:layout_marginTop="48dp"
+    android:layout_marginBottom="48dp"
+    android:overScrollMode="ifContentScrolls">
+
+    <LinearLayout
+        android:layout_width="match_parent"
+        android:layout_height="wrap_content"
+        android:layout_marginStart="24dp"
+        android:layout_marginEnd="24dp"
+        android:orientation="vertical">
+
+        <TextView
+            style="?android:attr/textAppearanceSmall"
+            android:layout_width="match_parent"
+            android:layout_height="wrap_content"
+            android:layout_marginBottom="48dp"
+            android:textColor="?android:attr/textColorSecondary" />
+
+        <EditText
+            android:id="@+id/edit"
+            android:layout_width="match_parent"
+            android:layout_height="wrap_content"
+            android:layout_marginStart="-4dp"
+            android:layout_marginEnd="-4dp"
+            android:inputType="number|numberSigned" />
+
+    </LinearLayout>
+
+</ScrollView>
\ No newline at end of file
diff --git a/XiaomiParts/res/layout/preference_custom_seekbar.xml b/XiaomiParts/res/layout/preference_custom_seekbar.xml
new file mode 100644
index 0000000..1c72990
--- /dev/null
+++ b/XiaomiParts/res/layout/preference_custom_seekbar.xml
@@ -0,0 +1,97 @@
+<?xml version="1.0" encoding="utf-8"?>
+<!-- Copyright (C) 2014-2016 The Android Open Source Project
+
+     Licensed under the Apache License, Version 2.0 (the "License");
+     you may not use this file except in compliance with the License.
+     You may obtain a copy of the License at
+
+          http://www.apache.org/licenses/LICENSE-2.0
+
+     Unless required by applicable law or agreed to in writing, software
+     distributed under the License is distributed on an "AS IS" BASIS,
+     WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+     See the License for the specific language governing permissions and
+     limitations under the License.
+-->
+
+<LinearLayout xmlns:android="http://schemas.android.com/apk/res/android"
+    android:layout_width="match_parent"
+    android:layout_height="wrap_content"
+    android:clickable="false"
+    android:gravity="center_vertical"
+    android:minHeight="?android:attr/listPreferredItemHeightSmall"
+    android:orientation="horizontal"
+    android:paddingStart="?android:attr/listPreferredItemPaddingStart"
+    android:paddingEnd="?android:attr/listPreferredItemPaddingEnd">
+
+    <LinearLayout
+        android:id="@+id/text_container"
+        android:layout_width="wrap_content"
+        android:layout_height="wrap_content"
+        android:gravity="center"
+        android:minWidth="44dp"
+        android:orientation="horizontal"
+        android:paddingTop="4dp"
+        android:paddingEnd="12dp"
+        android:paddingBottom="4dp">
+
+        <TextView
+            android:id="@+id/seekBarPrefValue"
+            android:layout_width="wrap_content"
+            android:layout_height="wrap_content"
+            android:ellipsize="end"
+            android:singleLine="true"
+            android:textAlignment="center"
+            android:textAppearance="@android:style/TextAppearance.Material.Body1"
+            android:textColor="?android:attr/textColorSecondary" />
+    </LinearLayout>
+
+    <LinearLayout
+        android:layout_width="match_parent"
+        android:layout_height="wrap_content"
+        android:layout_marginTop="8dip"
+        android:layout_marginBottom="8dip"
+        android:orientation="vertical">
+
+        <LinearLayout
+            android:layout_width="match_parent"
+            android:layout_height="wrap_content">
+
+            <TextView
+                android:id="@android:id/title"
+                android:layout_width="0dp"
+                android:layout_height="wrap_content"
+                android:layout_weight="1"
+                android:ellipsize="marquee"
+                android:fadingEdge="horizontal"
+                android:paddingStart="16dp"
+                android:singleLine="true"
+                android:textAppearance="@android:style/TextAppearance.Material.Subhead"
+                android:textColor="?android:attr/textColorPrimary" />
+
+            <!-- Preference should place its actual preference widget here. -->
+            <LinearLayout
+                android:id="@android:id/widget_frame"
+                android:layout_width="wrap_content"
+                android:layout_height="match_parent"
+                android:gravity="end|center_vertical"
+                android:orientation="vertical"
+                android:paddingStart="16dp" />
+        </LinearLayout>
+
+        <FrameLayout
+            android:layout_width="match_parent"
+            android:layout_height="wrap_content"
+            android:layout_marginTop="6dp">
+
+            <LinearLayout
+                android:id="@+id/seekBarPrefBarContainer"
+                android:layout_width="match_parent"
+                android:layout_height="wrap_content"
+                android:layout_gravity="center_vertical"
+                android:orientation="horizontal" />
+        </FrameLayout>
+
+    </LinearLayout>
+
+</LinearLayout>
diff --git a/XiaomiParts/res/menu/menu_reset.xml b/XiaomiParts/res/menu/menu_reset.xml
new file mode 100644
index 0000000..3860042
--- /dev/null
+++ b/XiaomiParts/res/menu/menu_reset.xml
@@ -0,0 +1,15 @@
+<menu xmlns:android="http://schemas.android.com/apk/res/android">
+
+    <item
+        android:id="@+id/action_preset"
+        android:icon="@drawable/action_presets"
+        android:showAsAction="always"
+        android:title="@string/kcal_presets" />
+
+    <item
+        android:id="@+id/action_reset"
+        android:icon="@drawable/action_reset"
+        android:showAsAction="always"
+        android:title="@string/kcal_reset" />
+
+</menu>
\ No newline at end of file
diff --git a/parts/res/values-ar-rSA/strings.xml b/XiaomiParts/res/values-ar-rSA/strings.xml
similarity index 100%
rename from parts/res/values-ar-rSA/strings.xml
rename to XiaomiParts/res/values-ar-rSA/strings.xml
diff --git a/parts/res/values-as-rIN/strings.xml b/XiaomiParts/res/values-as-rIN/strings.xml
similarity index 100%
rename from parts/res/values-as-rIN/strings.xml
rename to XiaomiParts/res/values-as-rIN/strings.xml
diff --git a/parts/res/values-az-rAZ/strings.xml b/XiaomiParts/res/values-az-rAZ/strings.xml
similarity index 100%
rename from parts/res/values-az-rAZ/strings.xml
rename to XiaomiParts/res/values-az-rAZ/strings.xml
diff --git a/parts/res/values-be-rBY/strings.xml b/XiaomiParts/res/values-be-rBY/strings.xml
similarity index 100%
rename from parts/res/values-be-rBY/strings.xml
rename to XiaomiParts/res/values-be-rBY/strings.xml
diff --git a/parts/res/values-bg-rBG/strings.xml b/XiaomiParts/res/values-bg-rBG/strings.xml
similarity index 100%
rename from parts/res/values-bg-rBG/strings.xml
rename to XiaomiParts/res/values-bg-rBG/strings.xml
diff --git a/parts/res/values-bn-rBD/strings.xml b/XiaomiParts/res/values-bn-rBD/strings.xml
similarity index 100%
rename from parts/res/values-bn-rBD/strings.xml
rename to XiaomiParts/res/values-bn-rBD/strings.xml
diff --git a/parts/res/values-bs-rBA/strings.xml b/XiaomiParts/res/values-bs-rBA/strings.xml
similarity index 100%
rename from parts/res/values-bs-rBA/strings.xml
rename to XiaomiParts/res/values-bs-rBA/strings.xml
diff --git a/parts/res/values-ca-rES/strings.xml b/XiaomiParts/res/values-ca-rES/strings.xml
similarity index 100%
rename from parts/res/values-ca-rES/strings.xml
rename to XiaomiParts/res/values-ca-rES/strings.xml
diff --git a/parts/res/values-cs-rCZ/strings.xml b/XiaomiParts/res/values-cs-rCZ/strings.xml
similarity index 100%
rename from parts/res/values-cs-rCZ/strings.xml
rename to XiaomiParts/res/values-cs-rCZ/strings.xml
diff --git a/parts/res/values-da-rDK/strings.xml b/XiaomiParts/res/values-da-rDK/strings.xml
similarity index 100%
rename from parts/res/values-da-rDK/strings.xml
rename to XiaomiParts/res/values-da-rDK/strings.xml
diff --git a/XiaomiParts/res/values-de-rDE/strings.xml b/XiaomiParts/res/values-de-rDE/strings.xml
new file mode 100644
index 0000000..5328366
--- /dev/null
+++ b/XiaomiParts/res/values-de-rDE/strings.xml
@@ -0,0 +1,132 @@
+<?xml version="1.0" encoding="utf-8"?>
+<!-- Copyright (C) 2018 The Xiaomi-SDM660 Project
+
+     Licensed under the Apache License, Version 2.0 (the "License");
+     you may not use this file except in compliance with the License.
+     You may obtain a copy of the License at
+
+          http://www.apache.org/licenses/LICENSE-2.0
+
+     Unless required by applicable law or agreed to in writing, software
+     distributed under the License is distributed on an "AS IS" BASIS,
+     WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+     See the License for the specific language governing permissions and
+     limitations under the License.
+-->
+<resources>
+    <string name="advanced_settings">Xiaomi Parts</string>
+    <string name="advanced_settings_summary">Erweiterte Einstellungen</string>
+    <string name="camera_title">Kamera</string>
+    <string name="camera_hal3_title">Aktiviere Camera2 API</string>
+    <string name="camera_eis_title">Aktiviere EIS</string>
+    <string name="display_title">Display</string>
+    <string name="device_kcal_title">Displaykalibierung</string>
+    <string name="torch_title">Taschenlampe</string>
+    <string name="torch_brightness_title">Helligkeit</string>
+    <string name="vibration_strength_title">Stärke</string>
+
+    <!-- Spectrum Profiles -->
+    <string name="spectrum_profile_title">Leistung</string>
+    <string name="spectrum_title">Leistung Einstellung</string>
+    <string name="spectrum_summary">Wähle die Leistungstufe</string>
+    <string name="spectrum_dialogTitle">Wähle die Leistungstufe</string>
+
+    <string name="fp_title">Fingerabdrucksensor</string>
+    <string name="fpaction_enabled">Aktiviere Fingerabdruckaktionen</string>
+    <string name="fpshutter_summary">Löse die Kamera aus, falls diese aktiv ist</string>
+    <string name="fp_shutter">Fingerprint Shutter</string>
+    <string name="fpaction_dialogTitle">Aktion</string>
+    <string name="fpaction_summary">Aktion auswählen</string>
+    <string name="fpaction_title">Fingerabdruckaktionen</string>
+    <string name="spectrum_performance">Performance</string>
+    <string name="spectrum_battery">Energieeffizient</string>
+    <string name="spectrum_gaming">Gaming</string>
+    <string name="spectrum_balance">Balance</string>
+    <string name="spectrum_extreme_battery">Energiesparmodus</string>
+    <string name="vibration_title">Haptisches Feedback</string>
+    <string name="fpaction_expand_np">Benachrichtigungs Panel</string>
+    <string name="fpaction_expand_qs">Schnelleinstellungen</string>
+    <string name="fpaction_assistant">Assistent</string>
+    <string name="fpaction_home">Home</string>
+    <string name="fpaction_recent_apps">Anwendungsverlauf</string>
+
+    <!-- Dirac settings -->
+    <string name="dirac_title">Mi Klangverbesserung</string>
+    <string name="dirac_summary">Audioqualität optimieren</string>
+    <string name="dirac_headset_title">Kopfhörertyp auswählen</string>
+    <string name="dirac_preset_title">Vorgabe auswählen</string>
+    <!-- Dirac settings: Headset types -->
+    <string name="dirac_headset_default">Standard</string>
+    <string name="dirac_headset_earbuds">Mi Ohrhörer</string>
+    <string name="dirac_headset_in_ear_2013">Mi In Ear (2013)</string>
+    <string name="dirac_headset_piston_1">Mi Piston 1</string>
+    <string name="dirac_headset_general">Allgemeine Earbuds</string>
+    <string name="dirac_headset_general_inear">Allgemeine In Ear</string>
+    <string name="dirac_headset_piston_basic">Basis Edition</string>
+    <string name="dirac_headset_piston_2">Mi Piston 2</string>
+    <string name="dirac_headset_piston_standard">Standard Edition</string>
+    <string name="dirac_headset_headphone">Mi Kopfhörer</string>
+    <string name="dirac_headset_piston_youth">Jugend Edition</string>
+    <string name="dirac_headset_piston_color">Farbige Edition</string>
+    <string name="dirac_headset_in_ear">Mi In Ear</string>
+    <string name="dirac_headset_capsule">Mi Capsule</string>
+    <string name="dirac_headset_in_ear_pro">Mi In Ear Pro</string>
+    <string name="dirac_headset_comfort">Mi Komfort</string>
+    <string name="dirac_headset_reduction_noise">Mi-Geräuschunterdrückung (Typ-C)</string>
+    <string name="dirac_headset_cancelling">Mi-Geräuschunterdrückung (3.5 mm)</string>
+    <string name="dirac_headset_half_in_ear">Mi Half In Ear</string>
+    <string name="dirac_headset_in_ear2">Mi In Ear 2</string>
+    <string name="dirac_headset_earphone_basic">Mi Earphones Basic</string>
+    <string name="dirac_headset_earphone">Mi Earphones</string>
+    <!-- Dirac settings: Equalizer presets -->
+    <string name="dirac_preset_default">Standard</string>
+    <string name="dirac_preset_rock">Rock</string>
+    <string name="dirac_preset_jazz">Jazz</string>
+    <string name="dirac_preset_pop">Pop</string>
+    <string name="dirac_preset_classical">Klassisch</string>
+    <string name="dirac_preset_hiphop">Hip Hop</string>
+    <string name="dirac_preset_blues">Blues</string>
+    <string name="dirac_preset_electronic">Elektronik</string>
+    <string name="dirac_preset_country">Country</string>
+    <string name="dirac_preset_dance">Dance</string>
+    <string name="dirac_preset_metal">Metal</string>
+
+    <string name="advanced_settings_kcal">Display Farbeinstellungen</string>
+    <string name="cat_calibration">Bildschirm Kalibrierung</string>
+    <string name="set_on_boot">Beim Systemstart anwenden</string>
+    <string name="kcal_enabled">An</string>
+    <string name="kcal_disabled">Aus</string>
+    <string name="color_red">Rot</string>
+    <string name="color_green">Grün</string>
+    <string name="color_blue">Blau</string>
+    <string name="color_minimum">Minimum</string>
+    <string name="saturation">Sättigung</string>
+    <string name="contrast">Kontrast</string>
+    <string name="cat_colormanagement">Farbeinstellungen</string>
+    <string name="value">Farbwert</string>
+    <string name="hue">Farbton</string>
+    <string name="kcal_reset">Zurücksetzen</string>
+    <string name="presets_dialog_title">Voreinstellung auswählen</string>
+    <string name="preset_default">Standard</string>
+    <string name="preset_deep_black_white">Tiefes Schwarz und Weiß</string>
+    <string name="preset_extreme_amoled">Extremes AMOLED</string>
+    <string name="preset_warm_amoled">Warmes AMOLED</string>
+    <string name="preset_cool_amoled">Kühles AMOLED</string>
+    <string name="preset_deep_natural">Naturfarben</string>
+    <string name="edit_value">Wähle neuen Wert</string>
+    <string name="default_value">Standard Wert</string>
+    <string name="edit_hint">Wert zwischen %1d und %2d</string>
+    <string name="fpaction_none">Keine</string>
+    <string name="fpaction_right_title">Nach rechts wischen</string>
+    <string name="fpaction_up_title">Nach oben wischen</string>
+    <string name="fpaction_left_title">Nach links wischen</string>
+    <string name="fpaction_down_title">Nach unten wischen</string>
+    <string name="advanced_doze_summary">Inaktivitätsdisplay</string>
+    <string name="grayscale">Graustufen-Modus</string>
+    <string name="microphone_gain">Mikrofonverstärkung</string>
+    <string name="headphone_gain">Kopfhörerverstärkung</string>
+    <string name="fastcharge_summary">Benutze USB Fastcharge beim verbinden mit dem Computer</string>
+    <string name="fastcharge_title">Aktiviere USB Fastcharge</string>
+    <string name="hall_title">Aktiviere Aufwecken mit Flip Cover </string>
+    <string name="hall_wakeup_summary">Schalte das Gerät AN und AUS mit einem magnetischen Flip Cover</string>
+</resources>
diff --git a/parts/res/values-el-rGR/strings.xml b/XiaomiParts/res/values-el-rGR/strings.xml
similarity index 100%
rename from parts/res/values-el-rGR/strings.xml
rename to XiaomiParts/res/values-el-rGR/strings.xml
diff --git a/parts/res/values-es-rMX/strings.xml b/XiaomiParts/res/values-es-rES/strings.xml
similarity index 61%
rename from parts/res/values-es-rMX/strings.xml
rename to XiaomiParts/res/values-es-rES/strings.xml
index eedb6c5..b4bef60 100644
--- a/parts/res/values-es-rMX/strings.xml
+++ b/XiaomiParts/res/values-es-rES/strings.xml
@@ -1,7 +1,5 @@
 <?xml version="1.0" encoding="utf-8"?>
-<!--Generated by crowdin.com-->
-<!--
-     Copyright (C) 2018 The PixelExperience Project
+<!-- Copyright (C) 2019 The Xiaomi-SDM660 Project
 
      Licensed under the Apache License, Version 2.0 (the "License");
      you may not use this file except in compliance with the License.
@@ -16,11 +14,51 @@
      limitations under the License.
 -->
 <resources>
+    <string name="advanced_settings">Ajustes Xiaomi</string>
+    <string name="advanced_settings_summary">Ajustes Extras de Xiaomi MI 6X/A2</string>
+
+    <string name="camera_title">Cámara</string>
+    <string name="camera_hal3_title">Activar Camera2 API</string>
+    <string name="camera_eis_title">Activar EIS (Estabilización de Imagen Electronica)</string>
+
+    <string name="display_title">Pantalla</string>
+
+    <!-- KCal -->
+    <string name="device_kcal_title">Calibrar Color de Pantalla </string>
+
+    <string name="torch_title">Linterna</string>
+    <string name="torch_brightness_title">Brillo</string>
+    <string name="vibration_title">Retroalimentación háptica</string>
+    <string name="vibration_strength_title">Fuerza</string>
+
+    <!-- Spectrum Profiles -->
+    <string name="spectrum_profile_title">Rendimiento</string>
+    <string name="spectrum_title">Ajustes de Rendimiento</string>
+    <string name="spectrum_summary">Elija su configuración de Rendimiento</string>
+    <string name="spectrum_dialogTitle">Elija su configuración de Rendimiento</string>
+
+    <!-- Values for Spectrum Presets -->
+    <string name="spectrum_performance">Rendimiento</string>
+    <string name="spectrum_battery">Batería</string>
+    <string name="spectrum_gaming">Juego</string>
+    <string name="spectrum_balance">Balance</string>
+    <string name="spectrum_extreme_battery">Batería Extrema</string>
+
+    <!-- FP Actions -->
+    <string name="fp_title">Huella Dactilar</string>
+    <string name="fpaction_enabled">Habilitar acciones de huellas dactilares personalizadas</string>
+    <string name="fpshutter_summary">Dispara la cámara si está activa.</string>
+    <string name="fp_shutter">Obturador de huellas dactilares</string>
+    <string name="fpaction_dialogTitle">Acción</string>
+    <string name="fpaction_summary">ELija la Acción</string>
+    <string name="fpaction_title">Acciones de Huellas Dactilares</string>
+
     <!-- Dirac settings -->
     <string name="dirac_title">Mi Sound Enhancer</string>
     <string name="dirac_summary">Optimizar la calidad del audio</string>
     <string name="dirac_headset_title">Selecciona el tipo de auriculares</string>
     <string name="dirac_preset_title">Selecciona un preajuste</string>
+
     <!-- Dirac settings: Headset types -->
     <string name="dirac_headset_default">Predeterminado</string>
     <string name="dirac_headset_earbuds">Auriculares de tapón Mi</string>
@@ -44,6 +82,7 @@
     <string name="dirac_headset_in_ear2">Mi In-Ear 2</string>
     <string name="dirac_headset_earphone_basic">Mi Earphones Basic</string>
     <string name="dirac_headset_earphone">Mi Earphones</string>
+
     <!-- Dirac settings: Equalizer presets -->
     <string name="dirac_preset_default">Predeterminado</string>
     <string name="dirac_preset_rock">Rock</string>
diff --git a/parts/res/values-es-rES/strings.xml b/XiaomiParts/res/values-es-rMX/strings.xml
similarity index 61%
rename from parts/res/values-es-rES/strings.xml
rename to XiaomiParts/res/values-es-rMX/strings.xml
index eedb6c5..b4bef60 100644
--- a/parts/res/values-es-rES/strings.xml
+++ b/XiaomiParts/res/values-es-rMX/strings.xml
@@ -1,7 +1,5 @@
 <?xml version="1.0" encoding="utf-8"?>
-<!--Generated by crowdin.com-->
-<!--
-     Copyright (C) 2018 The PixelExperience Project
+<!-- Copyright (C) 2019 The Xiaomi-SDM660 Project
 
      Licensed under the Apache License, Version 2.0 (the "License");
      you may not use this file except in compliance with the License.
@@ -16,11 +14,51 @@
      limitations under the License.
 -->
 <resources>
+    <string name="advanced_settings">Ajustes Xiaomi</string>
+    <string name="advanced_settings_summary">Ajustes Extras de Xiaomi MI 6X/A2</string>
+
+    <string name="camera_title">Cámara</string>
+    <string name="camera_hal3_title">Activar Camera2 API</string>
+    <string name="camera_eis_title">Activar EIS (Estabilización de Imagen Electronica)</string>
+
+    <string name="display_title">Pantalla</string>
+
+    <!-- KCal -->
+    <string name="device_kcal_title">Calibrar Color de Pantalla </string>
+
+    <string name="torch_title">Linterna</string>
+    <string name="torch_brightness_title">Brillo</string>
+    <string name="vibration_title">Retroalimentación háptica</string>
+    <string name="vibration_strength_title">Fuerza</string>
+
+    <!-- Spectrum Profiles -->
+    <string name="spectrum_profile_title">Rendimiento</string>
+    <string name="spectrum_title">Ajustes de Rendimiento</string>
+    <string name="spectrum_summary">Elija su configuración de Rendimiento</string>
+    <string name="spectrum_dialogTitle">Elija su configuración de Rendimiento</string>
+
+    <!-- Values for Spectrum Presets -->
+    <string name="spectrum_performance">Rendimiento</string>
+    <string name="spectrum_battery">Batería</string>
+    <string name="spectrum_gaming">Juego</string>
+    <string name="spectrum_balance">Balance</string>
+    <string name="spectrum_extreme_battery">Batería Extrema</string>
+
+    <!-- FP Actions -->
+    <string name="fp_title">Huella Dactilar</string>
+    <string name="fpaction_enabled">Habilitar acciones de huellas dactilares personalizadas</string>
+    <string name="fpshutter_summary">Dispara la cámara si está activa.</string>
+    <string name="fp_shutter">Obturador de huellas dactilares</string>
+    <string name="fpaction_dialogTitle">Acción</string>
+    <string name="fpaction_summary">ELija la Acción</string>
+    <string name="fpaction_title">Acciones de Huellas Dactilares</string>
+
     <!-- Dirac settings -->
     <string name="dirac_title">Mi Sound Enhancer</string>
     <string name="dirac_summary">Optimizar la calidad del audio</string>
     <string name="dirac_headset_title">Selecciona el tipo de auriculares</string>
     <string name="dirac_preset_title">Selecciona un preajuste</string>
+
     <!-- Dirac settings: Headset types -->
     <string name="dirac_headset_default">Predeterminado</string>
     <string name="dirac_headset_earbuds">Auriculares de tapón Mi</string>
@@ -44,6 +82,7 @@
     <string name="dirac_headset_in_ear2">Mi In-Ear 2</string>
     <string name="dirac_headset_earphone_basic">Mi Earphones Basic</string>
     <string name="dirac_headset_earphone">Mi Earphones</string>
+
     <!-- Dirac settings: Equalizer presets -->
     <string name="dirac_preset_default">Predeterminado</string>
     <string name="dirac_preset_rock">Rock</string>
diff --git a/XiaomiParts/res/values-es/strings.xml b/XiaomiParts/res/values-es/strings.xml
new file mode 100644
index 0000000..dbab07a
--- /dev/null
+++ b/XiaomiParts/res/values-es/strings.xml
@@ -0,0 +1,129 @@
+<?xml version="1.0" encoding="utf-8"?>
+<!-- Copyright (C) 2019 The Xiaomi-SDM660 Project
+
+     Licensed under the Apache License, Version 2.0 (the "License");
+     you may not use this file except in compliance with the License.
+     You may obtain a copy of the License at
+
+          http://www.apache.org/licenses/LICENSE-2.0
+
+     Unless required by applicable law or agreed to in writing, software
+     distributed under the License is distributed on an "AS IS" BASIS,
+     WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+     See the License for the specific language governing permissions and
+     limitations under the License.
+-->
+<resources>
+    <string name="advanced_settings">Ajustes Xiaomi</string>
+    <string name="advanced_settings_summary">Ajustes Extras de Xiaomi MI 6X/A2</string>
+
+    <string name="camera_title">Cámara</string>
+    <string name="camera_hal3_title">Activar Camera2 API</string>
+    <string name="camera_eis_title">Activar EIS (Estabilización de Imagen Electronica)</string>
+
+    <string name="display_title">Pantalla</string>
+
+    <!-- KCal -->
+    <string name="device_kcal_title">Calibrar Color de Pantalla </string>
+
+    <string name="torch_title">Linterna</string>
+    <string name="torch_brightness_title">Brillo</string>
+    <string name="vibration_title">Retroalimentación háptica</string>
+    <string name="vibration_strength_title">Fuerza</string>
+
+    <!-- Spectrum Profiles -->
+    <string name="spectrum_profile_title">Rendimiento</string>
+    <string name="spectrum_title">Ajustes de Rendimiento</string>
+    <string name="spectrum_summary">Elija su configuración de Rendimiento</string>
+    <string name="spectrum_dialogTitle">Elija su configuración de Rendimiento</string>
+
+    <!-- Values for Spectrum Presets -->
+    <string name="spectrum_performance">Rendimiento</string>
+    <string name="spectrum_battery">Batería</string>
+    <string name="spectrum_gaming">Juego</string>
+    <string name="spectrum_balance">Balance</string>
+    <string name="spectrum_extreme_battery">Batería Extrema</string>
+
+    <!-- FP Actions -->
+    <string name="fp_title">Huella Dactilar</string>
+    <string name="fpaction_enabled">Habilitar acciones de huellas dactilares personalizadas</string>
+    <string name="fpshutter_summary">Dispara la cámara si está activa.</string>
+    <string name="fp_shutter">Obturador de huellas dactilares</string>
+    <string name="fpaction_dialogTitle">Acción</string>
+    <string name="fpaction_summary">ELija la Acción</string>
+    <string name="fpaction_title">Acciones de Huellas Dactilares</string>
+
+    <!-- Dirac settings -->
+    <string name="dirac_title">Mi Sound Enhancer</string>
+    <string name="dirac_summary">Optimizar la calidad del audio</string>
+    <string name="dirac_headset_title">Selecciona el tipo de auriculares</string>
+    <string name="dirac_preset_title">Selecciona un preajuste</string>
+
+    <!-- Dirac settings: Headset types -->
+    <string name="dirac_headset_default">Predeterminado</string>
+    <string name="dirac_headset_earbuds">Auriculares de tapón Mi</string>
+    <string name="dirac_headset_in_ear_2013">Mi Intrauriculares (2013)</string>
+    <string name="dirac_headset_piston_1">Mi Piston-1</string>
+    <string name="dirac_headset_general">General</string>
+    <string name="dirac_headset_general_inear">Intrauriculares genéricos</string>
+    <string name="dirac_headset_piston_basic">Edición básica</string>
+    <string name="dirac_headset_piston_2">Mi Piston-2</string>
+    <string name="dirac_headset_piston_standard">Edición estándar</string>
+    <string name="dirac_headset_headphone">Auriculares Mi</string>
+    <string name="dirac_headset_piston_youth">Edición juvenil</string>
+    <string name="dirac_headset_piston_color">Edición a color</string>
+    <string name="dirac_headset_in_ear">Mi Intrauriculares</string>
+    <string name="dirac_headset_capsule">Mi Cápsula</string>
+    <string name="dirac_headset_in_ear_pro">Mi Intrauriculares Pro</string>
+    <string name="dirac_headset_comfort">Mi Comfort</string>
+    <string name="dirac_headset_reduction_noise">Cancelación de Ruido Mi Tipo C</string>
+    <string name="dirac_headset_cancelling">Cancelación de Ruido Mi 3.5mm</string>
+    <string name="dirac_headset_half_in_ear">Mi Half In-Ear</string>
+    <string name="dirac_headset_in_ear2">Mi In-Ear 2</string>
+    <string name="dirac_headset_earphone_basic">Mi Earphones Basic</string>
+    <string name="dirac_headset_earphone">Mi Earphones</string>
+
+    <!-- Dirac settings: Equalizer presets -->
+    <string name="dirac_preset_default">Predeterminado</string>
+    <string name="dirac_preset_rock">Rock</string>
+    <string name="dirac_preset_jazz">Jazz</string>
+    <string name="dirac_preset_pop">Pop</string>
+    <string name="dirac_preset_classical">Clásica</string>
+    <string name="dirac_preset_hiphop">Hip Hop</string>
+    <string name="dirac_preset_blues">Blues</string>
+    <string name="dirac_preset_electronic">Electrónica</string>
+    <string name="dirac_preset_country">Country</string>
+    <string name="dirac_preset_dance">Dance</string>
+    <string name="dirac_preset_metal">Metal</string>
+
+    <string name="advanced_settings_kcal">Calibración del color de la pantalla</string>
+    <string name="cat_calibration">Calibración de pantalla</string>
+    <string name="kcal_enabled">Encendido</string>
+    <string name="set_on_boot">Aplicar al inicio</string>
+    <string name="kcal_disabled">Apagar</string>
+    <string name="color_red">Rojo</string>
+    <string name="color_green">Verde</string>
+    <string name="color_blue">Azul</string>
+    <string name="color_minimum">Mínimo</string>
+    <string name="saturation">Saturación</string>
+    <string name="value">Valor</string>
+    <string name="contrast">Contraste</string>
+    <string name="hue">Matiz</string>
+    <string name="cat_colormanagement">Ajustes de color</string>
+    <string name="kcal_reset">Reiniciar</string>
+    <string name="edit_value">ELija un nuevo valor</string>
+
+    <!-- Presets -->
+    <string name="presets_dialog_title">Seleccione Preset</string>
+    <string name="preset_default">Predeterminado</string>
+    <string name="preset_version_1">Versión 1</string>
+    <string name="preset_version_2">Versión 2</string>
+    <string name="preset_version_3">Versión 3</string>
+    <string name="preset_triluminous">Triluminoso</string>
+    <string name="preset_deep_black_white">Blanco y negro profundo</string>
+    <string name="preset_deep_natural">Profundo natural</string>
+    <string name="preset_cool_amoled">Cool Amoled</string>
+    <string name="preset_extreme_amoled">Amoled Extremo</string>
+    <string name="preset_warm_amoled">Calentar Amoled</string>
+    <string name="preset_hybrid_mamba">Mamba híbrida</string>
+</resources>
diff --git a/parts/res/values-et-rEE/strings.xml b/XiaomiParts/res/values-et-rEE/strings.xml
similarity index 100%
rename from parts/res/values-et-rEE/strings.xml
rename to XiaomiParts/res/values-et-rEE/strings.xml
diff --git a/parts/res/values-eu-rES/strings.xml b/XiaomiParts/res/values-eu-rES/strings.xml
similarity index 100%
rename from parts/res/values-eu-rES/strings.xml
rename to XiaomiParts/res/values-eu-rES/strings.xml
diff --git a/parts/res/values-fa-rIR/strings.xml b/XiaomiParts/res/values-fa-rIR/strings.xml
similarity index 100%
rename from parts/res/values-fa-rIR/strings.xml
rename to XiaomiParts/res/values-fa-rIR/strings.xml
diff --git a/parts/res/values-fi-rFI/strings.xml b/XiaomiParts/res/values-fi-rFI/strings.xml
similarity index 100%
rename from parts/res/values-fi-rFI/strings.xml
rename to XiaomiParts/res/values-fi-rFI/strings.xml
diff --git a/parts/res/values-fr-rFR/strings.xml b/XiaomiParts/res/values-fr-rFR/strings.xml
similarity index 100%
rename from parts/res/values-fr-rFR/strings.xml
rename to XiaomiParts/res/values-fr-rFR/strings.xml
diff --git a/parts/res/values-gl-rES/strings.xml b/XiaomiParts/res/values-gl-rES/strings.xml
similarity index 100%
rename from parts/res/values-gl-rES/strings.xml
rename to XiaomiParts/res/values-gl-rES/strings.xml
diff --git a/parts/res/values-gu-rIN/strings.xml b/XiaomiParts/res/values-gu-rIN/strings.xml
similarity index 100%
rename from parts/res/values-gu-rIN/strings.xml
rename to XiaomiParts/res/values-gu-rIN/strings.xml
diff --git a/parts/res/values-ha-rHG/strings.xml b/XiaomiParts/res/values-ha-rHG/strings.xml
similarity index 100%
rename from parts/res/values-ha-rHG/strings.xml
rename to XiaomiParts/res/values-ha-rHG/strings.xml
diff --git a/parts/res/values-hi-rIN/strings.xml b/XiaomiParts/res/values-hi-rIN/strings.xml
similarity index 100%
rename from parts/res/values-hi-rIN/strings.xml
rename to XiaomiParts/res/values-hi-rIN/strings.xml
diff --git a/parts/res/values-hr-rHR/strings.xml b/XiaomiParts/res/values-hr-rHR/strings.xml
similarity index 100%
rename from parts/res/values-hr-rHR/strings.xml
rename to XiaomiParts/res/values-hr-rHR/strings.xml
diff --git a/parts/res/values-hu-rHU/strings.xml b/XiaomiParts/res/values-hu-rHU/strings.xml
similarity index 100%
rename from parts/res/values-hu-rHU/strings.xml
rename to XiaomiParts/res/values-hu-rHU/strings.xml
diff --git a/parts/res/values-hy-rAM/strings.xml b/XiaomiParts/res/values-hy-rAM/strings.xml
similarity index 100%
rename from parts/res/values-hy-rAM/strings.xml
rename to XiaomiParts/res/values-hy-rAM/strings.xml
diff --git a/parts/res/values-in-rID/strings.xml b/XiaomiParts/res/values-in-rID/strings.xml
similarity index 100%
rename from parts/res/values-in-rID/strings.xml
rename to XiaomiParts/res/values-in-rID/strings.xml
diff --git a/parts/res/values-it-rIT/strings.xml b/XiaomiParts/res/values-it-rIT/strings.xml
similarity index 100%
rename from parts/res/values-it-rIT/strings.xml
rename to XiaomiParts/res/values-it-rIT/strings.xml
diff --git a/parts/res/values-iw-rIL/strings.xml b/XiaomiParts/res/values-iw-rIL/strings.xml
similarity index 100%
rename from parts/res/values-iw-rIL/strings.xml
rename to XiaomiParts/res/values-iw-rIL/strings.xml
diff --git a/XiaomiParts/res/values-ja-rJP/strings.xml b/XiaomiParts/res/values-ja-rJP/strings.xml
new file mode 100644
index 0000000..dc0c289
--- /dev/null
+++ b/XiaomiParts/res/values-ja-rJP/strings.xml
@@ -0,0 +1,172 @@
+<?xml version="1.0" encoding="utf-8"?>
+<!-- Copyright (C) 2018 The Xiaomi-SDM660 Project
+
+     Licensed under the Apache License, Version 2.0 (the "License");
+     you may not use this file except in compliance with the License.
+     You may obtain a copy of the License at
+
+          http://www.apache.org/licenses/LICENSE-2.0
+
+     Unless required by applicable law or agreed to in writing, software
+     distributed under the License is distributed on an "AS IS" BASIS,
+     WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+     See the License for the specific language governing permissions and
+     limitations under the License.
+-->
+<resources>
+    <string name="advanced_settings">Xiaomi パーツ</string>
+    <string name="advanced_settings_summary">追加の設定</string>
+
+    <string name="camera_title">カメラ</string>
+    <string name="camera_hal3_title">Camera2 API の有効化</string>
+    <string name="camera_eis_title">EIS の有効化</string>
+
+    <string name="display_title">画面</string>
+
+    <!-- KCal -->
+    <string name="device_kcal_title">画面の色補正</string>
+
+    <!-- Ambient Display -->
+    <string name="ambient_display_xiaomi">Xiaomi Doze</string>
+    <string name="advanced_doze_summary">アンビエント画面</string>
+
+    <string name="torch_title">トーチ</string>
+    <string name="torch_brightness_title">明るさ</string>
+    <string name="vibration_title">振動フィードバック</string>
+    <string name="vibration_strength_title">強さ</string>
+
+    <!-- Spectrum Profiles -->
+    <string name="spectrum_profile_title">パフォーマンス</string>
+    <string name="spectrum_title">パフォーマンスの設定</string>
+    <string name="spectrum_summary">パフォーマンス設定を選択して下さい</string>
+    <string name="spectrum_dialogTitle">パフォーマンス設定を選択して下さい</string>
+
+    <!-- Values for Spectrum Presets -->
+    <string name="spectrum_performance">高性能</string>
+    <string name="spectrum_battery">省電力</string>
+    <string name="spectrum_gaming">ゲーム</string>
+    <string name="spectrum_balance">バランス</string>
+    <string name="spectrum_extreme_battery">超省電力</string>
+
+    <!-- FP Actions -->
+    <string name="fp_title">指紋</string>
+    <string name="fpaction_enabled">カスタム指紋アクションの有効化</string>
+    <string name="fpshutter_summary">有効にしてカメラを起動する</string>
+    <string name="fp_shutter">指紋シャッター</string>
+    <string name="fpaction_dialogTitle">アクション</string>
+    <string name="fpaction_summary">アクションを選択</string>
+    <string name="fpaction_title">指紋アクション</string>
+    <string name="fpaction_up_title">上スワイプ</string>
+    <string name="fpaction_down_title">下スワイプ</string>
+    <string name="fpaction_left_title">左スワイプ</string>
+    <string name="fpaction_right_title">右スワイプ</string>
+
+    <!-- Values for FP Actions -->
+    <string name="fpaction_none">なし</string>
+    <string name="fpaction_expand_np">拡張通知パネル</string>
+    <string name="fpaction_expand_qs">拡張クイック設定</string>
+    <string name="fpaction_assistant">アシスタント</string>
+    <string name="fpaction_home">ホーム</string>
+    <string name="fpaction_recent_apps">アプリ履歴</string>
+    <string name="fpaction_media_next">次のメディア</string>
+    <string name="fpaction_media_play_pause">メディアの 再生/一時停止</string>
+    <string name="fpaction_media_previous">前のメディア</string>
+
+    <string name="audio_title">音楽</string>
+
+    <!-- Dirac settings -->
+    <string name="dirac_title">Mi サウンドエンハンサー</string>
+    <string name="dirac_summary">オーディオ品質を最適化</string>
+    <string name="dirac_headset_title">ヘッドフォンの種類を選択</string>
+    <string name="dirac_preset_title">プリセットを選択してください</string>
+    <!-- Dirac settings: Headset types -->
+    <string name="dirac_headset_default">デフォルト</string>
+    <string name="dirac_headset_earbuds">Mi イヤーバッド</string>
+    <string name="dirac_headset_in_ear_2013">Mi インイヤー (2013)</string>
+    <string name="dirac_headset_piston_1">Mi ピストン 1</string>
+    <string name="dirac_headset_general">一般</string>
+    <string name="dirac_headset_general_inear">一般的なインイヤー型</string>
+    <string name="dirac_headset_piston_basic">ベーシック版</string>
+    <string name="dirac_headset_piston_2">Mi ピストン 2</string>
+    <string name="dirac_headset_piston_standard">スタンダード版</string>
+    <string name="dirac_headset_headphone">Mi ヘッドフォン</string>
+    <string name="dirac_headset_piston_youth">青春版</string>
+    <string name="dirac_headset_piston_color">カラー版</string>
+    <string name="dirac_headset_in_ear">Mi インイヤー</string>
+    <string name="dirac_headset_capsule">Mi カプセル</string>
+    <string name="dirac_headset_in_ear_pro">Mi インイヤー Pro</string>
+    <string name="dirac_headset_comfort">Mi コンフォート</string>
+    <string name="dirac_headset_reduction_noise">Mi ノイズキャンセリング Type-C</string>
+    <string name="dirac_headset_cancelling">Mi ノイズキャンセリング 3.5mm</string>
+    <string name="dirac_headset_half_in_ear">Mi ハーフインイヤー</string>
+    <string name="dirac_headset_in_ear2">Mi インイヤー2</string>
+    <string name="dirac_headset_earphone_basic">Mi イヤフォン ベーシック</string>
+    <string name="dirac_headset_earphone">Mi イヤホン</string>
+    <!-- Dirac settings: Equalizer presets -->
+    <string name="dirac_preset_default">デフォルト</string>
+    <string name="dirac_preset_rock">ロック</string>
+    <string name="dirac_preset_jazz">ジャズ</string>
+    <string name="dirac_preset_pop">ポップ</string>
+    <string name="dirac_preset_classical">クラシック</string>
+    <string name="dirac_preset_hiphop">ヒップホップ</string>
+    <string name="dirac_preset_blues">ブルース</string>
+    <string name="dirac_preset_electronic">エレクトロニック</string>
+    <string name="dirac_preset_country">カントリー</string>
+    <string name="dirac_preset_dance">ダンス</string>
+    <string name="dirac_preset_metal">メタル</string>
+
+    <!-- Audio amplification -->
+    <string name="headphone_gain">ヘッドホンゲイン</string>
+    <string name="microphone_gain">マイクゲイン</string>
+
+    <!-- kcal -->
+    <string name="advanced_settings_kcal">画面の色補正</string>
+    <string name="cat_colormanagement">色の設定</string>
+    <string name="cat_calibration">画面の補正</string>
+
+    <string name="kcal_enabled">ON</string>
+    <string name="kcal_disabled">OFF</string>
+    <string name="set_on_boot">起動時に設定</string>
+    <string name="color_red">赤</string>
+    <string name="color_green">緑</string>
+    <string name="color_blue">青</string>
+    <string name="color_minimum">最小</string>
+    <string name="saturation">彩度</string>
+    <string name="value">値</string>
+    <string name="contrast">コントラスト</string>
+    <string name="hue">色相</string>
+    <string name="grayscale">グレースケール画面</string>
+
+    <string name="presets_dialog_title">プリセットを選択</string>
+    <!-- Presets -->
+    <string name="preset_default">既定</string>
+    <string name="preset_version_1">バージョン 1</string>
+    <string name="preset_version_2">バージョン 2</string>
+    <string name="preset_version_3">バージョン 3</string>
+    <string name="preset_triluminous">トリルミナス</string>
+    <string name="preset_deep_black_white">深い黒と白</string>
+    <string name="preset_deep_natural">ディープナチュラル</string>
+    <string name="preset_cool_amoled">寒色 AMOLED</string>
+    <string name="preset_extreme_amoled">エクストリーム AMOLED</string>
+    <string name="preset_warm_amoled">暖色 AMOLED</string>
+    <string name="preset_hybrid_mamba">Hybrid Mamba</string>
+
+    <!-- usb fastcharge -->
+    <string name="usb_fastcharge_title">USB 急速充電</string>
+    <string name="fastcharge_title">USB 急速充電の有効化</string>
+    <string name="fastcharge_summary">USB ポートと PC を接続した時に急速充電を使う</string>
+
+    <!-- menu -->
+    <string name="kcal_presets" translatable="false">@string/presets_dialog_title</string>
+    <string name="kcal_reset">リセット</string>
+
+    <!-- CustomSeekBarPreference -->
+    <string name="edit_value">新しい値を選択して下さい</string>
+    <string name="default_value">既定値</string>
+    <string name="edit_hint">値は %1$d と %2$d の間です</string>
+     
+     <!-- Flip cover wake -->
+     <string name="hall_wakeup_title">フリップカバーの復帰</string>
+     <string name="hall_title">フリップカバーの復帰の有効化</string>
+     <string name="hall_wakeup_summary">マグネットフリップカバーでスリープ解除する</string>
+</resources>
diff --git a/parts/res/values-ka-rGE/strings.xml b/XiaomiParts/res/values-ka-rGE/strings.xml
similarity index 100%
rename from parts/res/values-ka-rGE/strings.xml
rename to XiaomiParts/res/values-ka-rGE/strings.xml
diff --git a/parts/res/values-kk-rKZ/strings.xml b/XiaomiParts/res/values-kk-rKZ/strings.xml
similarity index 100%
rename from parts/res/values-kk-rKZ/strings.xml
rename to XiaomiParts/res/values-kk-rKZ/strings.xml
diff --git a/parts/res/values-km-rKH/strings.xml b/XiaomiParts/res/values-km-rKH/strings.xml
similarity index 100%
rename from parts/res/values-km-rKH/strings.xml
rename to XiaomiParts/res/values-km-rKH/strings.xml
diff --git a/parts/res/values-kn-rIN/strings.xml b/XiaomiParts/res/values-kn-rIN/strings.xml
similarity index 100%
rename from parts/res/values-kn-rIN/strings.xml
rename to XiaomiParts/res/values-kn-rIN/strings.xml
diff --git a/XiaomiParts/res/values-ko-rKR/strings.xml b/XiaomiParts/res/values-ko-rKR/strings.xml
new file mode 100644
index 0000000..f4032b3
--- /dev/null
+++ b/XiaomiParts/res/values-ko-rKR/strings.xml
@@ -0,0 +1,145 @@
+<?xml version="1.0" encoding="utf-8"?>
+<!--Generated by crowdin.com-->
+<!--
+     Copyright (C) 2018 The PixelExperience Project
+
+     Licensed under the Apache License, Version 2.0 (the "License");
+     you may not use this file except in compliance with the License.
+     You may obtain a copy of the License at
+
+          http://www.apache.org/licenses/LICENSE-2.0
+
+     Unless required by applicable law or agreed to in writing, software
+     distributed under the License is distributed on an "AS IS" BASIS,
+     WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+     See the License for the specific language governing permissions and
+     limitations under the License.
+-->
+<resources>
+    <string name="advanced_settings">샤오미 설정</string>
+    <string name="advanced_settings_summary">기타 설정</string>
+
+    <string name="camera_title">카메라</string>
+    <string name="camera_hal3_title">Camera2 API 활성화</string>
+    <string name="camera_eis_title">전자식 손떨림 방지 활성화</string>
+
+    <string name="display_title">디스플레이</string>
+
+    <!-- KCal -->
+    <string name="device_kcal_title">디스플레이 컬러 캘리브레이션</string>
+
+    <!-- Ambient Display -->
+    <string name="ambient_display_xiaomi">Xiaomi Doze</string>
+    <string name="advanced_doze_summary">앰비언트 디스플레이</string>
+
+    <string name="torch_title">손전등</string>
+    <string name="torch_brightness_title">밝기</string>
+    <string name="vibration_title">햅틱 피드백</string>
+    <string name="vibration_strength_title">세기</string>
+
+    <!-- Spectrum Profiles -->
+    <string name="spectrum_profile_title">성능</string>
+    <string name="spectrum_title">성능 설정</string>
+    <string name="spectrum_summary">성능 설정 선택</string>
+    <string name="spectrum_dialogTitle">성능 설정 선택</string>
+
+    <!-- Values for Spectrum Presets -->
+    <string name="spectrum_performance">성능 향상</string>
+    <string name="spectrum_battery">배터리 향상</string>
+    <string name="spectrum_gaming">게이밍 최적화</string>
+    <string name="spectrum_balance">균형 설정</string>
+    <string name="spectrum_extreme_battery">배터리 매우 향상</string>
+
+    <!-- FP Actions -->
+    <string name="fp_title">지문 인식</string>
+    <string name="fpaction_enabled">사용자 설정 지문 인식 기능 활성화</string>
+    <string name="fpshutter_summary">카메라가 실행되어 있을 때 셔터 키를 동작합니다.</string>
+    <string name="fp_shutter">지문 셔터 키</string>
+    <string name="fpaction_dialogTitle">기능</string>
+    <string name="fpaction_summary">기능 선택</string>
+    <string name="fpaction_title">지문 인식 제스쳐 기능</string>
+
+    <!-- Values for FP Actions -->
+    <string name="fpaction_expand_np">알림 패널 확장</string>
+    <string name="fpaction_expand_qs">빠른 설정 확장</string>
+    <string name="fpaction_assistant">어시스턴트</string>
+    <string name="fpaction_home">홈</string>
+    <string name="fpaction_recent_apps">최근 앱 보기</string>
+    <string name="fpaction_media_next">미디어 다음 트랙</string>
+    <string name="fpaction_media_play_pause">미디어 재생/일시정지</string>
+    <string name="fpaction_media_previous">미디어 이전 트랙</string>
+
+    <string name="audio_title">오디오</string>
+
+    <!-- Dirac settings -->
+    <string name="dirac_title">Mi 사운드 강화</string>
+    <string name="dirac_summary">음질 최적화</string>
+    <string name="dirac_headset_title">헤드폰 유형 선택</string>
+    <string name="dirac_preset_title">프리셋 선택</string>
+    <!-- Dirac settings: Headset types -->
+    <string name="dirac_headset_default">기본</string>
+    <string name="dirac_headset_earbuds">Mi 이어버드</string>
+    <string name="dirac_headset_in_ear_2013">Mi 인이어 (2013)</string>
+    <string name="dirac_headset_piston_1">Mi 피스톤 1</string>
+    <string name="dirac_headset_general">일반</string>
+    <string name="dirac_headset_general_inear">일반 이어폰</string>
+    <string name="dirac_headset_piston_basic">기본 에디션</string>
+    <string name="dirac_headset_piston_2">Mi 피스톤 2</string>
+    <string name="dirac_headset_piston_standard">표준 에디션</string>
+    <string name="dirac_headset_headphone">Mi 헤드폰</string>
+    <string name="dirac_headset_piston_youth">청소년 에디션</string>
+    <string name="dirac_headset_piston_color">컬러 에디션</string>
+    <string name="dirac_headset_in_ear">Mi 이어폰</string>
+    <string name="dirac_headset_capsule">Mi 캡슐</string>
+    <string name="dirac_headset_in_ear_pro">Mi 인이어 프로</string>
+    <string name="dirac_headset_comfort">Mi Comfort</string>
+    <string name="dirac_headset_reduction_noise">Mi 노이즈 캔슬링 Type-C</string>
+    <string name="dirac_headset_cancelling">Mi 노이즈 캔슬링 3.5mm</string>
+    <string name="dirac_headset_half_in_ear">Mi 하프 인이어</string>
+    <string name="dirac_headset_in_ear2">Mi 인이어 2</string>
+    <string name="dirac_headset_earphone_basic">Mi 이어폰 베이직</string>
+    <string name="dirac_headset_earphone">Mi 이어폰</string>
+    <!-- Dirac settings: Equalizer presets -->
+    <string name="dirac_preset_default">기본</string>
+    <string name="dirac_preset_rock">락</string>
+    <string name="dirac_preset_jazz">재즈</string>
+    <string name="dirac_preset_pop">팝</string>
+    <string name="dirac_preset_classical">클래식</string>
+    <string name="dirac_preset_hiphop">힙합</string>
+    <string name="dirac_preset_blues">블루스</string>
+    <string name="dirac_preset_electronic">일렉트로닉</string>
+    <string name="dirac_preset_country">컨트리</string>
+    <string name="dirac_preset_dance">댄스</string>
+    <string name="dirac_preset_metal">메탈</string>
+
+    <string name="advanced_settings_kcal">디스플레이 컬러 캘리브레이션</string>
+    <string name="cat_calibration">디스플레이 캘리브레이션</string>
+    <string name="kcal_enabled">활성화</string>
+    <string name="set_on_boot">부팅 시 설정</string>
+    <string name="kcal_disabled">비활성화</string>
+    <string name="color_red">빨강</string>
+    <string name="color_green">초록</string>
+    <string name="color_blue">파랑</string>
+    <string name="color_minimum">최소값</string>
+    <string name="saturation">채도</string>
+    <string name="value">명도</string>
+    <string name="contrast">대비</string>
+    <string name="hue">색상</string>
+    <string name="cat_colormanagement">컬러 설정</string>
+    <string name="kcal_reset">초기화</string>
+    <string name="edit_value">새 값 선택</string>
+
+    <string name="presets_dialog_title">프리셋 선택</string>
+    <!-- Presets -->
+    <string name="preset_default">기본값</string>
+    <string name="preset_version_1">버전 1</string>
+    <string name="preset_version_2">버전 2</string>
+    <string name="preset_version_3">버전 3</string>
+    <string name="preset_triluminous">트리루미너스</string>
+    <string name="preset_deep_black_white">깊은 흑백의 색감</string>
+    <string name="preset_deep_natural">진한 자연의 색감</string>
+    <string name="preset_cool_amoled">차가운 아몰레드 색감</string>
+    <string name="preset_extreme_amoled">진한 아몰레드 색감</string>
+    <string name="preset_warm_amoled">따뜻한 아몰레드 색감</string>
+    <string name="preset_hybrid_mamba">하이브리드 맘바</string>
+</resources>
diff --git a/parts/res/values-lt-rLT/strings.xml b/XiaomiParts/res/values-lt-rLT/strings.xml
similarity index 100%
rename from parts/res/values-lt-rLT/strings.xml
rename to XiaomiParts/res/values-lt-rLT/strings.xml
diff --git a/parts/res/values-lv-rLV/strings.xml b/XiaomiParts/res/values-lv-rLV/strings.xml
similarity index 100%
rename from parts/res/values-lv-rLV/strings.xml
rename to XiaomiParts/res/values-lv-rLV/strings.xml
diff --git a/parts/res/values-mk-rMK/strings.xml b/XiaomiParts/res/values-mk-rMK/strings.xml
similarity index 100%
rename from parts/res/values-mk-rMK/strings.xml
rename to XiaomiParts/res/values-mk-rMK/strings.xml
diff --git a/parts/res/values-ml-rIN/strings.xml b/XiaomiParts/res/values-ml-rIN/strings.xml
similarity index 100%
rename from parts/res/values-ml-rIN/strings.xml
rename to XiaomiParts/res/values-ml-rIN/strings.xml
diff --git a/parts/res/values-mr-rIN/strings.xml b/XiaomiParts/res/values-mr-rIN/strings.xml
similarity index 100%
rename from parts/res/values-mr-rIN/strings.xml
rename to XiaomiParts/res/values-mr-rIN/strings.xml
diff --git a/parts/res/values-ms-rMY/strings.xml b/XiaomiParts/res/values-ms-rMY/strings.xml
similarity index 100%
rename from parts/res/values-ms-rMY/strings.xml
rename to XiaomiParts/res/values-ms-rMY/strings.xml
diff --git a/parts/res/values-mt-rMT/strings.xml b/XiaomiParts/res/values-mt-rMT/strings.xml
similarity index 100%
rename from parts/res/values-mt-rMT/strings.xml
rename to XiaomiParts/res/values-mt-rMT/strings.xml
diff --git a/parts/res/values-my-rMM/strings.xml b/XiaomiParts/res/values-my-rMM/strings.xml
similarity index 100%
rename from parts/res/values-my-rMM/strings.xml
rename to XiaomiParts/res/values-my-rMM/strings.xml
diff --git a/parts/res/values-nb-rNO/strings.xml b/XiaomiParts/res/values-nb-rNO/strings.xml
similarity index 100%
rename from parts/res/values-nb-rNO/strings.xml
rename to XiaomiParts/res/values-nb-rNO/strings.xml
diff --git a/parts/res/values-ne-rIN/strings.xml b/XiaomiParts/res/values-ne-rIN/strings.xml
similarity index 100%
rename from parts/res/values-ne-rIN/strings.xml
rename to XiaomiParts/res/values-ne-rIN/strings.xml
diff --git a/parts/res/values-ne-rNP/strings.xml b/XiaomiParts/res/values-ne-rNP/strings.xml
similarity index 100%
rename from parts/res/values-ne-rNP/strings.xml
rename to XiaomiParts/res/values-ne-rNP/strings.xml
diff --git a/parts/res/values-nl-rNL/strings.xml b/XiaomiParts/res/values-nl-rNL/strings.xml
similarity index 100%
rename from parts/res/values-nl-rNL/strings.xml
rename to XiaomiParts/res/values-nl-rNL/strings.xml
diff --git a/parts/res/values-or-rIN/strings.xml b/XiaomiParts/res/values-or-rIN/strings.xml
similarity index 100%
rename from parts/res/values-or-rIN/strings.xml
rename to XiaomiParts/res/values-or-rIN/strings.xml
diff --git a/parts/res/values-pa-rIN/strings.xml b/XiaomiParts/res/values-pa-rIN/strings.xml
similarity index 100%
rename from parts/res/values-pa-rIN/strings.xml
rename to XiaomiParts/res/values-pa-rIN/strings.xml
diff --git a/parts/res/values-pl-rPL/strings.xml b/XiaomiParts/res/values-pl-rPL/strings.xml
similarity index 100%
rename from parts/res/values-pl-rPL/strings.xml
rename to XiaomiParts/res/values-pl-rPL/strings.xml
diff --git a/parts/res/values-pt-rBR/strings.xml b/XiaomiParts/res/values-pt-rBR/strings.xml
similarity index 100%
rename from parts/res/values-pt-rBR/strings.xml
rename to XiaomiParts/res/values-pt-rBR/strings.xml
diff --git a/parts/res/values-pt-rPT/strings.xml b/XiaomiParts/res/values-pt-rPT/strings.xml
similarity index 100%
rename from parts/res/values-pt-rPT/strings.xml
rename to XiaomiParts/res/values-pt-rPT/strings.xml
diff --git a/parts/res/values-ro-rRO/strings.xml b/XiaomiParts/res/values-ro-rRO/strings.xml
similarity index 100%
rename from parts/res/values-ro-rRO/strings.xml
rename to XiaomiParts/res/values-ro-rRO/strings.xml
diff --git a/XiaomiParts/res/values-ru-rRU/strings.xml b/XiaomiParts/res/values-ru-rRU/strings.xml
new file mode 100644
index 0000000..96bc449
--- /dev/null
+++ b/XiaomiParts/res/values-ru-rRU/strings.xml
@@ -0,0 +1,152 @@
+<?xml version="1.0" encoding="utf-8"?>
+<!-- Copyright (C) 2018 The Xiaomi-SDM660 Project
+
+     Licensed under the Apache License, Version 2.0 (the "License");
+     you may not use this file except in compliance with the License.
+     You may obtain a copy of the License at
+
+          http://www.apache.org/licenses/LICENSE-2.0
+
+     Unless required by applicable law or agreed to in writing, software
+     distributed under the License is distributed on an "AS IS" BASIS,
+     WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+     See the License for the specific language governing permissions and
+     limitations under the License.
+	 
+	 Translated with <3 by pqhaz
+-->
+<resources>
+    <string name="advanced_settings">Настройки Xiaomi</string>
+    <string name="advanced_settings_summary">Дополнительные настройки</string>
+
+    <string name="camera_title">Камера</string>
+    <string name="camera_hal3_title">Включить Cam2API</string>
+
+    <string name="display_title">Экран</string>
+
+    <!-- KCal -->
+    <string name="device_kcal_title">Калибрация цвета экрана</string>
+
+    <!-- Ambient Display -->
+    <string name="ambient_display_xiaomi">Дозе Xiaomi</string>
+    <string name="advanced_doze_summary">Ambient экран</string>
+
+    <string name="torch_title">Фонарик</string>
+    <string name="torch_brightness_title">Яркость</string>
+    <string name="vibration_title">Вибрация</string>
+    <string name="vibration_strength_title">Сила</string>
+
+    <!-- Spectrum Profiles -->
+    <string name="spectrum_profile_title">Производительность</string>
+    <string name="spectrum_title">Настройки производительности</string>
+    <string name="spectrum_summary">Выберите Ваш профил производительности</string>
+    <string name="spectrum_dialogTitle">Выберите Ваш профил производительности</string>
+
+    <!-- Values for Spectrum Presets -->
+    <string name="spectrum_performance">Производительность</string>
+    <string name="spectrum_battery">Энергосбережение</string>
+    <string name="spectrum_gaming">Игры</string>
+    <string name="spectrum_balance">Баланс</string>
+    <string name="spectrum_extreme_battery">Экстримное энергосбережение</string>
+
+    <!-- FP Actions -->
+    <string name="fp_title">Отпечаток пальца</string>
+    <string name="fpaction_enabled">Включить кастомные действия отпечатка пальца</string>
+    <string name="fpshutter_summary">Включать камеру если активно</string>
+    <string name="fp_shutter">Затвор отпечатком пальца</string>
+    <string name="fpaction_dialogTitle">Действие</string>
+    <string name="fpaction_summary">Выберите действие</string>
+    <string name="fpaction_title">Действия отпечатком пальца</string>
+    <string name="fpaction_up_title">Свайп вверх</string>
+    <string name="fpaction_down_title">Свайп вниз</string>
+    <string name="fpaction_left_title">Свайп влево</string>
+    <string name="fpaction_right_title">Свайп вправо</string>
+
+    <!-- Values for FP Actions -->
+    <string name="fpaction_none">Ничего</string>
+    <string name="fpaction_expand_np">Разворачивать панель уведомлений</string>
+    <string name="fpaction_expand_qs">Разворачивать быстрые настройки</string>
+    <string name="fpaction_assistant">Ассистент</string>
+    <string name="fpaction_home">Домой</string>
+    <string name="fpaction_recent_apps">Недавние приложения</string>
+    <string name="fpaction_media_next">Следующее медиа</string>
+    <string name="fpaction_media_play_pause">Медиа играть/пауза</string>
+    <string name="fpaction_media_previous">Превью медиа</string>
+
+    <string name="audio_title">Аудио</string>
+
+    <!-- Dirac settings -->
+    <string name="dirac_title">Mi Оптимизатор звука</string>
+    <string name="dirac_summary">Oтимизирует качество звучания</string>
+    <string name="dirac_headset_title">Выберите тип наушников</string>
+    <string name="dirac_preset_title">Выберите пресет</string>
+
+    <!-- Dirac settings: Headset types -->
+    <string name="dirac_headset_default">По умолчанию</string>
+    <string name="dirac_headset_earbuds">Mi Earbuds</string>
+    <string name="dirac_headset_in_ear_2013">Mi In-Ear (2013)</string>
+    <string name="dirac_headset_piston_1">Mi Piston-1</string>
+    <string name="dirac_headset_general">General</string>
+    <string name="dirac_headset_general_inear">General In-Ear</string>
+    <string name="dirac_headset_piston_basic">Basic Edition</string>
+    <string name="dirac_headset_piston_2">Mi Piston-2</string>
+    <string name="dirac_headset_piston_standard">Standard Edition</string>
+    <string name="dirac_headset_headphone">Mi Headphones</string>
+    <string name="dirac_headset_piston_youth">Youth Edition</string>
+    <string name="dirac_headset_piston_color">Color Edition</string>
+    <string name="dirac_headset_in_ear">Mi In-Ear</string>
+    <string name="dirac_headset_capsule">Mi Capsule</string>
+    <string name="dirac_headset_in_ear_pro">Mi In-Ear Pro</string>
+    <string name="dirac_headset_comfort">Mi Comfort</string>
+    <string name="dirac_headset_reduction_noise">Mi Noise Cancelling Type-C</string>
+    <string name="dirac_headset_cancelling">Mi Noise Cancelling 3.5mm</string>
+    <string name="dirac_headset_half_in_ear">Mi Half In-Ear</string>
+    <string name="dirac_headset_in_ear2">Mi In-Ear 2</string>
+    <string name="dirac_headset_earphone_basic">Mi Earphones Basic</string>
+    <string name="dirac_headset_earphone">Mi Earphones</string>
+
+    <!-- Dirac settings: Equalizer presets -->
+    <string name="dirac_preset_default">По умолчанию</string>
+    <string name="dirac_preset_rock">Рок</string>
+    <string name="dirac_preset_jazz">Джаз</string>
+    <string name="dirac_preset_pop">Поп</string>
+    <string name="dirac_preset_classical">Классика</string>
+    <string name="dirac_preset_hiphop">Хип-хоп</string>
+    <string name="dirac_preset_blues">Блюз</string>
+    <string name="dirac_preset_electronic">Электроника</string>
+    <string name="dirac_preset_country">Кантри</string>
+    <string name="dirac_preset_dance">Танцевальная</string>
+    <string name="dirac_preset_metal">Металл</string>
+
+    <!-- Audio amplification -->
+    <string name="headphone_gain">Усиление для наушников</string>
+    <string name="microphone_gain">Усиление для микрофона</string>
+
+    <!-- kcal -->
+    <string name="advanced_settings_kcal">Калибрация цвета экрана</string>
+    <string name="cat_colormanagement">Настройки цвета</string>
+    <string name="cat_calibration">Калибрация экрана</string>
+
+    <string name="kcal_enabled">Включено</string>
+    <string name="kcal_disabled">Выключено</string>
+    <string name="set_on_boot">Включать при загрузке</string>
+    <string name="color_red">Красный</string>
+    <string name="color_green">Зелёный</string>
+    <string name="color_blue">Синий</string>
+    <string name="color_minimum">Минимум</string>
+    <string name="saturation">Насыщеность</string>
+    <string name="value">Значение</string>
+    <string name="contrast">Контраст</string>
+    <string name="hue">Оттенок</string>
+    <string name="grayscale">Экран в оттенках серого</string>
+
+    <string name="presets_dialog_title">Выберите пресет</string>
+
+    <!-- menu -->
+    <string name="kcal_reset">Вернуть пресет по умолчанию</string>
+
+    <!-- CustomSeekBarPreference -->
+    <string name="edit_value">Выбрать новое значение</string>
+    <string name="default_value">Значение по умолчанию</string>
+    <string name="edit_hint">Значение между %1$d и %2$d</string>
+</resources>
diff --git a/XiaomiParts/res/values-ru/strings.xml b/XiaomiParts/res/values-ru/strings.xml
new file mode 100644
index 0000000..96bc449
--- /dev/null
+++ b/XiaomiParts/res/values-ru/strings.xml
@@ -0,0 +1,152 @@
+<?xml version="1.0" encoding="utf-8"?>
+<!-- Copyright (C) 2018 The Xiaomi-SDM660 Project
+
+     Licensed under the Apache License, Version 2.0 (the "License");
+     you may not use this file except in compliance with the License.
+     You may obtain a copy of the License at
+
+          http://www.apache.org/licenses/LICENSE-2.0
+
+     Unless required by applicable law or agreed to in writing, software
+     distributed under the License is distributed on an "AS IS" BASIS,
+     WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+     See the License for the specific language governing permissions and
+     limitations under the License.
+	 
+	 Translated with <3 by pqhaz
+-->
+<resources>
+    <string name="advanced_settings">Настройки Xiaomi</string>
+    <string name="advanced_settings_summary">Дополнительные настройки</string>
+
+    <string name="camera_title">Камера</string>
+    <string name="camera_hal3_title">Включить Cam2API</string>
+
+    <string name="display_title">Экран</string>
+
+    <!-- KCal -->
+    <string name="device_kcal_title">Калибрация цвета экрана</string>
+
+    <!-- Ambient Display -->
+    <string name="ambient_display_xiaomi">Дозе Xiaomi</string>
+    <string name="advanced_doze_summary">Ambient экран</string>
+
+    <string name="torch_title">Фонарик</string>
+    <string name="torch_brightness_title">Яркость</string>
+    <string name="vibration_title">Вибрация</string>
+    <string name="vibration_strength_title">Сила</string>
+
+    <!-- Spectrum Profiles -->
+    <string name="spectrum_profile_title">Производительность</string>
+    <string name="spectrum_title">Настройки производительности</string>
+    <string name="spectrum_summary">Выберите Ваш профил производительности</string>
+    <string name="spectrum_dialogTitle">Выберите Ваш профил производительности</string>
+
+    <!-- Values for Spectrum Presets -->
+    <string name="spectrum_performance">Производительность</string>
+    <string name="spectrum_battery">Энергосбережение</string>
+    <string name="spectrum_gaming">Игры</string>
+    <string name="spectrum_balance">Баланс</string>
+    <string name="spectrum_extreme_battery">Экстримное энергосбережение</string>
+
+    <!-- FP Actions -->
+    <string name="fp_title">Отпечаток пальца</string>
+    <string name="fpaction_enabled">Включить кастомные действия отпечатка пальца</string>
+    <string name="fpshutter_summary">Включать камеру если активно</string>
+    <string name="fp_shutter">Затвор отпечатком пальца</string>
+    <string name="fpaction_dialogTitle">Действие</string>
+    <string name="fpaction_summary">Выберите действие</string>
+    <string name="fpaction_title">Действия отпечатком пальца</string>
+    <string name="fpaction_up_title">Свайп вверх</string>
+    <string name="fpaction_down_title">Свайп вниз</string>
+    <string name="fpaction_left_title">Свайп влево</string>
+    <string name="fpaction_right_title">Свайп вправо</string>
+
+    <!-- Values for FP Actions -->
+    <string name="fpaction_none">Ничего</string>
+    <string name="fpaction_expand_np">Разворачивать панель уведомлений</string>
+    <string name="fpaction_expand_qs">Разворачивать быстрые настройки</string>
+    <string name="fpaction_assistant">Ассистент</string>
+    <string name="fpaction_home">Домой</string>
+    <string name="fpaction_recent_apps">Недавние приложения</string>
+    <string name="fpaction_media_next">Следующее медиа</string>
+    <string name="fpaction_media_play_pause">Медиа играть/пауза</string>
+    <string name="fpaction_media_previous">Превью медиа</string>
+
+    <string name="audio_title">Аудио</string>
+
+    <!-- Dirac settings -->
+    <string name="dirac_title">Mi Оптимизатор звука</string>
+    <string name="dirac_summary">Oтимизирует качество звучания</string>
+    <string name="dirac_headset_title">Выберите тип наушников</string>
+    <string name="dirac_preset_title">Выберите пресет</string>
+
+    <!-- Dirac settings: Headset types -->
+    <string name="dirac_headset_default">По умолчанию</string>
+    <string name="dirac_headset_earbuds">Mi Earbuds</string>
+    <string name="dirac_headset_in_ear_2013">Mi In-Ear (2013)</string>
+    <string name="dirac_headset_piston_1">Mi Piston-1</string>
+    <string name="dirac_headset_general">General</string>
+    <string name="dirac_headset_general_inear">General In-Ear</string>
+    <string name="dirac_headset_piston_basic">Basic Edition</string>
+    <string name="dirac_headset_piston_2">Mi Piston-2</string>
+    <string name="dirac_headset_piston_standard">Standard Edition</string>
+    <string name="dirac_headset_headphone">Mi Headphones</string>
+    <string name="dirac_headset_piston_youth">Youth Edition</string>
+    <string name="dirac_headset_piston_color">Color Edition</string>
+    <string name="dirac_headset_in_ear">Mi In-Ear</string>
+    <string name="dirac_headset_capsule">Mi Capsule</string>
+    <string name="dirac_headset_in_ear_pro">Mi In-Ear Pro</string>
+    <string name="dirac_headset_comfort">Mi Comfort</string>
+    <string name="dirac_headset_reduction_noise">Mi Noise Cancelling Type-C</string>
+    <string name="dirac_headset_cancelling">Mi Noise Cancelling 3.5mm</string>
+    <string name="dirac_headset_half_in_ear">Mi Half In-Ear</string>
+    <string name="dirac_headset_in_ear2">Mi In-Ear 2</string>
+    <string name="dirac_headset_earphone_basic">Mi Earphones Basic</string>
+    <string name="dirac_headset_earphone">Mi Earphones</string>
+
+    <!-- Dirac settings: Equalizer presets -->
+    <string name="dirac_preset_default">По умолчанию</string>
+    <string name="dirac_preset_rock">Рок</string>
+    <string name="dirac_preset_jazz">Джаз</string>
+    <string name="dirac_preset_pop">Поп</string>
+    <string name="dirac_preset_classical">Классика</string>
+    <string name="dirac_preset_hiphop">Хип-хоп</string>
+    <string name="dirac_preset_blues">Блюз</string>
+    <string name="dirac_preset_electronic">Электроника</string>
+    <string name="dirac_preset_country">Кантри</string>
+    <string name="dirac_preset_dance">Танцевальная</string>
+    <string name="dirac_preset_metal">Металл</string>
+
+    <!-- Audio amplification -->
+    <string name="headphone_gain">Усиление для наушников</string>
+    <string name="microphone_gain">Усиление для микрофона</string>
+
+    <!-- kcal -->
+    <string name="advanced_settings_kcal">Калибрация цвета экрана</string>
+    <string name="cat_colormanagement">Настройки цвета</string>
+    <string name="cat_calibration">Калибрация экрана</string>
+
+    <string name="kcal_enabled">Включено</string>
+    <string name="kcal_disabled">Выключено</string>
+    <string name="set_on_boot">Включать при загрузке</string>
+    <string name="color_red">Красный</string>
+    <string name="color_green">Зелёный</string>
+    <string name="color_blue">Синий</string>
+    <string name="color_minimum">Минимум</string>
+    <string name="saturation">Насыщеность</string>
+    <string name="value">Значение</string>
+    <string name="contrast">Контраст</string>
+    <string name="hue">Оттенок</string>
+    <string name="grayscale">Экран в оттенках серого</string>
+
+    <string name="presets_dialog_title">Выберите пресет</string>
+
+    <!-- menu -->
+    <string name="kcal_reset">Вернуть пресет по умолчанию</string>
+
+    <!-- CustomSeekBarPreference -->
+    <string name="edit_value">Выбрать новое значение</string>
+    <string name="default_value">Значение по умолчанию</string>
+    <string name="edit_hint">Значение между %1$d и %2$d</string>
+</resources>
diff --git a/XiaomiParts/res/values-sk-rSK/strings.xml b/XiaomiParts/res/values-sk-rSK/strings.xml
new file mode 100644
index 0000000..6ef45e8
--- /dev/null
+++ b/XiaomiParts/res/values-sk-rSK/strings.xml
@@ -0,0 +1,127 @@
+<?xml version="1.0" encoding="utf-8"?>
+<!-- Copyright (C) 2018 The Xiaomi-SDM660 Project
+
+     Licensed under the Apache License, Version 2.0 (the "License");
+     you may not use this file except in compliance with the License.
+     You may obtain a copy of the License at
+
+          http://www.apache.org/licenses/LICENSE-2.0
+
+     Unless required by applicable law or agreed to in writing, software
+     distributed under the License is distributed on an "AS IS" BASIS,
+     WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+     See the License for the specific language governing permissions and
+     limitations under the License.
+-->
+<resources>
+    <string name="advanced_settings">Xiaomi Parts</string>
+    <string name="advanced_settings_summary">Rozšírené nastavenia</string>
+    <string name="camera_title">Kamera</string>
+    <string name="camera_hal3_title">Aktivuj Camera2 API</string>
+    <string name="display_title">Displej</string>
+    <string name="device_kcal_title">Kalibrácia farieb</string>
+    <string name="torch_title">Baterka</string>
+    <string name="torch_brightness_title">Intenzita svietenia</string>
+    <string name="vibration_strength_title">Sila vibrácií</string>
+
+    <!-- Spectrum Profiles -->
+    <string name="spectrum_profile_title">Výkon</string>
+    <string name="spectrum_title">Nastavenia výkonu</string>
+    <string name="spectrum_summary">Výber nastavenia výkonu</string>
+    <string name="spectrum_dialogTitle">Výber nastavenia výkonu</string>
+
+    <string name="fp_title">Čítačka otlačku prsta</string>
+    <string name="fpaction_enabled">Aktivuj gestá čítačky otlačku prsta</string>
+    <string name="fpshutter_summary">Spraví snímku, keď aktívne</string>
+    <string name="fp_shutter">Čítačka otlačku prsta ako spúšť kamery</string>
+    <string name="fpaction_dialogTitle">Gestá</string>
+    <string name="fpaction_summary">Výber gesta</string>
+    <string name="fpaction_title">Gestá čítačky otlačku prsta</string>
+    <string name="spectrum_performance">Výkon</string>
+    <string name="spectrum_battery">Šetrič batérie</string>
+    <string name="spectrum_gaming">Gaming</string>
+    <string name="spectrum_balance">Vyvážený</string>
+    <string name="spectrum_extreme_battery">Extrémny šetrič batérie</string>
+    <string name="vibration_title">Vibrácie</string>
+    <string name="fpaction_expand_np">Rozviň panel s upozorneniami</string>
+    <string name="fpaction_expand_qs">Rozviň QS</string>
+    <string name="fpaction_assistant">Asistent</string>
+    <string name="fpaction_home">Domovská obrazovka</string>
+    <string name="fpaction_recent_apps">Nedávno otvorené aplikácie</string>
+
+    <!-- Dirac settings -->
+    <string name="dirac_title">Mi vylepšenie zvuku</string>
+    <string name="dirac_summary">Optimalizácia kvality zvuku</string>
+    <string name="dirac_headset_title">Výber typu slúchadiel</string>
+    <string name="dirac_preset_title">Výber profilu</string>
+    <!-- Dirac settings: Headset types -->
+    <string name="dirac_headset_default">Default</string>
+    <string name="dirac_headset_earbuds">Mi Earbuds</string>
+    <string name="dirac_headset_in_ear_2013">Mi In Ear (2013)</string>
+    <string name="dirac_headset_piston_1">Mi Piston 1</string>
+    <string name="dirac_headset_general">General Earbuds</string>
+    <string name="dirac_headset_general_inear">General In Ear</string>
+    <string name="dirac_headset_piston_basic">Basis Edition</string>
+    <string name="dirac_headset_piston_2">Mi Piston 2</string>
+    <string name="dirac_headset_piston_standard">Standard Edition</string>
+    <string name="dirac_headset_headphone">Mi Headphones</string>
+    <string name="dirac_headset_piston_youth">Youth Edition</string>
+    <string name="dirac_headset_piston_color">Color Edition</string>
+    <string name="dirac_headset_in_ear">Mi In Ear</string>
+    <string name="dirac_headset_capsule">Mi Capsule</string>
+    <string name="dirac_headset_in_ear_pro">Mi In Ear Pro</string>
+    <string name="dirac_headset_comfort">Mi Comfort</string>
+    <string name="dirac_headset_reduction_noise">Mi Noise Cancelling Type-C</string>
+    <string name="dirac_headset_cancelling">Mi Noise Cancelling 3.5mm</string>
+    <string name="dirac_headset_half_in_ear">Mi Half In Ear</string>
+    <string name="dirac_headset_in_ear2">Mi In Ear 2</string>
+    <string name="dirac_headset_earphone_basic">Mi Earphones Basic</string>
+    <string name="dirac_headset_earphone">Mi Earphones</string>
+    <!-- Dirac settings: Equalizer presets -->
+    <string name="dirac_preset_default">Standard</string>
+    <string name="dirac_preset_rock">Rock</string>
+    <string name="dirac_preset_jazz">Jazz</string>
+    <string name="dirac_preset_pop">Pop</string>
+    <string name="dirac_preset_classical">Klasika</string>
+    <string name="dirac_preset_hiphop">Hip Hop</string>
+    <string name="dirac_preset_blues">Blues</string>
+    <string name="dirac_preset_electronic">Elektronická hudba</string>
+    <string name="dirac_preset_country">Country</string>
+    <string name="dirac_preset_dance">Dance</string>
+    <string name="dirac_preset_metal">Metal</string>
+
+    <string name="advanced_settings_kcal">Kalibrácia farieb displeja</string>
+    <string name="cat_calibration">Kalibrácia displeja</string>
+    <string name="set_on_boot">Aktivuj pri štarte systému</string>
+    <string name="kcal_enabled">Zapnuté</string>
+    <string name="kcal_disabled">Vypnuté</string>
+    <string name="color_red">Červená</string>
+    <string name="color_green">Zelená</string>
+    <string name="color_blue">Modrá</string>
+    <string name="color_minimum">Minimum</string>
+    <string name="saturation">Sýtosť</string>
+    <string name="contrast">Kontrast</string>
+    <string name="cat_colormanagement">Nastavenia farieb</string>
+    <string name="value">Hodnota</string>
+    <string name="hue">Odtieň</string>
+    <string name="kcal_reset">Východzie nastavenie</string>
+    <string name="presets_dialog_title">Výber nastavenia</string>
+    <string name="preset_default">Default</string>
+    <string name="preset_deep_black_white">Výrazná čierna a biela</string>
+    <string name="preset_extreme_amoled">Extrémny AMOLED</string>
+    <string name="preset_warm_amoled">Teplé farby AMOLED</string>
+    <string name="preset_cool_amoled">Chladné farby AMOLED</string>
+    <string name="preset_deep_natural">Prírodné farby</string>
+    <string name="edit_value">Výber novej hodnoty</string>
+    <string name="default_value">Pôvodná hodnota</string>
+    <string name="edit_hint">Hodnota medzi %1d a %2d</string>
+    <string name="fpaction_none">Žiadna</string>
+    <string name="fpaction_right_title">Potiahnutie doprava</string>
+    <string name="fpaction_up_title">Potiahnutie nahore</string>
+    <string name="fpaction_left_title">Potiahnutie doľava</string>
+    <string name="fpaction_down_title">Potiahnutie dolu</string>
+    <string name="advanced_doze_summary">Ambient display</string>
+    <string name="grayscale">Čiernobiely mód</string>
+    <string name="microphone_gain">Zosilnenie mikrofónu</string>
+    <string name="headphone_gain">Zosilnenie zvuku slúchadiel</string>
+</resources>
diff --git a/parts/res/values-sl-rSI/strings.xml b/XiaomiParts/res/values-sl-rSI/strings.xml
similarity index 100%
rename from parts/res/values-sl-rSI/strings.xml
rename to XiaomiParts/res/values-sl-rSI/strings.xml
diff --git a/parts/res/values-sq-rAL/strings.xml b/XiaomiParts/res/values-sq-rAL/strings.xml
similarity index 100%
rename from parts/res/values-sq-rAL/strings.xml
rename to XiaomiParts/res/values-sq-rAL/strings.xml
diff --git a/parts/res/values-sr-rSP/strings.xml b/XiaomiParts/res/values-sr-rSP/strings.xml
similarity index 100%
rename from parts/res/values-sr-rSP/strings.xml
rename to XiaomiParts/res/values-sr-rSP/strings.xml
diff --git a/parts/res/values-sv-rSE/strings.xml b/XiaomiParts/res/values-sv-rSE/strings.xml
similarity index 100%
rename from parts/res/values-sv-rSE/strings.xml
rename to XiaomiParts/res/values-sv-rSE/strings.xml
diff --git a/parts/res/values-ta-rIN/strings.xml b/XiaomiParts/res/values-ta-rIN/strings.xml
similarity index 100%
rename from parts/res/values-ta-rIN/strings.xml
rename to XiaomiParts/res/values-ta-rIN/strings.xml
diff --git a/parts/res/values-te-rIN/strings.xml b/XiaomiParts/res/values-te-rIN/strings.xml
similarity index 100%
rename from parts/res/values-te-rIN/strings.xml
rename to XiaomiParts/res/values-te-rIN/strings.xml
diff --git a/parts/res/values-th-rTH/strings.xml b/XiaomiParts/res/values-th-rTH/strings.xml
similarity index 100%
rename from parts/res/values-th-rTH/strings.xml
rename to XiaomiParts/res/values-th-rTH/strings.xml
diff --git a/parts/res/values-tr-rTR/strings.xml b/XiaomiParts/res/values-tr-rTR/strings.xml
similarity index 100%
rename from parts/res/values-tr-rTR/strings.xml
rename to XiaomiParts/res/values-tr-rTR/strings.xml
diff --git a/parts/res/values-uk-rUA/strings.xml b/XiaomiParts/res/values-uk-rUA/strings.xml
similarity index 100%
rename from parts/res/values-uk-rUA/strings.xml
rename to XiaomiParts/res/values-uk-rUA/strings.xml
diff --git a/parts/res/values-ur-rIN/strings.xml b/XiaomiParts/res/values-ur-rIN/strings.xml
similarity index 100%
rename from parts/res/values-ur-rIN/strings.xml
rename to XiaomiParts/res/values-ur-rIN/strings.xml
diff --git a/parts/res/values-ur-rPK/strings.xml b/XiaomiParts/res/values-ur-rPK/strings.xml
similarity index 100%
rename from parts/res/values-ur-rPK/strings.xml
rename to XiaomiParts/res/values-ur-rPK/strings.xml
diff --git a/parts/res/values-uz-rUZ/strings.xml b/XiaomiParts/res/values-uz-rUZ/strings.xml
similarity index 100%
rename from parts/res/values-uz-rUZ/strings.xml
rename to XiaomiParts/res/values-uz-rUZ/strings.xml
diff --git a/parts/res/values-vi-rVN/strings.xml b/XiaomiParts/res/values-vi-rVN/strings.xml
similarity index 100%
rename from parts/res/values-vi-rVN/strings.xml
rename to XiaomiParts/res/values-vi-rVN/strings.xml
diff --git a/XiaomiParts/res/values-zh-rCN/strings.xml b/XiaomiParts/res/values-zh-rCN/strings.xml
new file mode 100644
index 0000000..44fe371
--- /dev/null
+++ b/XiaomiParts/res/values-zh-rCN/strings.xml
@@ -0,0 +1,145 @@
+<?xml version="1.0" encoding="utf-8"?>
+<!-- Copyright (C) 2018 The Mokee Project
+
+     Licensed under the Apache License, Version 2.0 (the "License");
+     you may not use this file except in compliance with the License.
+     You may obtain a copy of the License at
+
+          http://www.apache.org/licenses/LICENSE-2.0
+
+     Unless required by applicable law or agreed to in writing, software
+     distributed under the License is distributed on an "AS IS" BASIS,
+     WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+     See the License for the specific language governing permissions and
+     limitations under the License.
+-->
+<resources>
+    <string name="advanced_settings">小米设置</string>
+    <string name="advanced_settings_summary">附加设置</string>
+
+    <string name="camera_title">相机</string>
+    <string name="camera_hal3_title">开启 Camera2 API</string>
+    <string name="camera_eis_title">开启 EIS</string>
+
+    <string name="display_title">显示</string>
+
+    <!-- KCal -->
+    <string name="device_kcal_title">显示颜色矫正</string>
+
+    <!-- Ambient Display -->
+    <string name="ambient_display_xiaomi">Xiaomi Doze</string>
+    <string name="advanced_doze_summary">环境显示</string>
+
+    <string name="torch_title">Torch</string>
+    <string name="torch_brightness_title">亮度</string>
+    <string name="vibration_title">触觉反馈</string>
+    <string name="vibration_strength_title">强度</string>
+
+    <!-- Spectrum Profiles -->
+    <string name="spectrum_profile_title">性能</string>
+    <string name="spectrum_title">性能选项</string>
+    <string name="spectrum_summary">性能选项</string>
+    <string name="spectrum_dialogTitle">设置性能选项</string>
+
+    <!-- Values for Spectrum Presets -->
+    <string name="spectrum_performance">高性能</string>
+    <string name="spectrum_battery">延长电池</string>
+    <string name="spectrum_gaming">游戏</string>
+    <string name="spectrum_balance">平衡</string>
+    <string name="spectrum_extreme_battery">极致延长电池</string>
+
+    <!-- FP Actions -->
+    <string name="fp_title">指纹</string>
+    <string name="fpaction_enabled">启用自定义指纹动作</string>
+    <string name="fpshutter_summary">用指纹传感器来拍照</string>
+    <string name="fp_shutter">指纹快门</string>
+    <string name="fpaction_dialogTitle">动作</string>
+    <string name="fpaction_summary">选择动作</string>
+    <string name="fpaction_title">指纹动作</string>
+
+    <!-- Values for FP Actions -->
+    <string name="fpaction_expand_np">扩展通知面板</string>
+    <string name="fpaction_expand_qs">扩展快捷方式</string>
+    <string name="fpaction_assistant">助手</string>
+    <string name="fpaction_home">主页</string>
+    <string name="fpaction_recent_apps">最近的应用</string>
+    <string name="fpaction_media_next">播放下一个媒体</string>
+    <string name="fpaction_media_play_pause">媒体播放与暂停</string>
+    <string name="fpaction_media_previous">媒体预览</string>
+
+    <string name="audio_title">音频</string>
+
+    <!-- Dirac settings -->
+    <string name="dirac_title">米音</string>
+    <string name="dirac_summary">改善音质</string>
+    <string name="dirac_headset_title">耳机类型设置</string>
+    <string name="dirac_preset_title">选择预设效果</string>
+
+    <!-- Dirac settings: Headset types -->
+    <string name="dirac_headset_default">无</string>
+    <string name="dirac_headset_earbuds">灵动耳塞式</string>
+    <string name="dirac_headset_in_ear_2013">灵悦入耳式</string>
+    <string name="dirac_headset_piston_1">小米活塞1</string>
+    <string name="dirac_headset_general">通用耳塞式</string>
+    <string name="dirac_headset_general_inear">通用入耳式</string>
+    <string name="dirac_headset_piston_basic">小米活塞简装版</string>
+    <string name="dirac_headset_piston_2">小米活塞2</string>
+    <string name="dirac_headset_piston_standard">小米活塞标准版</string>
+    <string name="dirac_headset_headphone">小米头戴式</string>
+    <string name="dirac_headset_piston_youth">小米活塞青春版</string>
+    <string name="dirac_headset_piston_color">小米活塞炫彩版</string>
+    <string name="dirac_headset_in_ear">小米圈铁</string>
+    <string name="dirac_headset_capsule">小米胶囊</string>
+    <string name="dirac_headset_in_ear_pro">小米圈铁Pro</string>
+    <string name="dirac_headset_comfort">小米头戴轻松版</string>
+    <string name="dirac_headset_reduction_noise">小米降噪 typeC</string>
+    <string name="dirac_headset_cancelling">小米降噪 3.5mm</string>
+    <string name="dirac_headset_half_in_ear">小米半入耳式</string>
+    <string name="dirac_headset_in_ear2">小米圈铁2</string>
+    <string name="dirac_headset_earphone_basic">小米耳机基本款</string>
+    <string name="dirac_headset_earphone">小米耳机</string>
+
+    <!-- Dirac settings: Equalizer presets -->
+    <string name="dirac_preset_default">无</string>
+    <string name="dirac_preset_rock">摇滚</string>
+    <string name="dirac_preset_jazz">爵士</string>
+    <string name="dirac_preset_pop">流行</string>
+    <string name="dirac_preset_classical">古典</string>
+    <string name="dirac_preset_hiphop">嘻哈</string>
+    <string name="dirac_preset_blues">布鲁斯</string>
+    <string name="dirac_preset_electronic">电子音乐</string>
+    <string name="dirac_preset_country">乡村</string>
+    <string name="dirac_preset_dance">舞曲</string>
+    <string name="dirac_preset_metal">金属</string>
+
+    <string name="advanced_settings_kcal">显示颜色矫正</string>
+    <string name="cat_calibration">显示矫正</string>
+    <string name="kcal_enabled">启用</string>
+    <string name="set_on_boot">在启动时设置</string>
+    <string name="kcal_disabled">关闭</string>
+    <string name="color_red">红</string>
+    <string name="color_green">绿</string>
+    <string name="color_blue">蓝</string>
+    <string name="color_minimum">最低</string>
+    <string name="saturation">饱和度</string>
+    <string name="value">设定值</string>
+    <string name="contrast">对比度</string>
+    <string name="hue">色调</string>
+    <string name="cat_colormanagement">颜色设置</string>
+    <string name="kcal_reset">重置</string>
+    <string name="edit_value">设定一个新的值</string>
+
+    <string name="presets_dialog_title">选择预设</string>
+    <!-- Presets -->
+    <string name="preset_default">默认</string>
+    <string name="preset_version_1">版本 1</string>
+    <string name="preset_version_2">版本 2</string>
+    <string name="preset_version_3">版本 3</string>
+    <string name="preset_triluminous">Triluminous</string>
+    <string name="preset_deep_black_white">Deep Black and White</string>
+    <string name="preset_deep_natural">Deep Natural</string>
+    <string name="preset_cool_amoled">Cool Amoled</string>
+    <string name="preset_extreme_amoled">Extreme Amoled</string>
+    <string name="preset_warm_amoled">Warm Amoled</string>
+    <string name="preset_hybrid_mamba">Hybrid Mamba</string>
+</resources>
diff --git a/parts/res/values-zh-rHK/strings.xml b/XiaomiParts/res/values-zh-rHK/strings.xml
similarity index 100%
rename from parts/res/values-zh-rHK/strings.xml
rename to XiaomiParts/res/values-zh-rHK/strings.xml
diff --git a/parts/res/values-zh-rSG/strings.xml b/XiaomiParts/res/values-zh-rSG/strings.xml
similarity index 100%
rename from parts/res/values-zh-rSG/strings.xml
rename to XiaomiParts/res/values-zh-rSG/strings.xml
diff --git a/parts/res/values-zh-rTW/strings.xml b/XiaomiParts/res/values-zh-rTW/strings.xml
similarity index 100%
rename from parts/res/values-zh-rTW/strings.xml
rename to XiaomiParts/res/values-zh-rTW/strings.xml
diff --git a/XiaomiParts/res/values-zh/strings.xml b/XiaomiParts/res/values-zh/strings.xml
new file mode 100644
index 0000000..44fe371
--- /dev/null
+++ b/XiaomiParts/res/values-zh/strings.xml
@@ -0,0 +1,145 @@
+<?xml version="1.0" encoding="utf-8"?>
+<!-- Copyright (C) 2018 The Mokee Project
+
+     Licensed under the Apache License, Version 2.0 (the "License");
+     you may not use this file except in compliance with the License.
+     You may obtain a copy of the License at
+
+          http://www.apache.org/licenses/LICENSE-2.0
+
+     Unless required by applicable law or agreed to in writing, software
+     distributed under the License is distributed on an "AS IS" BASIS,
+     WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+     See the License for the specific language governing permissions and
+     limitations under the License.
+-->
+<resources>
+    <string name="advanced_settings">小米设置</string>
+    <string name="advanced_settings_summary">附加设置</string>
+
+    <string name="camera_title">相机</string>
+    <string name="camera_hal3_title">开启 Camera2 API</string>
+    <string name="camera_eis_title">开启 EIS</string>
+
+    <string name="display_title">显示</string>
+
+    <!-- KCal -->
+    <string name="device_kcal_title">显示颜色矫正</string>
+
+    <!-- Ambient Display -->
+    <string name="ambient_display_xiaomi">Xiaomi Doze</string>
+    <string name="advanced_doze_summary">环境显示</string>
+
+    <string name="torch_title">Torch</string>
+    <string name="torch_brightness_title">亮度</string>
+    <string name="vibration_title">触觉反馈</string>
+    <string name="vibration_strength_title">强度</string>
+
+    <!-- Spectrum Profiles -->
+    <string name="spectrum_profile_title">性能</string>
+    <string name="spectrum_title">性能选项</string>
+    <string name="spectrum_summary">性能选项</string>
+    <string name="spectrum_dialogTitle">设置性能选项</string>
+
+    <!-- Values for Spectrum Presets -->
+    <string name="spectrum_performance">高性能</string>
+    <string name="spectrum_battery">延长电池</string>
+    <string name="spectrum_gaming">游戏</string>
+    <string name="spectrum_balance">平衡</string>
+    <string name="spectrum_extreme_battery">极致延长电池</string>
+
+    <!-- FP Actions -->
+    <string name="fp_title">指纹</string>
+    <string name="fpaction_enabled">启用自定义指纹动作</string>
+    <string name="fpshutter_summary">用指纹传感器来拍照</string>
+    <string name="fp_shutter">指纹快门</string>
+    <string name="fpaction_dialogTitle">动作</string>
+    <string name="fpaction_summary">选择动作</string>
+    <string name="fpaction_title">指纹动作</string>
+
+    <!-- Values for FP Actions -->
+    <string name="fpaction_expand_np">扩展通知面板</string>
+    <string name="fpaction_expand_qs">扩展快捷方式</string>
+    <string name="fpaction_assistant">助手</string>
+    <string name="fpaction_home">主页</string>
+    <string name="fpaction_recent_apps">最近的应用</string>
+    <string name="fpaction_media_next">播放下一个媒体</string>
+    <string name="fpaction_media_play_pause">媒体播放与暂停</string>
+    <string name="fpaction_media_previous">媒体预览</string>
+
+    <string name="audio_title">音频</string>
+
+    <!-- Dirac settings -->
+    <string name="dirac_title">米音</string>
+    <string name="dirac_summary">改善音质</string>
+    <string name="dirac_headset_title">耳机类型设置</string>
+    <string name="dirac_preset_title">选择预设效果</string>
+
+    <!-- Dirac settings: Headset types -->
+    <string name="dirac_headset_default">无</string>
+    <string name="dirac_headset_earbuds">灵动耳塞式</string>
+    <string name="dirac_headset_in_ear_2013">灵悦入耳式</string>
+    <string name="dirac_headset_piston_1">小米活塞1</string>
+    <string name="dirac_headset_general">通用耳塞式</string>
+    <string name="dirac_headset_general_inear">通用入耳式</string>
+    <string name="dirac_headset_piston_basic">小米活塞简装版</string>
+    <string name="dirac_headset_piston_2">小米活塞2</string>
+    <string name="dirac_headset_piston_standard">小米活塞标准版</string>
+    <string name="dirac_headset_headphone">小米头戴式</string>
+    <string name="dirac_headset_piston_youth">小米活塞青春版</string>
+    <string name="dirac_headset_piston_color">小米活塞炫彩版</string>
+    <string name="dirac_headset_in_ear">小米圈铁</string>
+    <string name="dirac_headset_capsule">小米胶囊</string>
+    <string name="dirac_headset_in_ear_pro">小米圈铁Pro</string>
+    <string name="dirac_headset_comfort">小米头戴轻松版</string>
+    <string name="dirac_headset_reduction_noise">小米降噪 typeC</string>
+    <string name="dirac_headset_cancelling">小米降噪 3.5mm</string>
+    <string name="dirac_headset_half_in_ear">小米半入耳式</string>
+    <string name="dirac_headset_in_ear2">小米圈铁2</string>
+    <string name="dirac_headset_earphone_basic">小米耳机基本款</string>
+    <string name="dirac_headset_earphone">小米耳机</string>
+
+    <!-- Dirac settings: Equalizer presets -->
+    <string name="dirac_preset_default">无</string>
+    <string name="dirac_preset_rock">摇滚</string>
+    <string name="dirac_preset_jazz">爵士</string>
+    <string name="dirac_preset_pop">流行</string>
+    <string name="dirac_preset_classical">古典</string>
+    <string name="dirac_preset_hiphop">嘻哈</string>
+    <string name="dirac_preset_blues">布鲁斯</string>
+    <string name="dirac_preset_electronic">电子音乐</string>
+    <string name="dirac_preset_country">乡村</string>
+    <string name="dirac_preset_dance">舞曲</string>
+    <string name="dirac_preset_metal">金属</string>
+
+    <string name="advanced_settings_kcal">显示颜色矫正</string>
+    <string name="cat_calibration">显示矫正</string>
+    <string name="kcal_enabled">启用</string>
+    <string name="set_on_boot">在启动时设置</string>
+    <string name="kcal_disabled">关闭</string>
+    <string name="color_red">红</string>
+    <string name="color_green">绿</string>
+    <string name="color_blue">蓝</string>
+    <string name="color_minimum">最低</string>
+    <string name="saturation">饱和度</string>
+    <string name="value">设定值</string>
+    <string name="contrast">对比度</string>
+    <string name="hue">色调</string>
+    <string name="cat_colormanagement">颜色设置</string>
+    <string name="kcal_reset">重置</string>
+    <string name="edit_value">设定一个新的值</string>
+
+    <string name="presets_dialog_title">选择预设</string>
+    <!-- Presets -->
+    <string name="preset_default">默认</string>
+    <string name="preset_version_1">版本 1</string>
+    <string name="preset_version_2">版本 2</string>
+    <string name="preset_version_3">版本 3</string>
+    <string name="preset_triluminous">Triluminous</string>
+    <string name="preset_deep_black_white">Deep Black and White</string>
+    <string name="preset_deep_natural">Deep Natural</string>
+    <string name="preset_cool_amoled">Cool Amoled</string>
+    <string name="preset_extreme_amoled">Extreme Amoled</string>
+    <string name="preset_warm_amoled">Warm Amoled</string>
+    <string name="preset_hybrid_mamba">Hybrid Mamba</string>
+</resources>
diff --git a/parts/res/values/arrays.xml b/XiaomiParts/res/values/arrays.xml
similarity index 59%
rename from parts/res/values/arrays.xml
rename to XiaomiParts/res/values/arrays.xml
index 3fdddd9..1e3d12c 100644
--- a/parts/res/values/arrays.xml
+++ b/XiaomiParts/res/values/arrays.xml
@@ -1,6 +1,5 @@
 <?xml version="1.0" encoding="utf-8"?>
-<!--
-     Copyright (C) 2018 The LineageOS Project
+<!-- Copyright (C) 2018 The Xiaomi-SDM660 Project
 
      Licensed under the Apache License, Version 2.0 (the "License");
      you may not use this file except in compliance with the License.
@@ -15,6 +14,44 @@
      limitations under the License.
 -->
 <resources>
+    <string-array name="spectrum_profiles">
+        <item>@string/spectrum_balance</item>
+        <item>@string/spectrum_performance</item>
+        <item>@string/spectrum_battery</item>
+        <item>@string/spectrum_gaming</item>
+        <item>@string/spectrum_extreme_battery</item>
+    </string-array>
+    <string-array name="spectrum_values">
+        <item>0</item>
+        <item>1</item>
+        <item>2</item>
+        <item>3</item>
+        <item>4</item>
+    </string-array>
+
+    <string-array name="fpaction_enteries">
+        <item>@string/fpaction_none</item>
+        <item>@string/fpaction_expand_np</item>
+        <item>@string/fpaction_expand_qs</item>
+        <item>@string/fpaction_assistant</item>
+        <item>@string/fpaction_home</item>
+        <item>@string/fpaction_recent_apps</item>
+        <item>@string/fpaction_media_next</item>
+        <item>@string/fpaction_media_play_pause</item>
+        <item>@string/fpaction_media_previous</item>
+    </string-array>
+    <string-array name="fpaction_values">
+        <item>def</item>
+        <item>expnp</item>
+        <item>expqs</item>
+        <item>219</item>
+        <item>3</item>
+        <item>187</item>
+        <item>87</item>
+        <item>85</item>
+        <item>88</item>
+    </string-array>
+
     <!-- Values for Dirac headset pref -->
     <string-array name="dirac_headset_pref_entries" translatable="false">
         <item>@string/dirac_headset_default</item>
@@ -95,4 +132,34 @@
         <item>"0,4,2,0,-2,-2,4"</item>
         <item>"2,0,0,-2,-4,0,0"</item>
     </string-array>
+
+    <!-- kcal -->
+    <array name="preset_enteries">
+        <item>@string/preset_default</item>
+        <item>@string/preset_version_1</item>
+        <item>@string/preset_version_2</item>
+        <item>@string/preset_version_3</item>
+        <item>@string/preset_triluminous</item>
+        <item>@string/preset_deep_black_white</item>
+        <item>@string/preset_deep_natural</item>
+        <item>@string/preset_cool_amoled</item>
+        <item>@string/preset_extreme_amoled</item>
+        <item>@string/preset_warm_amoled</item>
+        <item>@string/preset_hybrid_mamba</item>
+    </array>
+
+    <array name="preset_values">
+        <!-- R, G, B, minimum, saturation, value, contrast, hue -->
+        <item>237 237 237 35 33 127 127 0</item>
+        <item>237 237 237 35 40 127 127 0</item>
+        <item>250 250 235 35 27 112 132 1520</item>
+        <item>240 240 240 35 33 127 127 0</item>
+        <item>255 250 251 35 66 136 132 1526</item>
+        <item>250 250 255 35 60 117 136 0</item>
+        <item>250 250 255 35 33 117 136 0</item>
+        <item>236 248 255 35 50 123 130 0</item>
+        <item>255 255 255 35 65 114 136 0</item>
+        <item>253 246 243 35 50 123 130 0</item>
+        <item>226 215 255 35 40 119 132 10</item>
+    </array>
 </resources>
diff --git a/XiaomiParts/res/values/attrs.xml b/XiaomiParts/res/values/attrs.xml
new file mode 100644
index 0000000..e7ccbe4
--- /dev/null
+++ b/XiaomiParts/res/values/attrs.xml
@@ -0,0 +1,10 @@
+<?xml version="1.0" encoding="utf-8"?>
+<resources>
+    <declare-styleable name="CustomSeekBarPreference">
+        <attr name="interval" format="integer" />
+        <attr name="min" format="integer" />
+        <attr name="max" format="integer" />
+        <attr name="units" format="string|reference" />
+        <attr name="defaultText" format="string|reference" />
+    </declare-styleable>
+</resources>
diff --git a/XiaomiParts/res/values/strings.xml b/XiaomiParts/res/values/strings.xml
new file mode 100644
index 0000000..700d1f7
--- /dev/null
+++ b/XiaomiParts/res/values/strings.xml
@@ -0,0 +1,173 @@
+<?xml version="1.0" encoding="utf-8"?>
+<!-- Copyright (C) 2018 The Xiaomi-SDM660 Project
+
+     Licensed under the Apache License, Version 2.0 (the "License");
+     you may not use this file except in compliance with the License.
+     You may obtain a copy of the License at
+
+          http://www.apache.org/licenses/LICENSE-2.0
+
+     Unless required by applicable law or agreed to in writing, software
+     distributed under the License is distributed on an "AS IS" BASIS,
+     WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+     See the License for the specific language governing permissions and
+     limitations under the License.
+-->
+<resources>
+    <string name="advanced_settings">Xiaomi Parts</string>
+    <string name="advanced_settings_summary">Extra Settings</string>
+
+    <string name="camera_title">Camera</string>
+    <string name="camera_hal3_title">Enable Camera2 API</string>
+    <string name="camera_eis_title">Enable EIS</string>
+
+    <string name="display_title">Display</string>
+
+    <!-- KCal -->
+    <string name="device_kcal_title">Display Color Calibration</string>
+
+    <!-- Ambient Display -->
+    <string name="ambient_display_xiaomi">Xiaomi Doze</string>
+    <string name="advanced_doze_summary">Ambient Display</string>
+
+    <string name="torch_title">Torch</string>
+    <string name="torch_brightness_title">Brightness</string>
+    <string name="vibration_title">Haptic feedback</string>
+    <string name="vibration_strength_title">Strength</string>
+
+    <!-- Spectrum Profiles -->
+    <string name="spectrum_profile_title">Performance</string>
+    <string name="spectrum_title">Performance Settings</string>
+    <string name="spectrum_summary">Choose your Performance settings</string>
+    <string name="spectrum_dialogTitle">Choose your Performance settings</string>
+
+    <!-- Values for Spectrum Presets -->
+    <string name="spectrum_performance">Performance</string>
+    <string name="spectrum_battery">Battery</string>
+    <string name="spectrum_gaming">Gaming</string>
+    <string name="spectrum_balance">Balance</string>
+    <string name="spectrum_extreme_battery">Extreme Battery</string>
+
+    <!-- FP Actions -->
+    <string name="fp_title">Fingerprint</string>
+    <string name="fpaction_enabled">Enable custom fingerprint actions</string>
+    <string name="fpshutter_summary">Trigger the camera if it is active</string>
+    <string name="fp_shutter">Fingerprint Shutter</string>
+    <string name="fpaction_dialogTitle">Action</string>
+    <string name="fpaction_summary">Choose Action</string>
+    <string name="fpaction_title">Fingerprint Actions</string>
+    <string name="fpaction_up_title">Swipe Up</string>
+    <string name="fpaction_down_title">Swipe Down</string>
+    <string name="fpaction_left_title">Swipe left</string>
+    <string name="fpaction_right_title">Swipe right</string>
+
+    <!-- Values for FP Actions -->
+    <string name="fpaction_none">None</string>
+    <string name="fpaction_expand_np">Expand Notification Panel</string>
+    <string name="fpaction_expand_qs">Expand QS</string>
+    <string name="fpaction_assistant">Assistant</string>
+    <string name="fpaction_home">Home</string>
+    <string name="fpaction_recent_apps">Recent Apps</string>
+    <string name="fpaction_media_next">Media Next</string>
+    <string name="fpaction_media_play_pause">Media Play/Pause</string>
+    <string name="fpaction_media_previous">Media Previous</string>
+
+    <string name="audio_title">Audio</string>
+
+    <!-- Dirac settings -->
+    <string name="dirac_title">Mi Sound Enhancer</string>
+    <string name="dirac_summary">Optimize audio quality</string>
+    <string name="dirac_headset_title">Choose headphones type</string>
+    <string name="dirac_preset_title">Choose a preset</string>
+
+    <!-- Dirac settings: Headset types -->
+    <string name="dirac_headset_default">Default</string>
+    <string name="dirac_headset_earbuds">Mi Earbuds</string>
+    <string name="dirac_headset_in_ear_2013">Mi In-Ear (2013)</string>
+    <string name="dirac_headset_piston_1">Mi Piston-1</string>
+    <string name="dirac_headset_general">General</string>
+    <string name="dirac_headset_general_inear">General In-Ear</string>
+    <string name="dirac_headset_piston_basic">Basic Edition</string>
+    <string name="dirac_headset_piston_2">Mi Piston-2</string>
+    <string name="dirac_headset_piston_standard">Standard Edition</string>
+    <string name="dirac_headset_headphone">Mi Headphones</string>
+    <string name="dirac_headset_piston_youth">Youth Edition</string>
+    <string name="dirac_headset_piston_color">Color Edition</string>
+    <string name="dirac_headset_in_ear">Mi In-Ear</string>
+    <string name="dirac_headset_capsule">Mi Capsule</string>
+    <string name="dirac_headset_in_ear_pro">Mi In-Ear Pro</string>
+    <string name="dirac_headset_comfort">Mi Comfort</string>
+    <string name="dirac_headset_reduction_noise">Mi Noise Cancelling Type-C</string>
+    <string name="dirac_headset_cancelling">Mi Noise Cancelling 3.5mm</string>
+    <string name="dirac_headset_half_in_ear">Mi Half In-Ear</string>
+    <string name="dirac_headset_in_ear2">Mi In-Ear 2</string>
+    <string name="dirac_headset_earphone_basic">Mi Earphones Basic</string>
+    <string name="dirac_headset_earphone">Mi Earphones</string>
+
+    <!-- Dirac settings: Equalizer presets -->
+    <string name="dirac_preset_default">Default</string>
+    <string name="dirac_preset_rock">Rock</string>
+    <string name="dirac_preset_jazz">Jazz</string>
+    <string name="dirac_preset_pop">Pop</string>
+    <string name="dirac_preset_classical">Classical</string>
+    <string name="dirac_preset_hiphop">Hip Hop</string>
+    <string name="dirac_preset_blues">Blues</string>
+    <string name="dirac_preset_electronic">Electronic</string>
+    <string name="dirac_preset_country">Country</string>
+    <string name="dirac_preset_dance">Dance</string>
+    <string name="dirac_preset_metal">Metal</string>
+
+    <!-- Audio amplification -->
+    <string name="headphone_gain">Headphone gain</string>
+    <string name="microphone_gain">Microphone gain</string>
+
+    <!-- kcal -->
+    <string name="advanced_settings_kcal">Display Color Calibration</string>
+    <string name="cat_colormanagement">Color Settings</string>
+    <string name="cat_calibration">Display Calibration</string>
+
+    <string name="kcal_enabled">On</string>
+    <string name="kcal_disabled">Off</string>
+    <string name="set_on_boot">Set On Boot</string>
+    <string name="color_red">Red</string>
+    <string name="color_green">Green</string>
+    <string name="color_blue">Blue</string>
+    <string name="color_minimum">Minimum</string>
+    <string name="saturation">Saturation</string>
+    <string name="value">Value</string>
+    <string name="contrast">Contrast</string>
+    <string name="hue">Hue</string>
+    <string name="grayscale">Grayscale Display</string>
+
+    <string name="presets_dialog_title">Select Preset</string>
+    <!-- Presets -->
+    <string name="preset_default">Default</string>
+    <string name="preset_version_1">Version 1</string>
+    <string name="preset_version_2">Version 2</string>
+    <string name="preset_version_3">Version 3</string>
+    <string name="preset_triluminous">Triluminous</string>
+    <string name="preset_deep_black_white">Deep Black and White</string>
+    <string name="preset_deep_natural">Deep Natural</string>
+    <string name="preset_cool_amoled">Cool Amoled</string>
+    <string name="preset_extreme_amoled">Extreme Amoled</string>
+    <string name="preset_warm_amoled">Warm Amoled</string>
+    <string name="preset_hybrid_mamba">Hybrid Mamba</string>
+
+    <!-- usb fastcharge -->
+    <string name="usb_fastcharge_title">USB Fastcharge</string>
+    <string name="fastcharge_title">Enable USB Fastcharge</string>
+    <string name="fastcharge_summary">Use fastcharge when connected to a computer via usb port</string>
+
+    <!-- usb fastcharge -->
+     <string name="hall_wakeup_title">Flip Cover Wakeup</string>
+     <string name="hall_title">Enable Flip Cover Wakeup</string>
+     <string name="hall_wakeup_summary">Wakeup device via magnetic Flip Cover</string>
+    <!-- menu -->
+    <string name="kcal_presets" translatable="false">@string/presets_dialog_title</string>
+    <string name="kcal_reset">Reset</string>
+
+    <!-- CustomSeekBarPreference -->
+    <string name="edit_value">Choose new Value</string>
+    <string name="default_value">Default Value</string>
+    <string name="edit_hint">Value between %1$d and %2$d</string>
+</resources>
diff --git a/parts/res/drawable/switchbar_background.xml b/XiaomiParts/res/values/styles.xml
similarity index 65%
rename from parts/res/drawable/switchbar_background.xml
rename to XiaomiParts/res/values/styles.xml
index f210707..675c0d9 100644
--- a/parts/res/drawable/switchbar_background.xml
+++ b/XiaomiParts/res/values/styles.xml
@@ -1,5 +1,5 @@
 <?xml version="1.0" encoding="utf-8"?>
-<!-- Copyright (C) 2019 The LineageOS Project
+<!-- Copyright (C) 2018 The Xiaomi-SDM660 Project
 
      Licensed under the Apache License, Version 2.0 (the "License");
      you may not use this file except in compliance with the License.
@@ -13,8 +13,10 @@
      See the License for the specific language governing permissions and
      limitations under the License.
 -->
+<resources>
+  <style name="AppTheme" parent="@android:style/Theme.DeviceDefault.Settings">
+      <item name="preferenceTheme">@style/PreferenceTheme</item>
+  </style>
 
-<shape xmlns:android="http://schemas.android.com/apk/res/android"
-    android:shape="rectangle">
-    <solid android:color="@color/switch_bar_bg" />
-</shape>
+  <style name="PreferenceTheme" parent="@style/PreferenceThemeOverlay.SettingsBase" />
+</resources>
diff --git a/XiaomiParts/res/xml/preferences_xiaomi_parts.xml b/XiaomiParts/res/xml/preferences_xiaomi_parts.xml
new file mode 100644
index 0000000..93fc231
--- /dev/null
+++ b/XiaomiParts/res/xml/preferences_xiaomi_parts.xml
@@ -0,0 +1,196 @@
+<?xml version="1.0" encoding="UTF-8"?><!-- Copyright (C) 2018 The Xiaomi-SDM660 Project
+
+     Licensed under the Apache License, Version 2.0 (the "License");
+     you may not use this file except in compliance with the License.
+     You may obtain a copy of the License at
+
+          http://www.apache.org/licenses/LICENSE-2.0
+
+     Unless required by applicable law or agreed to in writing, software
+     distributed under the License is distributed on an "AS IS" BASIS,
+     WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+     See the License for the specific language governing permissions and
+     limitations under the License.
+-->
+<PreferenceScreen xmlns:android="http://schemas.android.com/apk/res/android"
+    xmlns:app="http://schemas.android.com/apk/res-auto">
+    <PreferenceCategory
+        android:key="camera"
+        android:title="@string/camera_title">
+
+        <org.lineageos.settings.device.preferences.SecureSettingSwitchPreference
+            android:defaultValue="true"
+            android:key="hal3"
+            android:title="@string/camera_hal3_title" />
+
+        <org.lineageos.settings.device.preferences.SecureSettingSwitchPreference
+            android:defaultValue="false"
+            android:key="eis"
+            android:title="@string/camera_eis_title" />
+
+    </PreferenceCategory>
+
+    <PreferenceCategory
+        android:key="fingerprint"
+        android:title="@string/fp_title">
+
+        <org.lineageos.settings.device.preferences.SecureSettingSwitchPreference
+            android:defaultValue="false"
+            android:key="fpaction_enabled"
+            android:title="@string/fpaction_enabled" />
+
+        <org.lineageos.settings.device.preferences.SecureSettingSwitchPreference
+            android:defaultValue="false"
+            android:key="fp_shutter"
+            android:summary="@string/fpshutter_summary"
+            android:title="@string/fp_shutter" />
+
+        <org.lineageos.settings.device.preferences.SecureSettingListPreference
+            android:defaultValue="expnp"
+            android:dependency="fpaction_enabled"
+            android:dialogTitle="@string/fpaction_dialogTitle"
+            android:entries="@array/fpaction_enteries"
+            android:entryValues="@array/fpaction_values"
+            android:key="fpaction_up"
+            android:summary="@string/fpaction_summary"
+            android:title="@string/fpaction_up_title" />
+
+        <org.lineageos.settings.device.preferences.SecureSettingListPreference
+            android:defaultValue="expnp"
+            android:dependency="fpaction_enabled"
+            android:dialogTitle="@string/fpaction_dialogTitle"
+            android:entries="@array/fpaction_enteries"
+            android:entryValues="@array/fpaction_values"
+            android:key="fpaction_down"
+            android:summary="@string/fpaction_summary"
+            android:title="@string/fpaction_down_title" />
+
+        <org.lineageos.settings.device.preferences.SecureSettingListPreference
+            android:defaultValue="expnp"
+            android:dependency="fpaction_enabled"
+            android:dialogTitle="@string/fpaction_dialogTitle"
+            android:entries="@array/fpaction_enteries"
+            android:entryValues="@array/fpaction_values"
+            android:key="fpaction_left"
+            android:summary="@string/fpaction_summary"
+            android:title="@string/fpaction_left_title" />
+
+        <org.lineageos.settings.device.preferences.SecureSettingListPreference
+            android:defaultValue="expnp"
+            android:dependency="fpaction_enabled"
+            android:dialogTitle="@string/fpaction_dialogTitle"
+            android:entries="@array/fpaction_enteries"
+            android:entryValues="@array/fpaction_values"
+            android:key="fpaction_right"
+            android:summary="@string/fpaction_summary"
+            android:title="@string/fpaction_right_title" />
+
+    </PreferenceCategory>
+
+    <PreferenceCategory
+        android:key="torch"
+        android:title="@string/torch_title">
+
+        <org.lineageos.settings.device.preferences.SecureSettingCustomSeekBarPreference
+            android:defaultValue="100"
+            android:key="torch_brightness"
+            android:max="255"
+            app:min="1"
+            android:title="@string/torch_brightness_title" />
+
+    </PreferenceCategory>
+
+    <PreferenceCategory
+        android:key="vibration"
+        android:title="@string/vibration_title">
+
+        <org.lineageos.settings.device.preferences.VibrationSeekBarPreference
+            android:defaultValue="80"
+            android:key="vibration_strength"
+            android:max="100"
+            app:min="1"
+            app:units="%"
+            android:title="@string/vibration_strength_title" />
+
+    </PreferenceCategory>
+
+    <PreferenceCategory
+        android:key="display"
+        android:title="@string/display_title">
+
+        <Preference
+            android:key="device_doze"
+            android:persistent="false"
+            android:summary="@string/advanced_doze_summary"
+            android:title="@string/ambient_display_xiaomi">
+            <intent
+                android:action="android.intent.action.MAIN"
+                android:targetClass="org.lineageos.settings.doze.DozeSettingsActivity"
+                android:targetPackage="org.lineageos.settings.doze" />
+        </Preference>
+    </PreferenceCategory>
+
+    <PreferenceCategory
+        android:key="audio"
+        android:title="@string/audio_title">
+
+        <org.lineageos.settings.device.preferences.SecureSettingSwitchPreference
+            android:defaultValue="false"
+            android:key="dirac_enabled"
+            android:summary="@string/dirac_summary"
+            android:title="@string/dirac_title" />
+
+        <org.lineageos.settings.device.preferences.SecureSettingListPreference
+            android:defaultValue="0"
+            android:dependency="dirac_enabled"
+            android:entries="@array/dirac_headset_pref_entries"
+            android:entryValues="@array/dirac_headset_pref_values"
+            android:key="dirac_headset_pref"
+            android:summary="%s"
+            android:title="@string/dirac_headset_title" />
+
+        <org.lineageos.settings.device.preferences.SecureSettingListPreference
+            android:defaultValue="0,0,0,0,0,0,0"
+            android:dependency="dirac_enabled"
+            android:entries="@array/dirac_preset_pref_entries"
+            android:entryValues="@array/dirac_preset_pref_values"
+            android:key="dirac_preset_pref"
+            android:summary="%s"
+            android:title="@string/dirac_preset_title" />
+
+        <org.lineageos.settings.device.preferences.SecureSettingCustomSeekBarPreference
+            android:defaultValue="4"
+            android:key="headphone_gain"
+            android:max="20"
+            app:min="-40"
+            android:title="@string/headphone_gain" />
+
+        <org.lineageos.settings.device.preferences.SecureSettingCustomSeekBarPreference
+            android:defaultValue="0"
+            android:key="microphone_gain"
+            android:max="20"
+            app:min="-10"
+            android:title="@string/microphone_gain" />
+
+    </PreferenceCategory>
+
+    <PreferenceCategory
+        android:key="usb_fastcharge"
+        android:title="@string/usb_fastcharge_title" >
+        <org.lineageos.settings.device.preferences.SecureSettingSwitchPreference
+            android:key="fastcharge"
+            android:defaultValue="false"
+            android:title="@string/fastcharge_title"
+            android:summary="@string/fastcharge_summary" />
+    </PreferenceCategory>
+
+    <PreferenceCategory
+         android:key="hall_wakeup"
+         android:title="@string/hall_wakeup_title" >
+         <org.lineageos.settings.device.preferences.SecureSettingSwitchPreference
+             android:key="hall"
+             android:defaultValue="true"
+             android:title="@string/hall_wakeup_title"
+             android:summary="@string/hall_wakeup_summary" />
+     </PreferenceCategory>
+</PreferenceScreen>
diff --git a/XiaomiParts/src/org/lineageos/settings/device/BootReceiver.java b/XiaomiParts/src/org/lineageos/settings/device/BootReceiver.java
new file mode 100644
index 0000000..6ecf4b2
--- /dev/null
+++ b/XiaomiParts/src/org/lineageos/settings/device/BootReceiver.java
@@ -0,0 +1,75 @@
+/*
+ * Copyright (C) 2018 The Xiaomi-SDM660 Project
+ *
+ * Licensed under the Apache License, Version 2.0 (the "License");
+ * you may not use this file except in compliance with the License.
+ * You may obtain a copy of the License at
+ *
+ *      http://www.apache.org/licenses/LICENSE-2.0
+ *
+ * Unless required by applicable law or agreed to in writing, software
+ * distributed under the License is distributed on an "AS IS" BASIS,
+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+ * See the License for the specific language governing permissions and
+ * limitations under the License
+ */
+
+package org.lineageos.settings.device;
+
+import android.content.BroadcastReceiver;
+import android.content.Context;
+import android.content.Intent;
+import android.provider.Settings;
+
+import org.lineageos.settings.device.kcal.Utils;
+
+public class BootReceiver extends BroadcastReceiver implements Utils {
+
+    public void onReceive(Context context, Intent intent) {
+
+        if (Settings.Secure.getInt(context.getContentResolver(), PREF_ENABLED, 0) == 1) {
+            FileUtils.setValue(KCAL_ENABLE, Settings.Secure.getInt(context.getContentResolver(),
+                    PREF_ENABLED, 0));
+
+            String rgbValue = Settings.Secure.getInt(context.getContentResolver(),
+                    PREF_RED, RED_DEFAULT) + " " +
+                    Settings.Secure.getInt(context.getContentResolver(), PREF_GREEN,
+                            GREEN_DEFAULT) + " " +
+                    Settings.Secure.getInt(context.getContentResolver(), PREF_BLUE,
+                            BLUE_DEFAULT);
+
+            FileUtils.setValue(KCAL_RGB, rgbValue);
+            FileUtils.setValue(KCAL_MIN, Settings.Secure.getInt(context.getContentResolver(),
+                    PREF_MINIMUM, MINIMUM_DEFAULT));
+            FileUtils.setValue(KCAL_SAT, Settings.Secure.getInt(context.getContentResolver(),
+                    PREF_GRAYSCALE, 0) == 1 ? 128 :
+                    Settings.Secure.getInt(context.getContentResolver(),
+                            PREF_SATURATION, SATURATION_DEFAULT) + SATURATION_OFFSET);
+            FileUtils.setValue(KCAL_VAL, Settings.Secure.getInt(context.getContentResolver(),
+                    PREF_VALUE, VALUE_DEFAULT) + VALUE_OFFSET);
+            FileUtils.setValue(KCAL_CONT, Settings.Secure.getInt(context.getContentResolver(),
+                    PREF_CONTRAST, CONTRAST_DEFAULT) + CONTRAST_OFFSET);
+            FileUtils.setValue(KCAL_HUE, Settings.Secure.getInt(context.getContentResolver(),
+                    PREF_HUE, HUE_DEFAULT));
+        }
+
+        FileUtils.setValue(DeviceSettings.TORCH_1_BRIGHTNESS_PATH,
+                Settings.Secure.getInt(context.getContentResolver(),
+                        DeviceSettings.PREF_TORCH_BRIGHTNESS, 100));
+        FileUtils.setValue(DeviceSettings.TORCH_2_BRIGHTNESS_PATH,
+                Settings.Secure.getInt(context.getContentResolver(),
+                        DeviceSettings.PREF_TORCH_BRIGHTNESS, 100));
+        FileUtils.setValue(DeviceSettings.VIBRATION_STRENGTH_PATH, Settings.Secure.getInt(
+                context.getContentResolver(), DeviceSettings.PREF_VIBRATION_STRENGTH, 80) / 100.0 * (DeviceSettings.MAX_VIBRATION - DeviceSettings.MIN_VIBRATION) + DeviceSettings.MIN_VIBRATION);
+        int gain = Settings.Secure.getInt(context.getContentResolver(),
+                DeviceSettings.PREF_HEADPHONE_GAIN, 4);
+        FileUtils.setValue(DeviceSettings.HEADPHONE_GAIN_PATH, gain + " " + gain);
+        FileUtils.setValue(DeviceSettings.MICROPHONE_GAIN_PATH, Settings.Secure.getInt(context.getContentResolver(),
+                DeviceSettings.PREF_MICROPHONE_GAIN, 0));
+        FileUtils.setValue(DeviceSettings.USB_FASTCHARGE_PATH, Settings.Secure.getInt(context.getContentResolver(),
+                DeviceSettings.PREF_USB_FASTCHARGE, 0));
+        FileUtils.setValue(DeviceSettings.HALL_WAKEUP_PATH, Settings.Secure.getInt(context.getContentResolver(),
+                DeviceSettings.PREF_HALL_WAKEUP, 1));
+        context.startService(new Intent(context, DiracService.class));
+    }
+}
diff --git a/XiaomiParts/src/org/lineageos/settings/device/DeviceSettings.java b/XiaomiParts/src/org/lineageos/settings/device/DeviceSettings.java
new file mode 100644
index 0000000..50fa5f3
--- /dev/null
+++ b/XiaomiParts/src/org/lineageos/settings/device/DeviceSettings.java
@@ -0,0 +1,328 @@
+/*
+ * Copyright (C) 2018 The Xiaomi-SDM660 Project
+ *
+ * Licensed under the Apache License, Version 2.0 (the "License");
+ * you may not use this file except in compliance with the License.
+ * You may obtain a copy of the License at
+ *
+ *      http://www.apache.org/licenses/LICENSE-2.0
+ *
+ * Unless required by applicable law or agreed to in writing, software
+ * distributed under the License is distributed on an "AS IS" BASIS,
+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+ * See the License for the specific language governing permissions and
+ * limitations under the License
+ */
+
+package org.lineageos.settings.device;
+
+import android.content.Intent;
+import android.content.pm.PackageManager;
+import android.os.Bundle;
+import android.support.v14.preference.PreferenceFragment;
+import android.support.v7.preference.Preference;
+import android.support.v7.preference.PreferenceCategory;
+
+import org.lineageos.settings.device.kcal.KCalSettingsActivity;
+import org.lineageos.settings.device.preferences.SecureSettingCustomSeekBarPreference;
+import org.lineageos.settings.device.preferences.SecureSettingListPreference;
+import org.lineageos.settings.device.preferences.SecureSettingSwitchPreference;
+import org.lineageos.settings.device.preferences.VibrationSeekBarPreference;
+
+public class DeviceSettings extends PreferenceFragment implements
+        Preference.OnPreferenceChangeListener {
+
+    public static final String CATEGORY_FP = "fingerprint";
+    public static final String PREF_ENABLE_FPACTION = "fpaction_enabled";
+    public static final String PREF_FP_SHUTTER = "fp_shutter";
+    public static final String PREF_FPACTION_UP = "fpaction_up";
+    public static final String PREF_FPACTION_DOWN = "fpaction_down";
+    public static final String PREF_FPACTION_LEFT = "fpaction_left";
+    public static final String PREF_FPACTION_RIGHT = "fpaction_right";
+
+    public static final String PREF_TORCH_BRIGHTNESS = "torch_brightness";
+    public static final String TORCH_1_BRIGHTNESS_PATH = "/sys/devices/soc/800f000.qcom," +
+            "spmi/spmi-0/spmi0-03/800f000.qcom,spmi:qcom,pm660l@3:qcom,leds@d300/leds/led:torch_0/max_brightness";
+    public static final String TORCH_2_BRIGHTNESS_PATH = "/sys/devices/soc/800f000.qcom," +
+            "spmi/spmi-0/spmi0-03/800f000.qcom,spmi:qcom,pm660l@3:qcom,leds@d300/leds/led:torch_1/max_brightness";
+
+    public static final String PREF_VIBRATION_STRENGTH = "vibration_strength";
+    public static final String VIBRATION_STRENGTH_PATH = "/sys/devices/virtual/timed_output/vibrator/vtg_level";
+
+    // value of vtg_min and vtg_max
+    public static final int MIN_VIBRATION = 116;
+    public static final int MAX_VIBRATION = 3596;
+
+    public static final String PREF_ENABLE_HAL3 = "hal3";
+    public static final String HAL3_SYSTEM_PROPERTY = "persist.camera.HAL3.enabled";
+
+    public static final String PREF_ENABLE_EIS = "eis";
+    public static final String EIS_SYSTEM_PROPERTY = "persist.camera.eis.enable";
+
+    public static final String CATEGORY_DISPLAY = "display";
+    public static final String PREF_DEVICE_DOZE = "device_doze";
+    public static final String PREF_DEVICE_KCAL = "device_kcal";
+
+    public static final String PREF_SPECTRUM = "spectrum";
+    public static final String SPECTRUM_SYSTEM_PROPERTY = "persist.spectrum.profile";
+
+    public static final String PREF_ENABLE_DIRAC = "dirac_enabled";
+    public static final String PREF_HEADSET = "dirac_headset_pref";
+    public static final String PREF_PRESET = "dirac_preset_pref";
+    public static final String PREF_HEADPHONE_GAIN = "headphone_gain";
+    public static final String HEADPHONE_GAIN_PATH = "/sys/kernel/sound_control/headphone_gain";
+    public static final String PREF_MICROPHONE_GAIN = "microphone_gain";
+    public static final String MICROPHONE_GAIN_PATH = "/sys/kernel/sound_control/mic_gain";
+
+    public static final String CATEGORY_FASTCHARGE = "usb_fastcharge";
+    public static final String PREF_USB_FASTCHARGE = "fastcharge";
+    public static final String USB_FASTCHARGE_PATH = "/sys/kernel/fast_charge/force_fast_charge";
+    public static final String CHARGE_PATH = "/sys/class/power_supply/battery/input_suspend";
+
+    public static final String CATEGORY_HALL_WAKEUP = "hall_wakeup";
+    public static final String PREF_HALL_WAKEUP = "hall";
+    public static final String HALL_WAKEUP_PATH = "/sys/module/hall/parameters/hall_toggle";
+
+    public static final String DEVICE_DOZE_PACKAGE_NAME = "org.lineageos.settings.doze";
+
+    private SecureSettingSwitchPreference mEnableHAL3;
+    private SecureSettingSwitchPreference mEnableEIS;
+    private SecureSettingSwitchPreference mEnableFpAction;
+    private SecureSettingSwitchPreference mFpShutter;
+    private SecureSettingListPreference mFpActionUp;
+    private SecureSettingListPreference mFpActionDown;
+    private SecureSettingListPreference mFpActionLeft;
+    private SecureSettingListPreference mFpActionRight;
+    private SecureSettingCustomSeekBarPreference mTorchBrightness;
+    private VibrationSeekBarPreference mVibrationStrength;
+    private Preference mKcal;
+    private SecureSettingListPreference mSPECTRUM;
+    private SecureSettingSwitchPreference mEnableDirac;
+    private SecureSettingListPreference mHeadsetType;
+    private SecureSettingListPreference mPreset;
+    private SecureSettingCustomSeekBarPreference mHeadphoneGain;
+    private SecureSettingCustomSeekBarPreference mMicrophoneGain;
+    private SecureSettingSwitchPreference mFastcharge;
+    private SecureSettingSwitchPreference mHall;
+
+    @Override
+    public void onCreatePreferences(Bundle savedInstanceState, String rootKey) {
+        setPreferencesFromResource(R.xml.preferences_xiaomi_parts, rootKey);
+
+        String device = FileUtils.getStringProp("ro.build.product", "unknown");
+
+        mEnableHAL3 = (SecureSettingSwitchPreference) findPreference(PREF_ENABLE_HAL3);
+        mEnableHAL3.setChecked(FileUtils.getProp(HAL3_SYSTEM_PROPERTY, false));
+        mEnableHAL3.setOnPreferenceChangeListener(this);
+
+        mEnableEIS = (SecureSettingSwitchPreference) findPreference(PREF_ENABLE_EIS);
+        mEnableEIS.setChecked(FileUtils.getProp(EIS_SYSTEM_PROPERTY, false));
+        mEnableEIS.setOnPreferenceChangeListener(this);
+
+        mEnableFpAction = (SecureSettingSwitchPreference) findPreference(PREF_ENABLE_FPACTION);
+        mEnableFpAction.setOnPreferenceChangeListener(this);
+
+        mFpShutter = (SecureSettingSwitchPreference) findPreference(PREF_FP_SHUTTER);
+        mFpShutter.setOnPreferenceChangeListener(this);
+
+        mFpActionUp = (SecureSettingListPreference) findPreference(PREF_FPACTION_UP);
+        mFpActionUp.setSummary(mFpActionUp.getEntry());
+        mFpActionUp.setOnPreferenceChangeListener(this);
+
+        mFpActionDown = (SecureSettingListPreference) findPreference(PREF_FPACTION_DOWN);
+        mFpActionDown.setSummary(mFpActionDown.getEntry());
+        mFpActionDown.setOnPreferenceChangeListener(this);
+
+        mFpActionLeft = (SecureSettingListPreference) findPreference(PREF_FPACTION_LEFT);
+        mFpActionLeft.setSummary(mFpActionLeft.getEntry());
+        mFpActionLeft.setOnPreferenceChangeListener(this);
+
+        mFpActionRight = (SecureSettingListPreference) findPreference(PREF_FPACTION_RIGHT);
+        mFpActionRight.setSummary(mFpActionRight.getEntry());
+        mFpActionRight.setOnPreferenceChangeListener(this);
+
+        if (device.equals("clover")) {
+            PreferenceCategory fpCategory = (PreferenceCategory) findPreference(CATEGORY_FP);
+            fpCategory.removePreference(mFpActionUp);
+            fpCategory.removePreference(mFpActionLeft);
+            fpCategory.removePreference(mFpActionRight);
+            mFpActionDown.setTitle(R.string.fpaction_title);
+        }
+
+        mTorchBrightness = (SecureSettingCustomSeekBarPreference) findPreference(PREF_TORCH_BRIGHTNESS);
+        mTorchBrightness.setEnabled(FileUtils.fileWritable(TORCH_1_BRIGHTNESS_PATH) &&
+                FileUtils.fileWritable(TORCH_2_BRIGHTNESS_PATH));
+        mTorchBrightness.setOnPreferenceChangeListener(this);
+
+        mVibrationStrength = (VibrationSeekBarPreference) findPreference(PREF_VIBRATION_STRENGTH);
+        mVibrationStrength.setEnabled(FileUtils.fileWritable(VIBRATION_STRENGTH_PATH));
+        mVibrationStrength.setOnPreferenceChangeListener(this);
+
+        PreferenceCategory displayCategory = (PreferenceCategory) findPreference(CATEGORY_DISPLAY);
+        if (isAppNotInstalled(DEVICE_DOZE_PACKAGE_NAME)) {
+            displayCategory.removePreference(findPreference(PREF_DEVICE_DOZE));
+        }
+
+        mKcal = findPreference(PREF_DEVICE_KCAL);
+
+        mKcal.setOnPreferenceClickListener(preference -> {
+            Intent intent = new Intent(getActivity().getApplicationContext(), KCalSettingsActivity.class);
+            startActivity(intent);
+            return true;
+        });
+
+        mSPECTRUM = (SecureSettingListPreference) findPreference(PREF_SPECTRUM);
+        mSPECTRUM.setValue(FileUtils.getStringProp(SPECTRUM_SYSTEM_PROPERTY, "0"));
+        mSPECTRUM.setSummary(mSPECTRUM.getEntry());
+        mSPECTRUM.setOnPreferenceChangeListener(this);
+
+        boolean enhancerEnabled;
+        try {
+            enhancerEnabled = DiracService.sDiracUtils.isDiracEnabled();
+        } catch (java.lang.NullPointerException e) {
+            getContext().startService(new Intent(getContext(), DiracService.class));
+            enhancerEnabled = DiracService.sDiracUtils.isDiracEnabled();
+        }
+
+        mEnableDirac = (SecureSettingSwitchPreference) findPreference(PREF_ENABLE_DIRAC);
+        mEnableDirac.setOnPreferenceChangeListener(this);
+        mEnableDirac.setChecked(enhancerEnabled);
+
+        mHeadsetType = (SecureSettingListPreference) findPreference(PREF_HEADSET);
+        mHeadsetType.setOnPreferenceChangeListener(this);
+
+        mPreset = (SecureSettingListPreference) findPreference(PREF_PRESET);
+        mPreset.setOnPreferenceChangeListener(this);
+
+        mHeadphoneGain = (SecureSettingCustomSeekBarPreference) findPreference(PREF_HEADPHONE_GAIN);
+        mHeadphoneGain.setOnPreferenceChangeListener(this);
+
+        mMicrophoneGain = (SecureSettingCustomSeekBarPreference) findPreference(PREF_MICROPHONE_GAIN);
+        mMicrophoneGain.setOnPreferenceChangeListener(this);
+
+        if (FileUtils.fileWritable(USB_FASTCHARGE_PATH)) {
+            mFastcharge = (SecureSettingSwitchPreference) findPreference(PREF_USB_FASTCHARGE);
+            mFastcharge.setChecked(FileUtils.getFileValueAsBoolean(USB_FASTCHARGE_PATH, false));
+            mFastcharge.setOnPreferenceChangeListener(this);
+        } else {
+            getPreferenceScreen().removePreference(findPreference(CATEGORY_FASTCHARGE));
+        }
+
+        if (FileUtils.fileWritable(HALL_WAKEUP_PATH)) {
+             mHall = (SecureSettingSwitchPreference) findPreference(PREF_HALL_WAKEUP);
+             mHall.setChecked(FileUtils.getFileValueAsBoolean(HALL_WAKEUP_PATH, false));
+             mHall.setOnPreferenceChangeListener(this);
+         } else {
+             getPreferenceScreen().removePreference(findPreference(CATEGORY_HALL_WAKEUP));
+         }
+    }
+
+    @Override
+    public boolean onPreferenceChange(Preference preference, Object value) {
+        final String key = preference.getKey();
+        switch (key) {
+            case PREF_ENABLE_HAL3:
+                FileUtils.setProp(HAL3_SYSTEM_PROPERTY, (Boolean) value);
+                break;
+
+            case PREF_ENABLE_EIS:
+                FileUtils.setProp(EIS_SYSTEM_PROPERTY, (Boolean) value);
+                break;
+
+            case PREF_FPACTION_UP:
+                mFpActionUp.setValue((String) value);
+                mFpActionUp.setSummary(mFpActionUp.getEntry());
+                break;
+
+            case PREF_FPACTION_DOWN:
+                mFpActionDown.setValue((String) value);
+                mFpActionDown.setSummary(mFpActionDown.getEntry());
+                break;
+
+            case PREF_FPACTION_LEFT:
+                mFpActionLeft.setValue((String) value);
+                mFpActionLeft.setSummary(mFpActionLeft.getEntry());
+                break;
+
+            case PREF_FPACTION_RIGHT:
+                mFpActionRight.setValue((String) value);
+                mFpActionRight.setSummary(mFpActionRight.getEntry());
+                break;
+
+            case PREF_TORCH_BRIGHTNESS:
+                FileUtils.setValue(TORCH_1_BRIGHTNESS_PATH, (int) value);
+                FileUtils.setValue(TORCH_2_BRIGHTNESS_PATH, (int) value);
+                break;
+
+            case PREF_VIBRATION_STRENGTH:
+                double vibrationValue = (int) value / 100.0 * (MAX_VIBRATION - MIN_VIBRATION) + MIN_VIBRATION;
+                FileUtils.setValue(VIBRATION_STRENGTH_PATH, vibrationValue);
+                break;
+
+            case PREF_SPECTRUM:
+                mSPECTRUM.setValue((String) value);
+                mSPECTRUM.setSummary(mSPECTRUM.getEntry());
+                FileUtils.setStringProp(SPECTRUM_SYSTEM_PROPERTY, (String) value);
+                break;
+
+            case PREF_ENABLE_DIRAC:
+                try {
+                    DiracService.sDiracUtils.setEnabled((boolean) value);
+                } catch (java.lang.NullPointerException e) {
+                    getContext().startService(new Intent(getContext(), DiracService.class));
+                    DiracService.sDiracUtils.setEnabled((boolean) value);
+                }
+                break;
+
+            case PREF_HEADSET:
+                try {
+                    DiracService.sDiracUtils.setHeadsetType(Integer.parseInt(value.toString()));
+                } catch (java.lang.NullPointerException e) {
+                    getContext().startService(new Intent(getContext(), DiracService.class));
+                    DiracService.sDiracUtils.setHeadsetType(Integer.parseInt(value.toString()));
+                }
+                break;
+
+            case PREF_PRESET:
+                try {
+                    DiracService.sDiracUtils.setLevel(String.valueOf(value));
+                } catch (java.lang.NullPointerException e) {
+                    getContext().startService(new Intent(getContext(), DiracService.class));
+                    DiracService.sDiracUtils.setLevel(String.valueOf(value));
+                }
+                break;
+
+            case PREF_HEADPHONE_GAIN:
+                FileUtils.setValue(HEADPHONE_GAIN_PATH, value + " " + value);
+                break;
+
+            case PREF_MICROPHONE_GAIN:
+                FileUtils.setValue(MICROPHONE_GAIN_PATH, (int) value);
+                break;
+
+            case PREF_USB_FASTCHARGE:
+                FileUtils.setValue(USB_FASTCHARGE_PATH, (boolean) value);
+                FileUtils.setValue(CHARGE_PATH, (int) 1);
+                FileUtils.setValue(CHARGE_PATH, (int) 0);
+                break;
+
+            case PREF_HALL_WAKEUP:
+                FileUtils.setValue(HALL_WAKEUP_PATH, (boolean) value);
+                break;
+
+            default:
+                break;
+        }
+        return true;
+    }
+
+    private boolean isAppNotInstalled(String uri) {
+        PackageManager packageManager = getContext().getPackageManager();
+        try {
+            packageManager.getPackageInfo(uri, PackageManager.GET_ACTIVITIES);
+            return false;
+        } catch (PackageManager.NameNotFoundException e) {
+            return true;
+        }
+    }
+}
diff --git a/XiaomiParts/src/org/lineageos/settings/device/DeviceSettingsActivity.java b/XiaomiParts/src/org/lineageos/settings/device/DeviceSettingsActivity.java
new file mode 100644
index 0000000..2c8f311
--- /dev/null
+++ b/XiaomiParts/src/org/lineageos/settings/device/DeviceSettingsActivity.java
@@ -0,0 +1,53 @@
+/*
+ * Copyright (C) 2018 The Xiaomi-SDM660 Project
+ *
+ * Licensed under the Apache License, Version 2.0 (the "License");
+ * you may not use this file except in compliance with the License.
+ * You may obtain a copy of the License at
+ *
+ *      http://www.apache.org/licenses/LICENSE-2.0
+ *
+ * Unless required by applicable law or agreed to in writing, software
+ * distributed under the License is distributed on an "AS IS" BASIS,
+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+ * See the License for the specific language governing permissions and
+ * limitations under the License
+ */
+
+package org.lineageos.settings.device;
+
+import android.app.Activity;
+import android.app.Fragment;
+import android.os.Bundle;
+import android.view.MenuItem;
+
+public class DeviceSettingsActivity extends Activity {
+
+    private DeviceSettings mDeviceSettingsFragment;
+
+    @Override
+    protected void onCreate(Bundle savedInstanceState) {
+        super.onCreate(savedInstanceState);
+
+        getActionBar().setDisplayHomeAsUpEnabled(true);
+
+        Fragment fragment = getFragmentManager().findFragmentById(android.R.id.content);
+        if (fragment == null) {
+            mDeviceSettingsFragment = new DeviceSettings();
+            getFragmentManager().beginTransaction()
+                    .add(android.R.id.content, mDeviceSettingsFragment)
+                    .commit();
+        } else {
+            mDeviceSettingsFragment = (DeviceSettings) fragment;
+        }
+    }
+
+    @Override
+    public boolean onOptionsItemSelected(MenuItem item) {
+        if (item.getItemId() == android.R.id.home) {
+            finish();
+            return true;
+        }
+        return super.onOptionsItemSelected(item);
+    }
+}
diff --git a/XiaomiParts/src/org/lineageos/settings/device/DiracService.java b/XiaomiParts/src/org/lineageos/settings/device/DiracService.java
new file mode 100644
index 0000000..20c805f
--- /dev/null
+++ b/XiaomiParts/src/org/lineageos/settings/device/DiracService.java
@@ -0,0 +1,32 @@
+package org.lineageos.settings.device;
+
+import android.app.Service;
+import android.content.Intent;
+import android.os.IBinder;
+import android.util.Log;
+
+public class DiracService extends Service {
+
+    private final String TAG = this.getClass().getName();
+
+    static DiracUtils sDiracUtils;
+
+    @Override
+    public IBinder onBind(Intent arg0) {
+        return null;
+    }
+
+    @Override
+    public int onStartCommand(Intent intent, int flags, int startId) {
+        sDiracUtils = new DiracUtils();
+        sDiracUtils.onBootCompleted();
+        Log.d(TAG, "Service started");
+        return START_STICKY;
+    }
+
+    @Override
+    public void onDestroy() {
+        super.onDestroy();
+        Log.d(TAG, "Service destroyed");
+    }
+}
diff --git a/parts/src/org/lineageos/settings/dirac/DiracSound.java b/XiaomiParts/src/org/lineageos/settings/device/DiracSound.java
similarity index 77%
rename from parts/src/org/lineageos/settings/dirac/DiracSound.java
rename to XiaomiParts/src/org/lineageos/settings/device/DiracSound.java
index d0773c3..227c975 100644
--- a/parts/src/org/lineageos/settings/dirac/DiracSound.java
+++ b/XiaomiParts/src/org/lineageos/settings/device/DiracSound.java
@@ -14,13 +14,13 @@
  * limitations under the License.
  */
 
-package org.lineageos.settings.dirac;
+package org.lineageos.settings.device;
 
 import android.media.audiofx.AudioEffect;
 
 import java.util.UUID;
 
-public class DiracSound extends AudioEffect {
+class DiracSound extends AudioEffect {
 
     private static final int DIRACSOUND_PARAM_HEADSET_TYPE = 1;
     private static final int DIRACSOUND_PARAM_EQ_LEVEL = 2;
@@ -28,49 +28,48 @@ public class DiracSound extends AudioEffect {
 
     private static final UUID EFFECT_TYPE_DIRACSOUND =
             UUID.fromString("e069d9e0-8329-11df-9168-0002a5d5c51b");
-    private static final String TAG = "DiracSound";
 
-    public DiracSound(int priority, int audioSession) {
+    DiracSound(int priority, int audioSession) {
         super(EFFECT_TYPE_NULL, EFFECT_TYPE_DIRACSOUND, priority, audioSession);
     }
 
-    public void setMusic(int enable) throws IllegalStateException,
-            IllegalArgumentException, UnsupportedOperationException {
-        checkStatus(setParameter(DIRACSOUND_PARAM_MUSIC, enable));
-    }
-
-    public int getMusic() throws IllegalStateException,
+    int getMusic() throws IllegalStateException,
             IllegalArgumentException, UnsupportedOperationException {
         int[] value = new int[1];
         checkStatus(getParameter(DIRACSOUND_PARAM_MUSIC, value));
         return value[0];
     }
 
-    public void setHeadsetType(int type) throws IllegalStateException,
+    void setMusic(int enable) throws IllegalStateException,
             IllegalArgumentException, UnsupportedOperationException {
-        checkStatus(setParameter(DIRACSOUND_PARAM_HEADSET_TYPE, type));
+        checkStatus(setParameter(DIRACSOUND_PARAM_MUSIC, enable));
     }
 
-    public int getHeadsetType() throws IllegalStateException,
+    int getHeadsetType() throws IllegalStateException,
             IllegalArgumentException, UnsupportedOperationException {
         int[] value = new int[1];
         checkStatus(getParameter(DIRACSOUND_PARAM_HEADSET_TYPE, value));
         return value[0];
     }
 
-    public void setLevel(int band, float level) throws IllegalStateException,
+    void setHeadsetType(int type) throws IllegalStateException,
+            IllegalArgumentException, UnsupportedOperationException {
+        checkStatus(setParameter(DIRACSOUND_PARAM_HEADSET_TYPE, type));
+    }
+
+    void setLevel(int band, float level) throws IllegalStateException,
             IllegalArgumentException, UnsupportedOperationException {
         checkStatus(setParameter(new int[]{DIRACSOUND_PARAM_EQ_LEVEL, band},
                 String.valueOf(level).getBytes()));
     }
 
-    public float getLevel(int band) throws IllegalStateException,
+    float getLevel(int band) throws IllegalStateException,
             IllegalArgumentException, UnsupportedOperationException {
         int[] param = new int[2];
         byte[] value = new byte[10];
         param[0] = DIRACSOUND_PARAM_EQ_LEVEL;
         param[1] = band;
         checkStatus(getParameter(param, value));
-        return new Float(new String(value)).floatValue();
+        return Float.valueOf(new String(value));
     }
 }
diff --git a/XiaomiParts/src/org/lineageos/settings/device/DiracUtils.java b/XiaomiParts/src/org/lineageos/settings/device/DiracUtils.java
new file mode 100644
index 0000000..f7a4968
--- /dev/null
+++ b/XiaomiParts/src/org/lineageos/settings/device/DiracUtils.java
@@ -0,0 +1,62 @@
+/*
+ * Copyright (C) 2018 The LineageOS Project
+ *
+ * Licensed under the Apache License, Version 2.0 (the "License");
+ * you may not use this file except in compliance with the License.
+ * You may obtain a copy of the License at
+ *
+ *      http://www.apache.org/licenses/LICENSE-2.0
+ *
+ * Unless required by applicable law or agreed to in writing, software
+ * distributed under the License is distributed on an "AS IS" BASIS,
+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+ * See the License for the specific language governing permissions and
+ * limitations under the License.
+ */
+
+package org.lineageos.settings.device;
+
+final class DiracUtils {
+
+    private final DiracSound mDiracSound;
+
+    DiracUtils() {
+        mDiracSound = new DiracSound(0, 0);
+    }
+
+    void onBootCompleted() {
+        setEnabled(mDiracSound.getMusic() == 1);
+        mDiracSound.setHeadsetType(mDiracSound.getHeadsetType());
+        setLevel(getLevel());
+    }
+
+    void setEnabled(boolean enable) {
+        mDiracSound.setEnabled(enable);
+        mDiracSound.setMusic(enable ? 1 : 0);
+    }
+
+    boolean isDiracEnabled() {
+        return mDiracSound.getMusic() == 1;
+    }
+
+    private String getLevel() {
+        StringBuilder selected = new StringBuilder();
+        for (int band = 0; band <= 6; band++) {
+            int temp = (int) mDiracSound.getLevel(band);
+            selected.append(temp);
+            if (band != 6) selected.append(",");
+        }
+        return selected.toString();
+    }
+
+    void setLevel(String preset) {
+        String[] level = preset.split("\\s*,\\s*");
+        for (int band = 0; band <= level.length - 1; band++) {
+            mDiracSound.setLevel(band, Float.valueOf(level[band]));
+        }
+    }
+
+    void setHeadsetType(int paramInt) {
+        mDiracSound.setHeadsetType(paramInt);
+    }
+}
diff --git a/XiaomiParts/src/org/lineageos/settings/device/FileUtils.java b/XiaomiParts/src/org/lineageos/settings/device/FileUtils.java
new file mode 100644
index 0000000..ef5aa7b
--- /dev/null
+++ b/XiaomiParts/src/org/lineageos/settings/device/FileUtils.java
@@ -0,0 +1,162 @@
+/*
+ * Copyright (C) 2018 The Xiaomi-SDM660 Project
+ *
+ * Licensed under the Apache License, Version 2.0 (the "License");
+ * you may not use this file except in compliance with the License.
+ * You may obtain a copy of the License at
+ *
+ *      http://www.apache.org/licenses/LICENSE-2.0
+ *
+ * Unless required by applicable law or agreed to in writing, software
+ * distributed under the License is distributed on an "AS IS" BASIS,
+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+ * See the License for the specific language governing permissions and
+ * limitations under the License
+ */
+
+package org.lineageos.settings.device;
+
+import android.os.SystemProperties;
+
+import java.io.BufferedReader;
+import java.io.File;
+import java.io.FileOutputStream;
+import java.io.FileReader;
+import java.io.IOException;
+
+class FileUtils {
+
+    static boolean fileWritable(String filename) {
+        return fileExists(filename) && new File(filename).canWrite();
+    }
+
+    private static boolean fileExists(String filename) {
+        if (filename == null) {
+            return false;
+        }
+        return new File(filename).exists();
+    }
+
+    static void setValue(String path, int value) {
+        if (fileWritable(path)) {
+            if (path == null) {
+                return;
+            }
+            try {
+                FileOutputStream fos = new FileOutputStream(new File(path));
+                fos.write(Integer.toString(value).getBytes());
+                fos.flush();
+                fos.close();
+            } catch (IOException e) {
+                e.printStackTrace();
+            }
+        }
+    }
+
+    static void setValue(String path, boolean value) {
+        if (fileWritable(path)) {
+            if (path == null) {
+                return;
+            }
+            try {
+                FileOutputStream fos = new FileOutputStream(new File(path));
+                fos.write((value ? "1" : "0").getBytes());
+                fos.flush();
+                fos.close();
+            } catch (IOException e) {
+                e.printStackTrace();
+            }
+        }
+    }
+
+    static void setValue(String path, double value) {
+        if (fileWritable(path)) {
+            if (path == null) {
+                return;
+            }
+            try {
+                FileOutputStream fos = new FileOutputStream(new File(path));
+                fos.write(Long.toString(Math.round(value)).getBytes());
+                fos.flush();
+                fos.close();
+            } catch (IOException e) {
+                e.printStackTrace();
+            }
+        }
+    }
+
+    static void setValue(String path, String value) {
+        if (fileWritable(path)) {
+            if (path == null) {
+                return;
+            }
+            try {
+                FileOutputStream fos = new FileOutputStream(new File(path));
+                fos.write(value.getBytes());
+                fos.flush();
+                fos.close();
+            } catch (IOException e) {
+                e.printStackTrace();
+            }
+        }
+    }
+
+    static String readLine(String filename) {
+        if (filename == null) {
+            return null;
+        }
+        BufferedReader br = null;
+        String line;
+        try {
+            br = new BufferedReader(new FileReader(filename), 1024);
+            line = br.readLine();
+        } catch (IOException e) {
+            return null;
+        } finally {
+            if (br != null) {
+                try {
+                    br.close();
+                } catch (IOException e) {
+                    // ignore
+                }
+            }
+        }
+        return line;
+    }
+
+    static boolean getFileValueAsBoolean(String filename, boolean defValue) {
+        String fileValue = readLine(filename);
+        if (fileValue != null) {
+            return !fileValue.equals("0");
+        }
+        return defValue;
+    }
+
+    static void setProp(String prop, boolean value) {
+        if (value) {
+            SystemProperties.set(prop, "1");
+        } else {
+            SystemProperties.set(prop, "0");
+        }
+    }
+
+    static boolean getProp(String prop, boolean defaultValue) {
+        return SystemProperties.getBoolean(prop, defaultValue);
+    }
+
+    static void setStringProp(String prop, String value) {
+        SystemProperties.set(prop, value);
+    }
+
+    static String getStringProp(String prop, String defaultValue) {
+        return SystemProperties.get(prop, defaultValue);
+    }
+
+    static void setintProp(String prop, int value) {
+        SystemProperties.set(prop, String.valueOf(value));
+    }
+
+    static int getintProp(String prop, int defaultValue) {
+        return SystemProperties.getInt(prop, defaultValue);
+    }
+}
diff --git a/XiaomiParts/src/org/lineageos/settings/device/PerformanceTileService.java b/XiaomiParts/src/org/lineageos/settings/device/PerformanceTileService.java
new file mode 100644
index 0000000..174907f
--- /dev/null
+++ b/XiaomiParts/src/org/lineageos/settings/device/PerformanceTileService.java
@@ -0,0 +1,38 @@
+package org.lineageos.settings.device;
+
+import android.service.quicksettings.Tile;
+import android.service.quicksettings.TileService;
+
+public class PerformanceTileService extends TileService {
+
+    @Override
+    public void onStartListening() {
+        int currentState = FileUtils.getintProp(DeviceSettings.SPECTRUM_SYSTEM_PROPERTY, 0);
+
+        Tile tile = getQsTile();
+        tile.setState(Tile.STATE_ACTIVE);
+        tile.setLabel(getResources().getStringArray(R.array.spectrum_profiles)[currentState]);
+
+        tile.updateTile();
+        super.onStartListening();
+    }
+
+    @Override
+    public void onClick() {
+        int currentState = FileUtils.getintProp(DeviceSettings.SPECTRUM_SYSTEM_PROPERTY, 0);
+
+        int nextState;
+        if (currentState == 4) {
+            nextState = 0;
+        } else {
+            nextState = currentState + 1;
+        }
+
+        Tile tile = getQsTile();
+        FileUtils.setintProp(DeviceSettings.SPECTRUM_SYSTEM_PROPERTY, nextState);
+        tile.setLabel(getResources().getStringArray(R.array.spectrum_profiles)[nextState]);
+
+        tile.updateTile();
+        super.onClick();
+    }
+}
diff --git a/XiaomiParts/src/org/lineageos/settings/device/StartAction.java b/XiaomiParts/src/org/lineageos/settings/device/StartAction.java
new file mode 100644
index 0000000..0c8ce5c
--- /dev/null
+++ b/XiaomiParts/src/org/lineageos/settings/device/StartAction.java
@@ -0,0 +1,156 @@
+/*
+ * Copyright (C) 2018 The Xiaomi-SDM660 Project
+ *
+ * Licensed under the Apache License, Version 2.0 (the "License");
+ * you may not use this file except in compliance with the License.
+ * You may obtain a copy of the License at
+ *
+ *      http://www.apache.org/licenses/LICENSE-2.0
+ *
+ * Unless required by applicable law or agreed to in writing, software
+ * distributed under the License is distributed on an "AS IS" BASIS,
+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+ * See the License for the specific language governing permissions and
+ * limitations under the License
+ */
+
+package org.lineageos.settings.device;
+
+import android.app.ActivityManager;
+import android.app.IntentService;
+import android.app.StatusBarManager;
+import android.content.ComponentName;
+import android.content.Context;
+import android.content.Intent;
+import android.hardware.input.InputManager;
+import android.os.SystemClock;
+import android.provider.Settings;
+import android.view.InputDevice;
+import android.view.KeyCharacterMap;
+import android.view.KeyEvent;
+
+import java.util.Arrays;
+
+public class StartAction extends IntentService {
+
+    private static final String[] CAMERA_PACKAGES = new String[]{"com.android.camera",
+            "com.android.camera2", "com.google.android.GoogleCamera"};
+
+    private static final String FP_SWIPE_DIRECTION = "FP_SWIPE_DIRECTION";
+    private static final int FP_SWIPE_UP = 0;
+    private static final int FP_SWIPE_DOWN = 1;
+    private static final int FP_SWIPE_LEFT = 2;
+    private static final int FP_SWIPE_RIGHT = 3;
+
+    private boolean mCameraActive = false;
+    private boolean mFpActionEnabled = false;
+    private boolean mFpShutterEnabled = false;
+
+    private String fpActionUp;
+    private String fpActionDown;
+    private String fpActionLeft;
+    private String fpActionRight;
+
+    private static StatusBarManager sStatusBarManager;
+
+    public StartAction() {
+        super("StartAction");
+    }
+
+    @Override
+    protected void onHandleIntent(Intent intent) {
+        ActivityManager activityManager =
+                (ActivityManager) this.getSystemService(Context.ACTIVITY_SERVICE);
+        sStatusBarManager = (StatusBarManager) getSystemService(STATUS_BAR_SERVICE);
+
+        ComponentName componentName = activityManager.getRunningTasks(1).get(0)
+                .topActivity;
+
+        mCameraActive = Arrays.asList(CAMERA_PACKAGES).contains(componentName.getPackageName());
+        mFpActionEnabled = Settings.Secure.getInt(this.getContentResolver(),
+                DeviceSettings.PREF_ENABLE_FPACTION, 0) == 1;
+        mFpShutterEnabled = Settings.Secure.getInt(this.getContentResolver(),
+                DeviceSettings.PREF_FP_SHUTTER, 0) == 1;
+
+        fpActionUp = Settings.Secure.getString(this.getContentResolver(),
+                DeviceSettings.PREF_FPACTION_UP);
+        fpActionDown = Settings.Secure.getString(this.getContentResolver(),
+                DeviceSettings.PREF_FPACTION_DOWN);
+        fpActionLeft = Settings.Secure.getString(this.getContentResolver(),
+                DeviceSettings.PREF_FPACTION_LEFT);
+        fpActionRight = Settings.Secure.getString(this.getContentResolver(),
+                DeviceSettings.PREF_FPACTION_RIGHT);
+
+        int swipeDirection = intent.getIntExtra(FP_SWIPE_DIRECTION, 4);
+        if (mFpShutterEnabled) {
+            if (mCameraActive) {
+                sendKeyCode(KeyEvent.KEYCODE_CAMERA);
+            } else {
+                fpAction(swipeDirection);
+            }
+        } else {
+            fpAction(swipeDirection);
+        }
+    }
+
+    private void fpAction(int swipeDirection) {
+        String action;
+        int codeDef;
+        switch (swipeDirection) {
+            case FP_SWIPE_UP:
+                action = fpActionUp;
+                codeDef = 280;
+                break;
+
+            case FP_SWIPE_DOWN:
+                action = fpActionDown;
+                codeDef = 281;
+                break;
+
+            case FP_SWIPE_LEFT:
+                action = fpActionLeft;
+                codeDef = 282;
+                break;
+
+            case FP_SWIPE_RIGHT:
+                action = fpActionRight;
+                codeDef = 283;
+                break;
+
+            default:
+                action = fpActionDown;
+                codeDef = 281;
+                break;
+        }
+
+        if (!mFpActionEnabled && (!mCameraActive || !mFpShutterEnabled)) {
+            action = "def";
+        }
+
+        switch (action) {
+            case "def":
+                sendKeyCode(codeDef);
+                break;
+            case "expnp":
+                sStatusBarManager.expandNotificationsPanel();
+                break;
+            case "expqs":
+                sStatusBarManager.expandSettingsPanel();
+                break;
+            default:
+                sendKeyCode(Integer.parseInt(action));
+                break;
+        }
+    }
+
+    private void sendKeyCode(int code) {
+        InputManager inputManager = InputManager.getInstance();
+        final KeyEvent downEvent = new KeyEvent(SystemClock.uptimeMillis(),
+                SystemClock.uptimeMillis(), KeyEvent.ACTION_DOWN, code, 0, 0,
+                KeyCharacterMap.VIRTUAL_KEYBOARD, 0, KeyEvent.FLAG_FROM_SYSTEM,
+                InputDevice.SOURCE_KEYBOARD);
+        final KeyEvent upEvent = KeyEvent.changeAction(downEvent, KeyEvent.ACTION_UP);
+        inputManager.injectInputEvent(downEvent, InputManager.INJECT_INPUT_EVENT_MODE_ASYNC);
+        inputManager.injectInputEvent(upEvent, InputManager.INJECT_INPUT_EVENT_MODE_ASYNC);
+    }
+}
diff --git a/XiaomiParts/src/org/lineageos/settings/device/preferences/CustomSeekBarPreference.java b/XiaomiParts/src/org/lineageos/settings/device/preferences/CustomSeekBarPreference.java
new file mode 100644
index 0000000..0256cd6
--- /dev/null
+++ b/XiaomiParts/src/org/lineageos/settings/device/preferences/CustomSeekBarPreference.java
@@ -0,0 +1,314 @@
+/*
+ * Copyright (C) 2016 The Dirty Unicorns Project
+ *
+ * Licensed under the Apache License, Version 2.0 (the "License");
+ * you may not use this file except in compliance with the License.
+ * You may obtain a copy of the License at
+ *
+ *      http://www.apache.org/licenses/LICENSE-2.0
+ *
+ * Unless required by applicable law or agreed to in writing, software
+ * distributed under the License is distributed on an "AS IS" BASIS,
+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+ * See the License for the specific language governing permissions and
+ * limitations under the License
+ */
+
+package org.lineageos.settings.device.preferences;
+
+import android.app.AlertDialog;
+import android.content.Context;
+import android.content.res.TypedArray;
+import android.support.v7.preference.Preference;
+import android.support.v7.preference.PreferenceViewHolder;
+import android.text.Editable;
+import android.text.TextWatcher;
+import android.util.AttributeSet;
+import android.util.Log;
+import android.view.View;
+import android.view.ViewGroup;
+import android.view.ViewParent;
+import android.widget.EditText;
+import android.widget.LinearLayout;
+import android.widget.SeekBar;
+import android.widget.TextView;
+
+import org.lineageos.settings.device.R;
+
+public class CustomSeekBarPreference extends Preference implements SeekBar.OnSeekBarChangeListener {
+    private static final String APP_NS = "http://schemas.android.com/apk/res-auto";
+    private static final String ANDROIDNS = "http://schemas.android.com/apk/res/android";
+    private static final int DEFAULT_VALUE = 50;
+    private final String TAG = getClass().getName();
+    private final SeekBar mSeekBar;
+    private int mMin;
+    private int mInterval = 1;
+    private int mCurrentValue;
+    private int mDefaultValue;
+    private int mMax;
+    private String mUnits;
+    private String mDefaultText;
+    private LinearLayout mStatusTextContainer;
+    private TextView mTitle;
+    private TextView mStatusText;
+    private AlertDialog mDialog;
+    private EditText mEdit;
+
+    public CustomSeekBarPreference(Context context, AttributeSet attrs, int defStyleAttr, int defStyleRes) {
+        super(context, attrs, defStyleAttr, defStyleRes);
+        final TypedArray a = context.obtainStyledAttributes(attrs, R.styleable.CustomSeekBarPreference);
+
+        mMax = attrs.getAttributeIntValue(ANDROIDNS, "max", 100);
+        mMin = attrs.getAttributeIntValue(APP_NS, "min", 0);
+        mDefaultValue = attrs.getAttributeIntValue(ANDROIDNS, "defaultValue", -1);
+        if (mDefaultValue > mMax) {
+            mDefaultValue = mMax;
+        }
+        mUnits = getAttributeStringValue(attrs, APP_NS, "units", "");
+        mDefaultText = getAttributeStringValue(attrs, APP_NS, "defaultText",
+                Integer.toString(mDefaultValue));
+
+        int id = a.getResourceId(R.styleable.CustomSeekBarPreference_units, 0);
+        if (id > 0) {
+            mUnits = context.getResources().getString(id);
+        }
+        id = a.getResourceId(R.styleable.CustomSeekBarPreference_defaultText, 0);
+        if (id > 0) {
+            mDefaultText = context.getResources().getString(id);
+        }
+
+        try {
+            String newInterval = attrs.getAttributeValue(APP_NS, "interval");
+            if (newInterval != null)
+                mInterval = Integer.parseInt(newInterval);
+        } catch (Exception e) {
+            Log.e(TAG, "Invalid interval value", e);
+        }
+
+        a.recycle();
+        mSeekBar = new SeekBar(context, attrs);
+        mSeekBar.setMax(mMax - mMin);
+        mSeekBar.setOnSeekBarChangeListener(this);
+        setLayoutResource(R.layout.preference_custom_seekbar);
+    }
+
+    public CustomSeekBarPreference(Context context, AttributeSet attrs, int defStyleAttr) {
+        this(context, attrs, defStyleAttr, 0);
+    }
+
+    public CustomSeekBarPreference(Context context, AttributeSet attrs) {
+        this(context, attrs, 0);
+    }
+
+    public CustomSeekBarPreference(Context context) {
+        this(context, null);
+    }
+
+    private String getAttributeStringValue(AttributeSet attrs, String namespace, String name, String defaultValue) {
+        String value = attrs.getAttributeValue(namespace, name);
+        if (value == null)
+            value = defaultValue;
+
+        return value;
+    }
+
+    @Override
+    public void onDependencyChanged(Preference dependency, boolean disableDependent) {
+        super.onDependencyChanged(dependency, disableDependent);
+        this.setShouldDisableView(true);
+        if (mTitle != null)
+            mTitle.setEnabled(!disableDependent);
+        if (mSeekBar != null)
+            mSeekBar.setEnabled(!disableDependent);
+        if (mStatusText != null)
+            mStatusText.setEnabled(!disableDependent);
+    }
+
+    @Override
+    public void onBindViewHolder(PreferenceViewHolder view) {
+        super.onBindViewHolder(view);
+        try {
+            // move our seekbar to the new view we've been given
+            ViewParent oldContainer = mSeekBar.getParent();
+            ViewGroup newContainer = (ViewGroup) view.findViewById(R.id.seekBarPrefBarContainer);
+
+            if (oldContainer != newContainer) {
+                // remove the seekbar from the old view
+                if (oldContainer != null) {
+                    ((ViewGroup) oldContainer).removeView(mSeekBar);
+                }
+                // remove the existing seekbar (there may not be one) and add ours
+                newContainer.removeAllViews();
+                newContainer.addView(mSeekBar, ViewGroup.LayoutParams.FILL_PARENT, ViewGroup.LayoutParams.WRAP_CONTENT);
+            }
+        } catch (Exception ex) {
+            Log.e(TAG, "Error binding view: " + ex.toString());
+        }
+        mStatusText = (TextView) view.findViewById(R.id.seekBarPrefValue);
+        if (mCurrentValue == mDefaultValue) {
+            mStatusText.setText(mDefaultText);
+        } else {
+            mStatusText.setText(mCurrentValue + mUnits);
+        }
+        mSeekBar.setProgress(mCurrentValue - mMin);
+        mStatusTextContainer = (LinearLayout) view.findViewById(R.id.text_container);
+        mStatusTextContainer.setClickable(true);
+        mStatusTextContainer.setOnClickListener((View v) -> {
+            mDialog = new AlertDialog.Builder(getContext())
+                    .setTitle(getContext().getResources().getString(R.string.edit_value))
+                    .setView(R.layout.custom_seekbar_preference_dialog)
+                    .setNegativeButton(android.R.string.cancel, (dialog, which) -> mDialog = null)
+                    .setNeutralButton(R.string.default_value, (dialog, which) -> {
+                        refresh(mDefaultValue);
+                        mDialog = null;
+                    })
+                    .setPositiveButton(android.R.string.ok, (dialog, which) -> {
+                        if (mEdit != null) {
+                            try {
+                                if (Integer.parseInt(mEdit.getText().toString()) >= mMin && Integer.parseInt(mEdit.getText().toString()) <= mMax) {
+                                    refresh(Integer.parseInt(mEdit.getText().toString()));
+                                }
+                            } catch (NumberFormatException e) {
+                                // Prevent crashes and ignore invalid input
+                            }
+                        }
+                        mDialog = null;
+                    })
+                    .show();
+            mEdit = mDialog.findViewById(R.id.edit);
+            mEdit.addTextChangedListener(new TextWatcher() {
+                @Override
+                public void beforeTextChanged(CharSequence s, int start, int count, int after) {
+                }
+
+                @Override
+                public void onTextChanged(CharSequence s, int start, int before, int count) {
+                }
+
+                @Override
+                public void afterTextChanged(Editable s) {
+                    try {
+                        if (Integer.parseInt(s.toString()) > mMax) {
+                            s.replace(0, s.length(), String.valueOf(mMax));
+                        } else if (Integer.parseInt(s.toString()) < mMin) {
+                            s.replace(0, s.length(), String.valueOf(mMin));
+                        }
+                    } catch (NumberFormatException e) {
+                        // Prevent crashes and ignore invalid input
+                    }
+                }
+            });
+            mEdit.setHint(getContext().getResources().getString(R.string.edit_hint, mMin, mMax));
+            mEdit.setText(String.valueOf(mCurrentValue));
+        });
+
+        mTitle = (TextView) view.findViewById(android.R.id.title);
+        view.setDividerAllowedAbove(false);
+
+        mSeekBar.setEnabled(isEnabled());
+    }
+
+    public void setMax(int max) {
+        mMax = max;
+        mSeekBar.setMax(mMax - mMin);
+    }
+
+    public void setMin(int min) {
+        mMin = min;
+        mSeekBar.setMax(mMax - mMin);
+    }
+
+    public void setIntervalValue(int value) {
+        mInterval = value;
+    }
+
+    public String getValue() {
+        return Integer.toString(mCurrentValue);
+    }
+
+    public void setValue(int value) {
+        mCurrentValue = value;
+    }
+
+    @Override
+    public void onProgressChanged(SeekBar seekBar, int progress, boolean fromUser) {
+        int newValue = progress + mMin;
+        if (newValue > mMax)
+            newValue = mMax;
+        else if (newValue < mMin)
+            newValue = mMin;
+        else if (mInterval != 1 && newValue % mInterval != 0)
+            newValue = Math.round(((float) newValue) / mInterval) * mInterval;
+
+        // change rejected, revert to the previous value
+        if (!callChangeListener(newValue)) {
+            seekBar.setProgress(mCurrentValue - mMin);
+            return;
+        }
+        // change accepted, store it
+        mCurrentValue = newValue;
+        if (mStatusText != null) {
+            if (newValue == mDefaultValue) {
+                mStatusText.setText(mDefaultText);
+            } else {
+                mStatusText.setText(newValue + mUnits);
+            }
+        }
+        persistInt(newValue);
+    }
+
+    public void refresh(int newValue) {
+        // this will trigger onProgressChanged and refresh everything
+        mSeekBar.setProgress(newValue - mMin);
+    }
+
+    @Override
+    public void onStartTrackingTouch(SeekBar seekBar) {
+    }
+
+    @Override
+    public void onStopTrackingTouch(SeekBar seekBar) {
+        notifyChanged();
+    }
+
+    @Override
+    protected Object onGetDefaultValue(TypedArray ta, int index) {
+        return ta.getInt(index, DEFAULT_VALUE);
+    }
+
+    @Override
+    protected void onSetInitialValue(boolean restoreValue, Object defaultValue) {
+        if (restoreValue) {
+            mCurrentValue = getPersistedInt(mDefaultValue);
+        } else {
+            int temp = 0;
+            try {
+                temp = (Integer) defaultValue;
+            } catch (Exception ex) {
+                Log.e(TAG, "Invalid default value: " + defaultValue.toString());
+            }
+            persistInt(temp);
+            mCurrentValue = temp;
+        }
+    }
+
+    public void setDefaultValue(int value) {
+        mDefaultValue = value;
+        if (mDefaultValue > mMax) {
+            mDefaultValue = mMax;
+        }
+        if (mCurrentValue == mDefaultValue && mStatusText != null) {
+            mStatusText.setText(mDefaultText);
+        }
+    }
+
+    @Override
+    public void setEnabled(boolean enabled) {
+        if (mSeekBar != null && mStatusText != null && mTitle != null) {
+            mSeekBar.setEnabled(enabled);
+            mStatusText.setEnabled(enabled);
+            mTitle.setEnabled(enabled);
+        }
+        super.setEnabled(enabled);
+    }
+}
diff --git a/XiaomiParts/src/org/lineageos/settings/device/preferences/SecureSettingCustomSeekBarPreference.java b/XiaomiParts/src/org/lineageos/settings/device/preferences/SecureSettingCustomSeekBarPreference.java
new file mode 100644
index 0000000..a77871b
--- /dev/null
+++ b/XiaomiParts/src/org/lineageos/settings/device/preferences/SecureSettingCustomSeekBarPreference.java
@@ -0,0 +1,27 @@
+package org.lineageos.settings.device.preferences;
+
+import android.content.Context;
+import android.util.AttributeSet;
+
+public class SecureSettingCustomSeekBarPreference extends CustomSeekBarPreference {
+
+    public SecureSettingCustomSeekBarPreference(Context context, AttributeSet attrs, int defStyleAttr, int defStyleRes) {
+        super(context, attrs, defStyleAttr, defStyleRes);
+        setPreferenceDataStore(new SecureSettingsStore(context.getContentResolver()));
+    }
+
+    public SecureSettingCustomSeekBarPreference(Context context, AttributeSet attrs, int defStyleAttr) {
+        super(context, attrs, defStyleAttr);
+        setPreferenceDataStore(new SecureSettingsStore(context.getContentResolver()));
+    }
+
+    public SecureSettingCustomSeekBarPreference(Context context, AttributeSet attrs) {
+        super(context, attrs);
+        setPreferenceDataStore(new SecureSettingsStore(context.getContentResolver()));
+    }
+
+    public SecureSettingCustomSeekBarPreference(Context context) {
+        super(context);
+        setPreferenceDataStore(new SecureSettingsStore(context.getContentResolver()));
+    }
+}
diff --git a/XiaomiParts/src/org/lineageos/settings/device/preferences/SecureSettingListPreference.java b/XiaomiParts/src/org/lineageos/settings/device/preferences/SecureSettingListPreference.java
new file mode 100644
index 0000000..0b56af7
--- /dev/null
+++ b/XiaomiParts/src/org/lineageos/settings/device/preferences/SecureSettingListPreference.java
@@ -0,0 +1,69 @@
+/*
+ * Copyright (C) 2017 AICP
+ *
+ * Licensed under the Apache License, Version 2.0 (the "License");
+ * you may not use this file except in compliance with the License.
+ * You may obtain a copy of the License at
+ *
+ * http://www.apache.org/licenses/LICENSE-2.0
+ *
+ * Unless required by applicable law or agreed to in writing, software
+ * distributed under the License is distributed on an "AS IS" BASIS,
+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+ * See the License for the specific language governing permissions and
+ * limitations under the License.
+ */
+
+package org.lineageos.settings.device.preferences;
+
+import android.content.Context;
+import android.support.v7.preference.ListPreference;
+import android.text.TextUtils;
+import android.util.AttributeSet;
+
+public class SecureSettingListPreference extends ListPreference {
+    private boolean mAutoSummary = false;
+
+    public SecureSettingListPreference(Context context, AttributeSet attrs, int defStyle) {
+        super(context, attrs, defStyle);
+        setPreferenceDataStore(new SecureSettingsStore(context.getContentResolver()));
+    }
+
+    public SecureSettingListPreference(Context context, AttributeSet attrs) {
+        super(context, attrs);
+        setPreferenceDataStore(new SecureSettingsStore(context.getContentResolver()));
+    }
+
+    public SecureSettingListPreference(Context context) {
+        super(context);
+        setPreferenceDataStore(new SecureSettingsStore(context.getContentResolver()));
+    }
+
+    @Override
+    public void setValue(String value) {
+        super.setValue(value);
+        if (mAutoSummary || TextUtils.isEmpty(getSummary())) {
+            setSummary(getEntry(), true);
+        }
+    }
+
+    @Override
+    public void setSummary(CharSequence summary) {
+        setSummary(summary, false);
+    }
+
+    private void setSummary(CharSequence summary, boolean autoSummary) {
+        mAutoSummary = autoSummary;
+        super.setSummary(summary);
+    }
+
+    @Override
+    protected void onSetInitialValue(boolean restoreValue, Object defaultValue) {
+        // This is what default ListPreference implementation is doing without respecting
+        // real default value:
+        //setValue(restoreValue ? getPersistedString(mValue) : (String) defaultValue);
+        // Instead, we better do
+        setValue(restoreValue ? getPersistedString((String) defaultValue) : (String) defaultValue);
+    }
+
+}
diff --git a/XiaomiParts/src/org/lineageos/settings/device/preferences/SecureSettingSwitchPreference.java b/XiaomiParts/src/org/lineageos/settings/device/preferences/SecureSettingSwitchPreference.java
new file mode 100644
index 0000000..c2cbfe9
--- /dev/null
+++ b/XiaomiParts/src/org/lineageos/settings/device/preferences/SecureSettingSwitchPreference.java
@@ -0,0 +1,67 @@
+/*
+ * Copyright (C) 2014 The CyanogenMod project
+ *
+ * Licensed under the Apache License, Version 2.0 (the "License");
+ * you may not use this file except in compliance with the License.
+ * You may obtain a copy of the License at
+ *
+ *      http://www.apache.org/licenses/LICENSE-2.0
+ *
+ * Unless required by applicable law or agreed to in writing, software
+ * distributed under the License is distributed on an "AS IS" BASIS,
+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+ * See the License for the specific language governing permissions and
+ * limitations under the License.
+ */
+
+package org.lineageos.settings.device.preferences;
+
+import android.content.Context;
+import android.provider.Settings;
+import android.support.v14.preference.SwitchPreference;
+import android.util.AttributeSet;
+
+public class SecureSettingSwitchPreference extends SwitchPreference {
+    public SecureSettingSwitchPreference(Context context, AttributeSet attrs, int defStyle) {
+        super(context, attrs, defStyle);
+        setPreferenceDataStore(new SecureSettingsStore(context.getContentResolver()));
+    }
+
+    public SecureSettingSwitchPreference(Context context, AttributeSet attrs) {
+        super(context, attrs);
+        setPreferenceDataStore(new SecureSettingsStore(context.getContentResolver()));
+    }
+
+    public SecureSettingSwitchPreference(Context context) {
+        super(context);
+        setPreferenceDataStore(new SecureSettingsStore(context.getContentResolver()));
+    }
+
+    @Override
+    protected boolean persistBoolean(boolean value) {
+        if (shouldPersist()) {
+            if (value == getPersistedBoolean(!value)) {
+                // It's already there, so the same as persisting
+                return true;
+            }
+            Settings.Secure.putInt(getContext().getContentResolver(), getKey(), value ? 1 : 0);
+            return true;
+        }
+        return false;
+    }
+
+    @Override
+    protected boolean getPersistedBoolean(boolean defaultReturnValue) {
+        if (!shouldPersist()) {
+            return defaultReturnValue;
+        }
+        return Settings.Secure.getInt(getContext().getContentResolver(),
+                getKey(), defaultReturnValue ? 1 : 0) != 0;
+    }
+
+    @Override
+    protected void onSetInitialValue(boolean restoreValue, Object defaultValue) {
+        setChecked(Settings.Secure.getString(getContext().getContentResolver(), getKey()) != null ? getPersistedBoolean(isChecked())
+                : (Boolean) defaultValue);
+    }
+}
diff --git a/XiaomiParts/src/org/lineageos/settings/device/preferences/SecureSettingsStore.java b/XiaomiParts/src/org/lineageos/settings/device/preferences/SecureSettingsStore.java
new file mode 100644
index 0000000..5ad448a
--- /dev/null
+++ b/XiaomiParts/src/org/lineageos/settings/device/preferences/SecureSettingsStore.java
@@ -0,0 +1,74 @@
+/*
+ * Copyright (C) 2017 AICP
+ * Copyright (C) 2018 CarbonROM
+ *
+ * Licensed under the Apache License, Version 2.0 (the "License");
+ * you may not use this file except in compliance with the License.
+ * You may obtain a copy of the License at
+ *
+ * http://www.apache.org/licenses/LICENSE-2.0
+ *
+ * Unless required by applicable law or agreed to in writing, software
+ * distributed under the License is distributed on an "AS IS" BASIS,
+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+ * See the License for the specific language governing permissions and
+ * limitations under the License.
+ */
+
+package org.lineageos.settings.device.preferences;
+
+import android.content.ContentResolver;
+import android.preference.PreferenceDataStore;
+import android.provider.Settings;
+
+public class SecureSettingsStore extends android.support.v7.preference.PreferenceDataStore
+        implements PreferenceDataStore {
+
+    private final ContentResolver mContentResolver;
+
+    public SecureSettingsStore(ContentResolver contentResolver) {
+        mContentResolver = contentResolver;
+    }
+
+    public boolean getBoolean(String key, boolean defValue) {
+        return getInt(key, defValue ? 1 : 0) != 0;
+    }
+
+    public float getFloat(String key, float defValue) {
+        return Settings.Secure.getFloat(mContentResolver, key, defValue);
+    }
+
+    public int getInt(String key, int defValue) {
+        return Settings.Secure.getInt(mContentResolver, key, defValue);
+    }
+
+    public long getLong(String key, long defValue) {
+        return Settings.Secure.getLong(mContentResolver, key, defValue);
+    }
+
+    public String getString(String key, String defValue) {
+        String result = Settings.Secure.getString(mContentResolver, key);
+        return result == null ? defValue : result;
+    }
+
+    public void putBoolean(String key, boolean value) {
+        putInt(key, value ? 1 : 0);
+    }
+
+    public void putFloat(String key, float value) {
+        Settings.Secure.putFloat(mContentResolver, key, value);
+    }
+
+    public void putInt(String key, int value) {
+        Settings.Secure.putInt(mContentResolver, key, value);
+    }
+
+    public void putLong(String key, long value) {
+        Settings.Secure.putLong(mContentResolver, key, value);
+    }
+
+    public void putString(String key, String value) {
+        Settings.Secure.putString(mContentResolver, key, value);
+    }
+
+}
diff --git a/XiaomiParts/src/org/lineageos/settings/device/preferences/VibrationSeekBarPreference.java b/XiaomiParts/src/org/lineageos/settings/device/preferences/VibrationSeekBarPreference.java
new file mode 100644
index 0000000..94c85a1
--- /dev/null
+++ b/XiaomiParts/src/org/lineageos/settings/device/preferences/VibrationSeekBarPreference.java
@@ -0,0 +1,41 @@
+package org.lineageos.settings.device.preferences;
+
+import android.content.Context;
+import android.os.VibrationEffect;
+import android.os.Vibrator;
+import android.util.AttributeSet;
+import android.widget.SeekBar;
+
+public class VibrationSeekBarPreference extends SecureSettingCustomSeekBarPreference {
+
+    private final Vibrator mVibrator;
+
+    public VibrationSeekBarPreference(Context context, AttributeSet attrs, int defStyleAttr, int defStyleRes) {
+        super(context, attrs, defStyleAttr, defStyleRes);
+        mVibrator = (Vibrator) context.getSystemService(Context.VIBRATOR_SERVICE);
+    }
+
+    public VibrationSeekBarPreference(Context context, AttributeSet attrs, int defStyleAttr) {
+        super(context, attrs, defStyleAttr);
+        mVibrator = (Vibrator) context.getSystemService(Context.VIBRATOR_SERVICE);
+    }
+
+    public VibrationSeekBarPreference(Context context, AttributeSet attrs) {
+        super(context, attrs);
+        mVibrator = (Vibrator) context.getSystemService(Context.VIBRATOR_SERVICE);
+    }
+
+    public VibrationSeekBarPreference(Context context) {
+        super(context);
+        mVibrator = (Vibrator) context.getSystemService(Context.VIBRATOR_SERVICE);
+    }
+
+    @Override
+    public void onStopTrackingTouch(SeekBar seekBar) {
+        notifyChanged();
+        if (mVibrator.hasVibrator()) {
+            mVibrator.vibrate(VibrationEffect.createOneShot(15, VibrationEffect.DEFAULT_AMPLITUDE));
+        }
+    }
+
+}
diff --git a/overlay/frameworks/base/core/res/res/values/config.xml b/overlay/frameworks/base/core/res/res/values/config.xml
index f84e8b3..3f466ba 100644
--- a/overlay/frameworks/base/core/res/res/values/config.xml
+++ b/overlay/frameworks/base/core/res/res/values/config.xml
@@ -567,4 +567,14 @@
 
     <!-- Enable system navigation keys. -->
     <bool name="config_supportSystemNavigationKeys">true</bool>
+
+    <!-- Paths to the libraries that contain device specific key handlers -->
+    <string-array name="config_deviceKeyHandlerLibs" translatable="false">
+        <item>/system/priv-app/XiaomiParts/XiaomiParts.apk</item>
+    </string-array>
+
+    <!-- Names of the key handler classes -->
+    <string-array name="config_deviceKeyHandlerClasses" translatable="false">
+        <item>org.lineageos.settings.device.KeyHandler</item>
+    </string-array>
 </resources>
diff --git a/parts/Android.mk b/parts/Android.mk
deleted file mode 100644
index 4792b91..0000000
--- a/parts/Android.mk
+++ /dev/null
@@ -1,31 +0,0 @@
-LOCAL_PATH:= $(call my-dir)
-include $(CLEAR_VARS)
-
-LOCAL_MODULE_TAGS := optional
-
-LOCAL_SRC_FILES := $(call all-java-files-under, src)
-
-LOCAL_PACKAGE_NAME := XiaomiParts
-LOCAL_CERTIFICATE := platform
-LOCAL_PRIVILEGED_MODULE := true
-LOCAL_PRIVATE_PLATFORM_APIS := true
-
-LOCAL_USE_AAPT2 := true
-
-LOCAL_STATIC_ANDROID_LIBRARIES := \
-    android-support-v4 \
-    android-support-v13 \
-    android-support-v7-recyclerview \
-    android-support-v7-preference \
-    android-support-v7-appcompat \
-    android-support-v14-preference \
-
-LOCAL_RESOURCE_DIR := \
-    $(LOCAL_PATH)/res \
-    $(TOP)/packages/resources/devicesettings/res
-
-LOCAL_PROGUARD_FLAG_FILES := proguard.flags
-
-include $(BUILD_PACKAGE)
-
-include $(call all-makefiles-under,$(LOCAL_PATH))
diff --git a/parts/AndroidManifest.xml b/parts/AndroidManifest.xml
deleted file mode 100644
index f7325e8..0000000
--- a/parts/AndroidManifest.xml
+++ /dev/null
@@ -1,72 +0,0 @@
-<?xml version="1.0" encoding="utf-8"?>
-<!--
-     Copyright (C) 2015-2016 The CyanogenMod Project
-                   2017-2018 The LineageOS Project
-
-     Licensed under the Apache License, Version 2.0 (the "License");
-     you may not use this file except in compliance with the License.
-     You may obtain a copy of the License at
-
-          http://www.apache.org/licenses/LICENSE-2.0
-
-     Unless required by applicable law or agreed to in writing, software
-     distributed under the License is distributed on an "AS IS" BASIS,
-     WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
-     See the License for the specific language governing permissions and
-     limitations under the License.
--->
-<manifest xmlns:android="http://schemas.android.com/apk/res/android"
-    package="org.lineageos.settings"
-    android:versionCode="1"
-    android:versionName="1.0"
-    android:sharedUserId="android.uid.system">
-
-    <uses-permission android:name="android.permission.RECEIVE_BOOT_COMPLETED"/>
-    <uses-permission android:name="android.permission.WAKE_LOCK" />
-
-    <protected-broadcast android:name="com.android.systemui.doze.pulse" />
-
-    <uses-sdk
-        android:minSdkVersion="24"
-        android:targetSdkVersion="24"/>
-
-    <application
-        android:label="@string/device_settings_app_name"
-        android:persistent="true">
-
-        <receiver android:name=".BootCompletedReceiver">
-            <intent-filter android:priority="1000">
-                <action android:name="android.intent.action.BOOT_COMPLETED" />
-                <category android:name="android.intent.category.DEFAULT" />
-            </intent-filter>
-        </receiver>
-
-        <activity
-            android:name=".dirac.DiracActivity"
-            android:label="@string/dirac_title"
-            android:theme="@style/Theme.Main">
-            <intent-filter>
-                <action android:name="com.android.settings.action.IA_SETTINGS" />
-            </intent-filter>
-            <meta-data android:name="com.android.settings.category"
-                       android:value="com.android.settings.category.ia.sound" />
-            <meta-data android:name="com.android.settings.summary"
-                       android:resource="@string/dirac_summary" />
-        </activity>
-
-        <service android:name=".doze.DozeService"
-                 android:permission="XiaomiDozeService">
-        </service>
-
-        <activity
-            android:name=".doze.DozeSettingsActivity"
-            android:label="@string/ambient_display_title"
-            android:theme="@style/Theme.Main">
-            <intent-filter>
-                <action android:name="org.lineageos.settings.device.DOZE_SETTINGS" />
-                <category android:name="android.intent.category.DEFAULT" />
-            </intent-filter>
-        </activity>
-
-    </application>
-</manifest>
diff --git a/parts/proguard.flags b/parts/proguard.flags
deleted file mode 100644
index 8592e6a..0000000
--- a/parts/proguard.flags
+++ /dev/null
@@ -1,13 +0,0 @@
--keepclasseswithmembers class * {
-    public <init>(android.content.Context, android.util.AttributeSet);
-}
-
--keep class ** extends android.support.v14.preference.PreferenceFragment
-
--keep class org.lineageos.settings.dirac.* {
-  *;
-}
-
--keep class org.lineageos.settings.doze.* {
-  *;
-}
diff --git a/parts/res/color/switch_bar_bg.xml b/parts/res/color/switch_bar_bg.xml
deleted file mode 100644
index a7465ec..0000000
--- a/parts/res/color/switch_bar_bg.xml
+++ /dev/null
@@ -1,20 +0,0 @@
-<?xml version="1.0" encoding="utf-8"?>
-<!-- Copyright (C) 2019 The LineageOS Project
-
-     Licensed under the Apache License, Version 2.0 (the "License");
-     you may not use this file except in compliance with the License.
-     You may obtain a copy of the License at
-
-          http://www.apache.org/licenses/LICENSE-2.0
-
-     Unless required by applicable law or agreed to in writing, software
-     distributed under the License is distributed on an "AS IS" BASIS,
-     WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
-     See the License for the specific language governing permissions and
-     limitations under the License.
--->
-
-<selector xmlns:android="http://schemas.android.com/apk/res/android">
-    <item android:color="#333333" android:state_activated="false" />
-    <item android:color="@*android:color/custom_accent_color" android:state_activated="true" />
-</selector>
diff --git a/parts/res/color/switchbar_switch_thumb_tint.xml b/parts/res/color/switchbar_switch_thumb_tint.xml
deleted file mode 100644
index d4bf9b3..0000000
--- a/parts/res/color/switchbar_switch_thumb_tint.xml
+++ /dev/null
@@ -1,20 +0,0 @@
-<?xml version="1.0" encoding="utf-8"?>
-<!--
-  Copyright (C) 2018 The Android Open Source Project
-
-  Licensed under the Apache License, Version 2.0 (the "License");
-  you may not use this file except in compliance with the License.
-  You may obtain a copy of the License at
-
-       http://www.apache.org/licenses/LICENSE-2.0
-
-  Unless required by applicable law or agreed to in writing, software
-  distributed under the License is distributed on an "AS IS" BASIS,
-  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
-  See the License for the specific language governing permissions and
-  limitations under the License.
-  -->
-
-<selector xmlns:android="http://schemas.android.com/apk/res/android">
-    <item android:color="#FFFFFF" />
-</selector>
diff --git a/parts/res/color/switchbar_switch_track_tint.xml b/parts/res/color/switchbar_switch_track_tint.xml
deleted file mode 100644
index ae45c7a..0000000
--- a/parts/res/color/switchbar_switch_track_tint.xml
+++ /dev/null
@@ -1,21 +0,0 @@
-<?xml version="1.0" encoding="utf-8"?>
-<!--
-  Copyright (C) 2018 The Android Open Source Project
-
-  Licensed under the Apache License, Version 2.0 (the "License");
-  you may not use this file except in compliance with the License.
-  You may obtain a copy of the License at
-
-       http://www.apache.org/licenses/LICENSE-2.0
-
-  Unless required by applicable law or agreed to in writing, software
-  distributed under the License is distributed on an "AS IS" BASIS,
-  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
-  See the License for the specific language governing permissions and
-  limitations under the License.
-  -->
-
-<selector
-    xmlns:android="http://schemas.android.com/apk/res/android">
-    <item android:color="#BFFFFFFF" />
-</selector>
diff --git a/parts/res/drawable/ic_display.xml b/parts/res/drawable/ic_display.xml
deleted file mode 100644
index e2df7b3..0000000
--- a/parts/res/drawable/ic_display.xml
+++ /dev/null
@@ -1,9 +0,0 @@
-<!-- drawable/phone_text.xml -->
-<vector xmlns:android="http://schemas.android.com/apk/res/android"
-    android:height="24dp"
-    android:width="24dp"
-    android:viewportWidth="24"
-    android:viewportHeight="24"
-    android:tint="?android:attr/colorControlNormal">
-    <path android:fillColor="#000" android:pathData="M17,19V5H7V19H17M17,1A2,2 0 0,1 19,3V21A2,2 0 0,1 17,23H7C5.89,23 5,22.1 5,21V3C5,1.89 5.89,1 7,1H17M9,7H15V9H9V7M9,11H13V13H9V11Z" />
-</vector>
diff --git a/parts/res/drawable/ic_eye.xml b/parts/res/drawable/ic_eye.xml
deleted file mode 100644
index 45c1c79..0000000
--- a/parts/res/drawable/ic_eye.xml
+++ /dev/null
@@ -1,9 +0,0 @@
-<!-- drawable/cellphone_text.xml -->
-<vector xmlns:android="http://schemas.android.com/apk/res/android"
-    android:height="24dp"
-    android:width="24dp"
-    android:viewportWidth="24"
-    android:viewportHeight="24"
-    android:tint="?android:attr/colorControlNormal">
-    <path android:fillColor="#000" android:pathData="M17,19V5H7V19H17M17,1A2,2 0 0,1 19,3V21A2,2 0 0,1 17,23H7C5.89,23 5,22.1 5,21V3C5,1.89 5.89,1 7,1H17M9,7H15V9H9V7M9,11H13V13H9V11Z" />
-</vector>
diff --git a/parts/res/drawable/ic_hand.xml b/parts/res/drawable/ic_hand.xml
deleted file mode 100644
index 79aba0f..0000000
--- a/parts/res/drawable/ic_hand.xml
+++ /dev/null
@@ -1,9 +0,0 @@
-<!-- drawable/hand -->
-<vector xmlns:android="http://schemas.android.com/apk/res/android"
-    android:height="24dp"
-    android:width="24dp"
-    android:viewportWidth="24"
-    android:viewportHeight="24"
-    android:tint="?android:attr/colorControlNormal">
-    <path android:fillColor="#000" android:pathData="M6.58,19H14.58V22H6.58V19M19.74,11.6C19.55,11.4 19.29,11.28 19,11.28L18.78,11.31L15.58,13V11.83L16.09,2.9C16.12,2.35 15.7,1.87 15.15,1.84C14.6,1.81 14.12,2.23 14.09,2.78L13.82,7.47H13.58L12.54,7.58V2A1,1 0 0,0 11.54,1C11,1 10.54,1.45 10.54,2V8.41L9.72,8.78L9.03,3.32C8.96,2.77 8.46,2.38 7.91,2.45C7.36,2.5 6.97,3 7.04,3.57L7.81,9.63L7.43,9.8C7.3,9.85 7.18,9.93 7.07,10L5.97,6.11C5.81,5.54 5.25,5.2 4.71,5.34C4.18,5.5 3.88,6.08 4.04,6.65L6.61,15.77C6.61,15.8 6.63,15.84 6.64,15.87L6.67,16H6.68C6.9,16.57 7.47,17 8.08,17H14.58C14.97,17 15.32,16.84 15.58,16.57L20.5,12.37L19.74,11.6Z" />
-</vector>
diff --git a/parts/res/drawable/ic_headphone.xml b/parts/res/drawable/ic_headphone.xml
deleted file mode 100644
index 54417dd..0000000
--- a/parts/res/drawable/ic_headphone.xml
+++ /dev/null
@@ -1,9 +0,0 @@
-<!-- drawable/headphone-settings.xml -->
-<vector xmlns:android="http://schemas.android.com/apk/res/android"
-    android:height="24dp"
-    android:width="24dp"
-    android:viewportWidth="24"
-    android:viewportHeight="24"
-    android:tint="?android:attr/colorControlNormal">
-    <path android:fillColor="#000" android:pathData="M12,1A9,9 0 0,1 21,10V17A3,3 0 0,1 18,20H15V12H19V10A7,7 0 0,0 12,3A7,7 0 0,0 5,10V12H9V20H6A3,3 0 0,1 3,17V10A9,9 0 0,1 12,1M15,24V22H17V24H15M11,24V22H13V24H11M7,24V22H9V24H7Z" />
-</vector>
diff --git a/parts/res/drawable/ic_pickup.xml b/parts/res/drawable/ic_pickup.xml
deleted file mode 100644
index db6138b..0000000
--- a/parts/res/drawable/ic_pickup.xml
+++ /dev/null
@@ -1,9 +0,0 @@
-<!-- drawable/arrow-decision_auto -->
-<vector xmlns:android="http://schemas.android.com/apk/res/android"
-    android:height="24dp"
-    android:width="24dp"
-    android:viewportWidth="24"
-    android:viewportHeight="24"
-    android:tint="?android:attr/colorControlNormal">
-    <path android:fillColor="#000" android:pathData="M12,5H9L13,1L17,5H14V9.43C13.25,9.89 12.58,10.46 12,11.12V5M10.4,15H8.5L7.8,13H4.6L3.9,15H2L5.2,6H7.2L10.4,15M7.35,11.65L6.2,8L5.05,11.65H7.35M23,11L19,7V10C15.39,9.85 12.31,12.57 12,16.17C10.44,16.72 9.62,18.44 10.17,20C10.72,21.56 12.44,22.38 14,21.83C15.56,21.27 16.38,19.56 15.83,18C15.53,17.14 14.85,16.47 14,16.17C14.47,12.17 18.47,11.97 18.95,11.97V14.97L23,11Z" />
-</vector>
diff --git a/parts/res/drawable/ic_pocket.xml b/parts/res/drawable/ic_pocket.xml
deleted file mode 100644
index b8fad67..0000000
--- a/parts/res/drawable/ic_pocket.xml
+++ /dev/null
@@ -1,9 +0,0 @@
-<!-- drawable/pocket.xml -->
-<vector xmlns:android="http://schemas.android.com/apk/res/android"
-    android:height="24dp"
-    android:width="24dp"
-    android:viewportWidth="24"
-    android:viewportHeight="24"
-    android:tint="?android:attr/colorControlNormal">
-    <path android:fillColor="#000" android:pathData="M21.9,4.26C21.64,3.55 20.96,3.07 20.2,3.07H20.19L18.46,3.07H3.81C3.07,3.07 2.39,3.54 2.12,4.24C2.04,4.45 2,4.66 2,4.88V10.92L2.07,12.12C2.36,14.85 3.78,17.23 5.97,18.9C6,18.93 6.05,18.96 6.09,19H6.11C7.29,19.86 8.6,20.44 10,20.73C10.68,20.86 11.35,20.93 12,20.93C12.63,20.93 13.25,20.87 13.85,20.76C13.93,20.75 14,20.73 14.07,20.72C14.09,20.71 14.11,20.7 14.14,20.69C15.5,20.4 16.76,19.83 17.89,19H17.91C17.95,18.96 18,18.93 18.03,18.9C20.22,17.23 21.64,14.85 21.93,12.12L22,10.92V4.88C22,4.68 21.97,4.47 21.9,4.26M17.67,10.55L12.96,15.06C12.7,15.32 12.35,15.44 12,15.44C11.67,15.44 11.33,15.32 11.06,15.06L6.36,10.55C5.81,10.03 5.79,9.16 6.32,8.61C6.84,8.06 7.71,8.05 8.26,8.57L12,12.17L15.77,8.57C16.31,8.05 17.18,8.07 17.71,8.61C18.23,9.16 18.21,10.03 17.67,10.55Z" />
-</vector>
diff --git a/parts/res/drawable/ic_preset.xml b/parts/res/drawable/ic_preset.xml
deleted file mode 100644
index 13b687e..0000000
--- a/parts/res/drawable/ic_preset.xml
+++ /dev/null
@@ -1,9 +0,0 @@
-<!-- drawable/equalizer.xml -->
-<vector xmlns:android="http://schemas.android.com/apk/res/android"
-    android:height="24dp"
-    android:width="24dp"
-    android:viewportWidth="24"
-    android:viewportHeight="24"
-    android:tint="?android:attr/colorControlNormal">
-    <path android:fillColor="#000" android:pathData="M10,20H14V4H10V20M4,20H8V12H4V20M16,9V20H20V9H16Z" />
-</vector>
diff --git a/parts/res/layout/dirac.xml b/parts/res/layout/dirac.xml
deleted file mode 100644
index a7ce3e0..0000000
--- a/parts/res/layout/dirac.xml
+++ /dev/null
@@ -1,27 +0,0 @@
-<?xml version="1.0" encoding="utf-8"?>
-<!--
-/*
-** Copyright 2014, The Android Open Source Project
-**
-** Licensed under the Apache License, Version 2.0 (the "License");
-** you may not use this file except in compliance with the License.
-** You may obtain a copy of the License at
-**
-**     http://www.apache.org/licenses/LICENSE-2.0
-**
-** Unless required by applicable law or agreed to in writing, software
-** distributed under the License is distributed on an "AS IS" BASIS,
-** WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
-** See the License for the specific language governing permissions and
-** limitations under the License.
-*/
--->
-
-<LinearLayout xmlns:android="http://schemas.android.com/apk/res/android"
-              android:orientation="vertical"
-              android:layout_height="match_parent"
-              android:layout_width="match_parent">
-
-    <include layout="@layout/switch_bar" />
-
-</LinearLayout>
diff --git a/parts/res/layout/doze.xml b/parts/res/layout/doze.xml
deleted file mode 100644
index 941cdf6..0000000
--- a/parts/res/layout/doze.xml
+++ /dev/null
@@ -1,28 +0,0 @@
-<?xml version="1.0" encoding="utf-8"?>
-<!--
-/*
-** Copyright 2014, The Android Open Source Project
-**
-** Licensed under the Apache License, Version 2.0 (the "License");
-** you may not use this file except in compliance with the License.
-** You may obtain a copy of the License at
-**
-**     http://www.apache.org/licenses/LICENSE-2.0
-**
-** Unless required by applicable law or agreed to in writing, software
-** distributed under the License is distributed on an "AS IS" BASIS,
-** WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
-** See the License for the specific language governing permissions and
-** limitations under the License.
-*/
--->
-
-<LinearLayout xmlns:android="http://schemas.android.com/apk/res/android"
-              android:orientation="vertical"
-              android:layout_height="match_parent"
-              android:layout_width="match_parent">
-
-    <include layout="@layout/switch_bar" />
-
-</LinearLayout>
-
diff --git a/parts/res/layout/switch_bar.xml b/parts/res/layout/switch_bar.xml
deleted file mode 100644
index ab73954..0000000
--- a/parts/res/layout/switch_bar.xml
+++ /dev/null
@@ -1,48 +0,0 @@
-<?xml version="1.0" encoding="utf-8"?>
-<!-- Copyright (C) 2016 The Android Open Source Project
-
-     Licensed under the Apache License, Version 2.0 (the "License");
-     you may not use this file except in compliance with the License.
-     You may obtain a copy of the License at
-
-          http://www.apache.org/licenses/LICENSE-2.0
-
-     Unless required by applicable law or agreed to in writing, software
-     distributed under the License is distributed on an "AS IS" BASIS,
-     WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
-     See the License for the specific language governing permissions and
-     limitations under the License.
--->
-
-<LinearLayout xmlns:android="http://schemas.android.com/apk/res/android"
-    android:id="@+id/switch_bar"
-    android:layout_width="match_parent"
-    android:layout_height="?android:attr/actionBarSize"
-    android:background="@drawable/switchbar_background"
-    android:paddingStart="16dp"
-    android:paddingEnd="16dp"
-    android:clickable="true"
-    android:gravity="center">
-
-    <TextView android:id="@+id/switch_text"
-        android:layout_height="wrap_content"
-        android:layout_width="0dp"
-        android:layout_weight="1"
-        android:layout_gravity="center_vertical"
-        android:paddingStart="56dp"
-        android:maxLines="2"
-        android:ellipsize="end"
-        android:textAppearance="@*android:style/TextAppearanceTitle"
-        android:textColor="@android:color/white"
-        android:textSize="18sp"
-        android:textAlignment="viewStart" />
-
-    <Switch
-        android:id="@android:id/switch_widget"
-        android:layout_width="wrap_content"
-        android:layout_height="wrap_content"
-        android:layout_gravity="center_vertical"
-        android:background="@null"
-        android:theme="@style/Theme.Main.SwitchBar.Switch" />
-
-</LinearLayout>
diff --git a/parts/res/values-de-rDE/strings.xml b/parts/res/values-de-rDE/strings.xml
deleted file mode 100644
index 269b75c..0000000
--- a/parts/res/values-de-rDE/strings.xml
+++ /dev/null
@@ -1,59 +0,0 @@
-<?xml version="1.0" encoding="utf-8"?>
-<!--Generated by crowdin.com-->
-<!--
-     Copyright (C) 2018 The PixelExperience Project
-
-     Licensed under the Apache License, Version 2.0 (the "License");
-     you may not use this file except in compliance with the License.
-     You may obtain a copy of the License at
-
-          http://www.apache.org/licenses/LICENSE-2.0
-
-     Unless required by applicable law or agreed to in writing, software
-     distributed under the License is distributed on an "AS IS" BASIS,
-     WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
-     See the License for the specific language governing permissions and
-     limitations under the License.
--->
-<resources>
-    <!-- Dirac settings -->
-    <string name="dirac_title">Mi Klangverbesserung</string>
-    <string name="dirac_summary">Audioqualität optimieren</string>
-    <string name="dirac_headset_title">Kopfhörertyp auswählen</string>
-    <string name="dirac_preset_title">Vorgabe auswählen</string>
-    <!-- Dirac settings: Headset types -->
-    <string name="dirac_headset_default">Standard</string>
-    <string name="dirac_headset_earbuds">Mi Ohrhörer</string>
-    <string name="dirac_headset_in_ear_2013">Mi In Ear (2013)</string>
-    <string name="dirac_headset_piston_1">Mi Piston 1</string>
-    <string name="dirac_headset_general">Allgemeine Earbuds</string>
-    <string name="dirac_headset_general_inear">Allgemeine In Ear</string>
-    <string name="dirac_headset_piston_basic">Basis Edition</string>
-    <string name="dirac_headset_piston_2">Mi Piston 2</string>
-    <string name="dirac_headset_piston_standard">Standard Edition</string>
-    <string name="dirac_headset_headphone">Mi Kopfhörer</string>
-    <string name="dirac_headset_piston_youth">Jugend Edition</string>
-    <string name="dirac_headset_piston_color">Farbige Edition</string>
-    <string name="dirac_headset_in_ear">Mi In Ear</string>
-    <string name="dirac_headset_capsule">Mi Capsule</string>
-    <string name="dirac_headset_in_ear_pro">Mi In Ear Pro</string>
-    <string name="dirac_headset_comfort">Mi Komfort</string>
-    <string name="dirac_headset_reduction_noise">Mi-Geräuschunterdrückung (Typ-C)</string>
-    <string name="dirac_headset_cancelling">Mi-Geräuschunterdrückung (3.5 mm)</string>
-    <string name="dirac_headset_half_in_ear">Mi Half In Ear</string>
-    <string name="dirac_headset_in_ear2">Mi In Ear 2</string>
-    <string name="dirac_headset_earphone_basic">Mi Earphones Basic</string>
-    <string name="dirac_headset_earphone">Mi Earphones</string>
-    <!-- Dirac settings: Equalizer presets -->
-    <string name="dirac_preset_default">Standard</string>
-    <string name="dirac_preset_rock">Rock</string>
-    <string name="dirac_preset_jazz">Jazz</string>
-    <string name="dirac_preset_pop">Pop</string>
-    <string name="dirac_preset_classical">Klassisch</string>
-    <string name="dirac_preset_hiphop">Hip Hop</string>
-    <string name="dirac_preset_blues">Blues</string>
-    <string name="dirac_preset_electronic">Elektronik</string>
-    <string name="dirac_preset_country">Country</string>
-    <string name="dirac_preset_dance">Dance</string>
-    <string name="dirac_preset_metal">Metal</string>
-</resources>
diff --git a/parts/res/values-ja-rJP/strings.xml b/parts/res/values-ja-rJP/strings.xml
deleted file mode 100644
index dd01e1c..0000000
--- a/parts/res/values-ja-rJP/strings.xml
+++ /dev/null
@@ -1,59 +0,0 @@
-<?xml version="1.0" encoding="utf-8"?>
-<!--Generated by crowdin.com-->
-<!--
-     Copyright (C) 2018 The PixelExperience Project
-
-     Licensed under the Apache License, Version 2.0 (the "License");
-     you may not use this file except in compliance with the License.
-     You may obtain a copy of the License at
-
-          http://www.apache.org/licenses/LICENSE-2.0
-
-     Unless required by applicable law or agreed to in writing, software
-     distributed under the License is distributed on an "AS IS" BASIS,
-     WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
-     See the License for the specific language governing permissions and
-     limitations under the License.
--->
-<resources>
-    <!-- Dirac settings -->
-    <string name="dirac_title">Mi サウンドエンハンサー</string>
-    <string name="dirac_summary">オーディオ品質を最適化</string>
-    <string name="dirac_headset_title">ヘッドフォンの種類を選択</string>
-    <string name="dirac_preset_title">プリセットを選択してください</string>
-    <!-- Dirac settings: Headset types -->
-    <string name="dirac_headset_default">デフォルト</string>
-    <string name="dirac_headset_earbuds">Mi イヤーバッド</string>
-    <string name="dirac_headset_in_ear_2013">Mi インイヤー (2013)</string>
-    <string name="dirac_headset_piston_1">Mi ピストン 1</string>
-    <string name="dirac_headset_general">一般</string>
-    <string name="dirac_headset_general_inear">一般的なインイヤー型</string>
-    <string name="dirac_headset_piston_basic">ベーシック版</string>
-    <string name="dirac_headset_piston_2">Mi ピストン 2</string>
-    <string name="dirac_headset_piston_standard">スタンダード版</string>
-    <string name="dirac_headset_headphone">Mi ヘッドフォン</string>
-    <string name="dirac_headset_piston_youth">青春版</string>
-    <string name="dirac_headset_piston_color">カラー版</string>
-    <string name="dirac_headset_in_ear">Mi インイヤー</string>
-    <string name="dirac_headset_capsule">Mi カプセル</string>
-    <string name="dirac_headset_in_ear_pro">Mi インイヤー Pro</string>
-    <string name="dirac_headset_comfort">Mi コンフォート</string>
-    <string name="dirac_headset_reduction_noise">Mi ノイズキャンセリング Type-C</string>
-    <string name="dirac_headset_cancelling">Mi ノイズキャンセリング 3.5mm</string>
-    <string name="dirac_headset_half_in_ear">Mi ハーフインイヤー</string>
-    <string name="dirac_headset_in_ear2">Mi インイヤー2</string>
-    <string name="dirac_headset_earphone_basic">Mi イヤフォン ベーシック</string>
-    <string name="dirac_headset_earphone">Mi イヤホン</string>
-    <!-- Dirac settings: Equalizer presets -->
-    <string name="dirac_preset_default">デフォルト</string>
-    <string name="dirac_preset_rock">ロック</string>
-    <string name="dirac_preset_jazz">ジャズ</string>
-    <string name="dirac_preset_pop">ポップ</string>
-    <string name="dirac_preset_classical">クラシック</string>
-    <string name="dirac_preset_hiphop">ヒップホップ</string>
-    <string name="dirac_preset_blues">ブルース</string>
-    <string name="dirac_preset_electronic">エレクトロニック</string>
-    <string name="dirac_preset_country">カントリー</string>
-    <string name="dirac_preset_dance">ダンス</string>
-    <string name="dirac_preset_metal">メタル</string>
-</resources>
diff --git a/parts/res/values-ko-rKR/strings.xml b/parts/res/values-ko-rKR/strings.xml
deleted file mode 100644
index d7e6bd9..0000000
--- a/parts/res/values-ko-rKR/strings.xml
+++ /dev/null
@@ -1,59 +0,0 @@
-<?xml version="1.0" encoding="utf-8"?>
-<!--Generated by crowdin.com-->
-<!--
-     Copyright (C) 2018 The PixelExperience Project
-
-     Licensed under the Apache License, Version 2.0 (the "License");
-     you may not use this file except in compliance with the License.
-     You may obtain a copy of the License at
-
-          http://www.apache.org/licenses/LICENSE-2.0
-
-     Unless required by applicable law or agreed to in writing, software
-     distributed under the License is distributed on an "AS IS" BASIS,
-     WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
-     See the License for the specific language governing permissions and
-     limitations under the License.
--->
-<resources>
-    <!-- Dirac settings -->
-    <string name="dirac_title">Mi 사운드 강화</string>
-    <string name="dirac_summary">음질 최적화</string>
-    <string name="dirac_headset_title">헤드폰 유형 선택</string>
-    <string name="dirac_preset_title">프리셋 선택</string>
-    <!-- Dirac settings: Headset types -->
-    <string name="dirac_headset_default">기본</string>
-    <string name="dirac_headset_earbuds">Mi 이어버드</string>
-    <string name="dirac_headset_in_ear_2013">Mi 인이어 (2013)</string>
-    <string name="dirac_headset_piston_1">Mi 피스톤 1</string>
-    <string name="dirac_headset_general">일반</string>
-    <string name="dirac_headset_general_inear">일반 이어폰</string>
-    <string name="dirac_headset_piston_basic">기본 에디션</string>
-    <string name="dirac_headset_piston_2">Mi 피스톤 2</string>
-    <string name="dirac_headset_piston_standard">표준 에디션</string>
-    <string name="dirac_headset_headphone">Mi 헤드폰</string>
-    <string name="dirac_headset_piston_youth">청소년 에디션</string>
-    <string name="dirac_headset_piston_color">컬러 에디션</string>
-    <string name="dirac_headset_in_ear">Mi 이어폰</string>
-    <string name="dirac_headset_capsule">Mi 캡슐</string>
-    <string name="dirac_headset_in_ear_pro">Mi 인이어 프로</string>
-    <string name="dirac_headset_comfort">Mi Comfort</string>
-    <string name="dirac_headset_reduction_noise">Mi 노이즈 캔슬링 Type-C</string>
-    <string name="dirac_headset_cancelling">Mi 노이즈 캔슬링 3.5mm</string>
-    <string name="dirac_headset_half_in_ear">Mi 하프 인이어</string>
-    <string name="dirac_headset_in_ear2">Mi 인이어 2</string>
-    <string name="dirac_headset_earphone_basic">Mi 이어폰 베이직</string>
-    <string name="dirac_headset_earphone">Mi 이어폰</string>
-    <!-- Dirac settings: Equalizer presets -->
-    <string name="dirac_preset_default">기본</string>
-    <string name="dirac_preset_rock">락</string>
-    <string name="dirac_preset_jazz">재즈</string>
-    <string name="dirac_preset_pop">팝</string>
-    <string name="dirac_preset_classical">클래식</string>
-    <string name="dirac_preset_hiphop">힙합</string>
-    <string name="dirac_preset_blues">블루스</string>
-    <string name="dirac_preset_electronic">일렉트로닉</string>
-    <string name="dirac_preset_country">컨트리</string>
-    <string name="dirac_preset_dance">댄스</string>
-    <string name="dirac_preset_metal">메탈</string>
-</resources>
diff --git a/parts/res/values-ru-rRU/strings.xml b/parts/res/values-ru-rRU/strings.xml
deleted file mode 100644
index 741c208..0000000
--- a/parts/res/values-ru-rRU/strings.xml
+++ /dev/null
@@ -1,59 +0,0 @@
-<?xml version="1.0" encoding="utf-8"?>
-<!--Generated by crowdin.com-->
-<!--
-     Copyright (C) 2018 The PixelExperience Project
-
-     Licensed under the Apache License, Version 2.0 (the "License");
-     you may not use this file except in compliance with the License.
-     You may obtain a copy of the License at
-
-          http://www.apache.org/licenses/LICENSE-2.0
-
-     Unless required by applicable law or agreed to in writing, software
-     distributed under the License is distributed on an "AS IS" BASIS,
-     WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
-     See the License for the specific language governing permissions and
-     limitations under the License.
--->
-<resources>
-    <!-- Dirac settings -->
-    <string name="dirac_title">Улучшение звука Mi</string>
-    <string name="dirac_summary">Улучшить качество звука</string>
-    <string name="dirac_headset_title">Тип наушников</string>
-    <string name="dirac_preset_title">Выберите настройку</string>
-    <!-- Dirac settings: Headset types -->
-    <string name="dirac_headset_default">По умолчанию</string>
-    <string name="dirac_headset_earbuds">Mi Earbuds</string>
-    <string name="dirac_headset_in_ear_2013">Mi In-Ear (2013)</string>
-    <string name="dirac_headset_piston_1">Mi Piston-1</string>
-    <string name="dirac_headset_general">Вкладыши</string>
-    <string name="dirac_headset_general_inear">Вакуумные</string>
-    <string name="dirac_headset_piston_basic">Mi Piston Basic</string>
-    <string name="dirac_headset_piston_2">Mi Piston-2</string>
-    <string name="dirac_headset_piston_standard">Mi Piston Standard</string>
-    <string name="dirac_headset_headphone">Mi Headphones</string>
-    <string name="dirac_headset_piston_youth">Mi Piston Youth</string>
-    <string name="dirac_headset_piston_color">Mi Piston Colorful</string>
-    <string name="dirac_headset_in_ear">Mi In-Ear Pro</string>
-    <string name="dirac_headset_capsule">Mi Capsule</string>
-    <string name="dirac_headset_in_ear_pro">Mi In-Ear Pro HD</string>
-    <string name="dirac_headset_comfort">Mi Comfort</string>
-    <string name="dirac_headset_reduction_noise">Mi ANC Type-C</string>
-    <string name="dirac_headset_cancelling">Mi ANC 3.5 мм</string>
-    <string name="dirac_headset_half_in_ear">Mi Half In-Ear</string>
-    <string name="dirac_headset_in_ear2">Mi In-Ear 2</string>
-    <string name="dirac_headset_earphone_basic">Mi Earphones Basic</string>
-    <string name="dirac_headset_earphone">Mi Earphones</string>
-    <!-- Dirac settings: Equalizer presets -->
-    <string name="dirac_preset_default">По умолчанию</string>
-    <string name="dirac_preset_rock">Рок</string>
-    <string name="dirac_preset_jazz">Джаз</string>
-    <string name="dirac_preset_pop">Поп</string>
-    <string name="dirac_preset_classical">Классика</string>
-    <string name="dirac_preset_hiphop">Хип-Хоп</string>
-    <string name="dirac_preset_blues">Блюз</string>
-    <string name="dirac_preset_electronic">Электронная</string>
-    <string name="dirac_preset_country">Кантри</string>
-    <string name="dirac_preset_dance">Танцевальная</string>
-    <string name="dirac_preset_metal">Металл</string>
-</resources>
diff --git a/parts/res/values-sk-rSK/strings.xml b/parts/res/values-sk-rSK/strings.xml
deleted file mode 100644
index c0bb4aa..0000000
--- a/parts/res/values-sk-rSK/strings.xml
+++ /dev/null
@@ -1,59 +0,0 @@
-<?xml version="1.0" encoding="utf-8"?>
-<!--Generated by crowdin.com-->
-<!--
-     Copyright (C) 2018 The PixelExperience Project
-
-     Licensed under the Apache License, Version 2.0 (the "License");
-     you may not use this file except in compliance with the License.
-     You may obtain a copy of the License at
-
-          http://www.apache.org/licenses/LICENSE-2.0
-
-     Unless required by applicable law or agreed to in writing, software
-     distributed under the License is distributed on an "AS IS" BASIS,
-     WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
-     See the License for the specific language governing permissions and
-     limitations under the License.
--->
-<resources>
-    <!-- Dirac settings -->
-    <string name="dirac_title">Dirac HD Sound</string>
-    <string name="dirac_summary">Vylepšiť kvalitu zvuku</string>
-    <string name="dirac_headset_title">Typ slúchadiel</string>
-    <string name="dirac_preset_title">Zvoliť predvoľbu</string>
-    <!-- Dirac settings: Headset types -->
-    <string name="dirac_headset_default">Predvolené</string>
-    <string name="dirac_headset_earbuds">Xiaomi slúchadlá</string>
-    <string name="dirac_headset_in_ear_2013">Mi In-Ear (Mi v uchu) (2013)</string>
-    <string name="dirac_headset_piston_1">Xiaomi Piston-1</string>
-    <string name="dirac_headset_general">Bežné slúchadlá</string>
-    <string name="dirac_headset_general_inear">Bežné špunty</string>
-    <string name="dirac_headset_piston_basic">Základné</string>
-    <string name="dirac_headset_piston_2">Xiaomi Piston-2</string>
-    <string name="dirac_headset_piston_standard">Xiaomi Piston-3</string>
-    <string name="dirac_headset_headphone">Mi Slúchadlá</string>
-    <string name="dirac_headset_piston_youth">Xiaomi Youth</string>
-    <string name="dirac_headset_piston_color">Farebná edícia</string>
-    <string name="dirac_headset_in_ear">Xiaomi špunty</string>
-    <string name="dirac_headset_capsule">Púzdro Mi</string>
-    <string name="dirac_headset_in_ear_pro">Mi In-Ear Pro</string>
-    <string name="dirac_headset_comfort">Mi Comfort</string>
-    <string name="dirac_headset_reduction_noise">Mi Rušenie hluku Typ C</string>
-    <string name="dirac_headset_cancelling">Mi Rušenie hluku 3,5mm</string>
-    <string name="dirac_headset_half_in_ear">Mi Half In-Ear</string>
-    <string name="dirac_headset_in_ear2">Mi In-Ear 2</string>
-    <string name="dirac_headset_earphone_basic">Mi Earphones Basic</string>
-    <string name="dirac_headset_earphone">Mi Earphones</string>
-    <!-- Dirac settings: Equalizer presets -->
-    <string name="dirac_preset_default">Predvolené</string>
-    <string name="dirac_preset_rock">Rock</string>
-    <string name="dirac_preset_jazz">Jazz</string>
-    <string name="dirac_preset_pop">Pop</string>
-    <string name="dirac_preset_classical">Klasika</string>
-    <string name="dirac_preset_hiphop">Hip Hop</string>
-    <string name="dirac_preset_blues">Blues</string>
-    <string name="dirac_preset_electronic">Electronic</string>
-    <string name="dirac_preset_country">Country</string>
-    <string name="dirac_preset_dance">Dance</string>
-    <string name="dirac_preset_metal">Metal</string>
-</resources>
diff --git a/parts/res/values-zh-rCN/strings.xml b/parts/res/values-zh-rCN/strings.xml
deleted file mode 100644
index 69cb403..0000000
--- a/parts/res/values-zh-rCN/strings.xml
+++ /dev/null
@@ -1,59 +0,0 @@
-<?xml version="1.0" encoding="utf-8"?>
-<!--Generated by crowdin.com-->
-<!--
-     Copyright (C) 2018 The PixelExperience Project
-
-     Licensed under the Apache License, Version 2.0 (the "License");
-     you may not use this file except in compliance with the License.
-     You may obtain a copy of the License at
-
-          http://www.apache.org/licenses/LICENSE-2.0
-
-     Unless required by applicable law or agreed to in writing, software
-     distributed under the License is distributed on an "AS IS" BASIS,
-     WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
-     See the License for the specific language governing permissions and
-     limitations under the License.
--->
-<resources>
-    <!-- Dirac settings -->
-    <string name="dirac_title">使用米音提升音质</string>
-    <string name="dirac_summary">米音</string>
-    <string name="dirac_headset_title">耳机类型设置</string>
-    <string name="dirac_preset_title">请选择预设效果</string>
-    <!-- Dirac settings: Headset types -->
-    <string name="dirac_headset_default">无</string>
-    <string name="dirac_headset_earbuds">灵动耳塞式</string>
-    <string name="dirac_headset_in_ear_2013">灵悦入耳式</string>
-    <string name="dirac_headset_piston_1">小米活塞1</string>
-    <string name="dirac_headset_general">通用耳塞式</string>
-    <string name="dirac_headset_general_inear">通用入耳式</string>
-    <string name="dirac_headset_piston_basic">小米活塞简装版</string>
-    <string name="dirac_headset_piston_2">小米活塞2</string>
-    <string name="dirac_headset_piston_standard">小米活塞标准版</string>
-    <string name="dirac_headset_headphone">小米头戴式</string>
-    <string name="dirac_headset_piston_youth">小米活塞青春版</string>
-    <string name="dirac_headset_piston_color">小米活塞炫彩版</string>
-    <string name="dirac_headset_in_ear">小米圈铁</string>
-    <string name="dirac_headset_capsule">小米胶囊</string>
-    <string name="dirac_headset_in_ear_pro">小米圈铁Pro</string>
-    <string name="dirac_headset_comfort">小米头戴轻松版</string>
-    <string name="dirac_headset_reduction_noise">小米降噪 typeC</string>
-    <string name="dirac_headset_cancelling">小米降噪 3.5mm</string>
-    <string name="dirac_headset_half_in_ear">小米半入耳式</string>
-    <string name="dirac_headset_in_ear2">小米圈铁2</string>
-    <string name="dirac_headset_earphone_basic">小米耳机基本款</string>
-    <string name="dirac_headset_earphone">小米耳机</string>
-    <!-- Dirac settings: Equalizer presets -->
-    <string name="dirac_preset_default">无</string>
-    <string name="dirac_preset_rock">摇滚</string>
-    <string name="dirac_preset_jazz">爵士</string>
-    <string name="dirac_preset_pop">流行</string>
-    <string name="dirac_preset_classical">古典</string>
-    <string name="dirac_preset_hiphop">嘻哈</string>
-    <string name="dirac_preset_blues">布鲁斯</string>
-    <string name="dirac_preset_electronic">电子音乐</string>
-    <string name="dirac_preset_country">乡村</string>
-    <string name="dirac_preset_dance">舞曲</string>
-    <string name="dirac_preset_metal">金属</string>
-</resources>
diff --git a/parts/res/values/strings.xml b/parts/res/values/strings.xml
deleted file mode 100644
index ed47cc5..0000000
--- a/parts/res/values/strings.xml
+++ /dev/null
@@ -1,60 +0,0 @@
-<?xml version="1.0" encoding="utf-8"?>
-<!--
-     Copyright (C) 2018 The LineageOS Project
-
-     Licensed under the Apache License, Version 2.0 (the "License");
-     you may not use this file except in compliance with the License.
-     You may obtain a copy of the License at
-
-          http://www.apache.org/licenses/LICENSE-2.0
-
-     Unless required by applicable law or agreed to in writing, software
-     distributed under the License is distributed on an "AS IS" BASIS,
-     WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
-     See the License for the specific language governing permissions and
-     limitations under the License.
--->
-<resources>
-    <!-- Dirac settings -->
-    <string name="dirac_title">Mi Sound Enhancer</string>
-    <string name="dirac_summary">Optimize audio quality</string>
-    <string name="dirac_headset_title">Choose headphones type</string>
-    <string name="dirac_preset_title">Choose a preset</string>
-
-    <!-- Dirac settings: Headset types -->
-    <string name="dirac_headset_default">Default</string>
-    <string name="dirac_headset_earbuds">Mi Earbuds</string>
-    <string name="dirac_headset_in_ear_2013">Mi In-Ear (2013)</string>
-    <string name="dirac_headset_piston_1">Mi Piston-1</string>
-    <string name="dirac_headset_general">General</string>
-    <string name="dirac_headset_general_inear">General In-Ear</string>
-    <string name="dirac_headset_piston_basic">Basic Edition</string>
-    <string name="dirac_headset_piston_2">Mi Piston-2</string>
-    <string name="dirac_headset_piston_standard">Standard Edition</string>
-    <string name="dirac_headset_headphone">Mi Headphones</string>
-    <string name="dirac_headset_piston_youth">Youth Edition</string>
-    <string name="dirac_headset_piston_color">Color Edition</string>
-    <string name="dirac_headset_in_ear">Mi In-Ear</string>
-    <string name="dirac_headset_capsule">Mi Capsule</string>
-    <string name="dirac_headset_in_ear_pro">Mi In-Ear Pro</string>
-    <string name="dirac_headset_comfort">Mi Comfort</string>
-    <string name="dirac_headset_reduction_noise">Mi Noise Cancelling Type-C</string>
-    <string name="dirac_headset_cancelling">Mi Noise Cancelling 3.5mm</string>
-    <string name="dirac_headset_half_in_ear">Mi Half In-Ear</string>
-    <string name="dirac_headset_in_ear2">Mi In-Ear 2</string>
-    <string name="dirac_headset_earphone_basic">Mi Earphones Basic</string>
-    <string name="dirac_headset_earphone">Mi Earphones</string>
-
-    <!-- Dirac settings: Equalizer presets -->
-    <string name="dirac_preset_default">Default</string>
-    <string name="dirac_preset_rock">Rock</string>
-    <string name="dirac_preset_jazz">Jazz</string>
-    <string name="dirac_preset_pop">Pop</string>
-    <string name="dirac_preset_classical">Classical</string>
-    <string name="dirac_preset_hiphop">Hip Hop</string>
-    <string name="dirac_preset_blues">Blues</string>
-    <string name="dirac_preset_electronic">Electronic</string>
-    <string name="dirac_preset_country">Country</string>
-    <string name="dirac_preset_dance">Dance</string>
-    <string name="dirac_preset_metal">Metal</string>
-</resources>
diff --git a/parts/res/values/styles.xml b/parts/res/values/styles.xml
deleted file mode 100644
index 3443c0b..0000000
--- a/parts/res/values/styles.xml
+++ /dev/null
@@ -1,62 +0,0 @@
-<?xml version="1.0" encoding="utf-8"?>
-<!--
-     Copyright (C) 2015-2016 The CyanogenMod Project
-                   2017 The LineageOS Project
-
-     Licensed under the Apache License, Version 2.0 (the "License");
-     you may not use this file except in compliance with the License.
-     You may obtain a copy of the License at
-  
-          http://www.apache.org/licenses/LICENSE-2.0
-  
-     Unless required by applicable law or agreed to in writing, software
-     distributed under the License is distributed on an "AS IS" BASIS,
-     WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
-     See the License for the specific language governing permissions and
-     limitations under the License.
--->
-<resources xmlns:xliff="urn:oasis:names:tc:xliff:document:1.2">
-    <style name="Theme.Main" parent="@android:style/Theme.DeviceDefault.Settings">
-        <item name="dialogPreferenceStyle">@style/Theme.Main.DialogPreferenceStyle</item>
-        <item name="preferenceCategoryStyle">@style/Theme.Main.PreferenceCategoryStyle</item>
-        <item name="preferenceFragmentStyle">@style/Theme.Main.PreferenceFragmentStyle</item>
-        <item name="preferenceStyle">@style/Theme.Main.PreferenceStyle</item>
-        <item name="preferenceTheme">@style/Theme.Main.PreferenceTheme</item>
-        <item name="switchPreferenceStyle">@style/Theme.Main.SwitchPreferenceStyle</item>
-    </style>
-
-    <style name="Theme.Main.DialogPreferenceStyle" parent="@style/Theme.Main.PreferenceStyle">
-    </style>
-
-    <style name="Theme.Main.PreferenceCategoryStyle" parent="@*android:style/Preference.DeviceDefault.Category">
-        <item name="allowDividerAbove">true</item>
-        <item name="allowDividerBelow">true</item>
-        <item name="android:layout">@layout/preference_category_material_settings</item>
-    </style>
-
-    <style name="Theme.Main.PreferenceFragmentStyle" parent="@*android:style/PreferenceFragment.Material">
-        <item name="allowDividerAfterLastItem">false</item>
-    </style>
-
-    <style name="Theme.Main.PreferenceStyle" parent="@*android:style/Preference.DeviceDefault">
-        <item name="allowDividerAbove">false</item>
-        <item name="allowDividerBelow">true</item>
-        <item name="singleLineTitle">false</item>
-        <item name="android:layout">@layout/preference_material_settings</item>
-    </style>
-
-    <style name="Theme.Main.PreferenceTheme">
-    </style>
-
-    <style name="Theme.Main.SwitchPreferenceStyle" parent="@style/Theme.Main.PreferenceStyle">
-        <item name="widgetLayout">@*android:layout/preference_widget_switch</item>
-    </style>
-
-    <style name="Theme.Main.SwitchBar" parent="@android:style/ThemeOverlay.Material.ActionBar">
-    </style>
-
-    <style name="Theme.Main.SwitchBar.Switch">
-        <item name="android:trackTint">@color/switchbar_switch_track_tint</item>
-        <item name="android:thumbTint">@color/switchbar_switch_thumb_tint</item>
-    </style>
-</resources>
diff --git a/parts/res/xml/dirac_settings.xml b/parts/res/xml/dirac_settings.xml
deleted file mode 100644
index 2fab929..0000000
--- a/parts/res/xml/dirac_settings.xml
+++ /dev/null
@@ -1,37 +0,0 @@
-<?xml version="1.0" encoding="utf-8"?>
-<!--
-     Copyright (C) 2018 The LineageOS Project
-
-     Licensed under the Apache License, Version 2.0 (the "License"
-     you may not use this file except in compliance with the License.
-     You may obtain a copy of the License at
-
-          http://www.apache.org/licenses/LICENSE-2.0
-
-     Unless required by applicable law or agreed to in writing, software
-     distributed under the License is distributed on an "AS IS" BASIS,
-     WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
-     See the License for the specific language governing permissions and
-     limitations under the License.
--->
-<PreferenceScreen xmlns:android="http://schemas.android.com/apk/res/android">
-
-    <ListPreference
-        android:key="dirac_headset_pref"
-        android:entries="@array/dirac_headset_pref_entries"
-        android:entryValues="@array/dirac_headset_pref_values"
-        android:defaultValue="0"
-        android:title="@string/dirac_headset_title"
-        android:summary="%s" 
-        android:icon="@drawable/ic_headphone" />
-
-    <ListPreference
-        android:key="dirac_preset_pref"
-        android:entries="@array/dirac_preset_pref_entries"
-        android:entryValues="@array/dirac_preset_pref_values"
-        android:defaultValue="0,0,0,0,0,0,0"
-        android:title="@string/dirac_preset_title"
-        android:summary="%s" 
-        android:icon="@drawable/ic_preset" />
-
-</PreferenceScreen>
diff --git a/parts/res/xml/doze_settings.xml b/parts/res/xml/doze_settings.xml
deleted file mode 100644
index e500433..0000000
--- a/parts/res/xml/doze_settings.xml
+++ /dev/null
@@ -1,61 +0,0 @@
-<?xml version="1.0" encoding="utf-8"?>
-<!--
-     Copyright (C) 2015 The CyanogenMod Project
-                   2018-2019 The LineageOS Project
-
-     Licensed under the Apache License, Version 2.0 (the "License"
-     you may not use this file except in compliance with the License.
-     You may obtain a copy of the License at
-
-          http://www.apache.org/licenses/LICENSE-2.0
-
-     Unless required by applicable law or agreed to in writing, software
-     distributed under the License is distributed on an "AS IS" BASIS,
-     WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
-     See the License for the specific language governing permissions and
-     limitations under the License.
--->
-<PreferenceScreen xmlns:android="http://schemas.android.com/apk/res/android">
-
-    <SwitchPreference
-        android:key="always_on_display"
-        android:disableDependentsState="true"
-        android:title="@string/ambient_display_always_on_title"
-        android:summary="@string/ambient_display_always_on_summary"
-        android:persistent="false"
-        android:icon="@drawable/ic_eye" />
-
-    <PreferenceCategory
-        android:key="tilt_sensor"
-        android:title="@string/tilt_sensor_title">
-
-        <SwitchPreference
-            android:key="gesture_pick_up"
-            android:defaultValue="false"
-            android:title="@string/pick_up_gesture_title"
-            android:summary="@string/pick_up_gesture_summary" 
-            android:icon="@drawable/ic_pickup" />
-
-    </PreferenceCategory>
-
-    <PreferenceCategory
-        android:key="proximity_sensor"
-        android:title="@string/proximity_sensor_title">
-
-        <SwitchPreference
-            android:key="gesture_hand_wave"
-            android:defaultValue="false"
-            android:title="@string/hand_wave_gesture_title"
-            android:summary="@string/hand_wave_gesture_summary"
-            android:icon="@drawable/ic_hand" />
-
-        <SwitchPreference
-            android:key="gesture_pocket"
-            android:defaultValue="false"
-            android:title="@string/pocket_gesture_title"
-            android:summary="@string/pocket_gesture_summary"
-            android:icon="@drawable/ic_pocket" />
-
-    </PreferenceCategory>
-
-</PreferenceScreen>
diff --git a/parts/src/org/lineageos/settings/BootCompletedReceiver.java b/parts/src/org/lineageos/settings/BootCompletedReceiver.java
deleted file mode 100644
index a67585c..0000000
--- a/parts/src/org/lineageos/settings/BootCompletedReceiver.java
+++ /dev/null
@@ -1,39 +0,0 @@
-/*
- * Copyright (C) 2015 The CyanogenMod Project
- *               2017-2019 The LineageOS Project
- *
- * Licensed under the Apache License, Version 2.0 (the "License");
- * you may not use this file except in compliance with the License.
- * You may obtain a copy of the License at
- *
- *      http://www.apache.org/licenses/LICENSE-2.0
- *
- * Unless required by applicable law or agreed to in writing, software
- * distributed under the License is distributed on an "AS IS" BASIS,
- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
- * See the License for the specific language governing permissions and
- * limitations under the License.
- */
-
-package org.lineageos.settings;
-
-import android.content.BroadcastReceiver;
-import android.content.Context;
-import android.content.Intent;
-import android.util.Log;
-
-import org.lineageos.settings.dirac.DiracUtils;
-import org.lineageos.settings.doze.DozeUtils;
-
-public class BootCompletedReceiver extends BroadcastReceiver {
-
-    private static final boolean DEBUG = false;
-    private static final String TAG = "XiaomiParts";
-
-    @Override
-    public void onReceive(final Context context, Intent intent) {
-        new DiracUtils(context).onBootCompleted();
-        if (DEBUG) Log.d(TAG, "Received boot completed intent");
-        DozeUtils.checkDozeService(context);
-    }
-}
diff --git a/parts/src/org/lineageos/settings/dirac/DiracActivity.java b/parts/src/org/lineageos/settings/dirac/DiracActivity.java
deleted file mode 100644
index 313bc7d..0000000
--- a/parts/src/org/lineageos/settings/dirac/DiracActivity.java
+++ /dev/null
@@ -1,33 +0,0 @@
-/*
- * Copyright (C) 2018 The LineageOS Project
- *
- * Licensed under the Apache License, Version 2.0 (the "License");
- * you may not use this file except in compliance with the License.
- * You may obtain a copy of the License at
- *
- *      http://www.apache.org/licenses/LICENSE-2.0
- *
- * Unless required by applicable law or agreed to in writing, software
- * distributed under the License is distributed on an "AS IS" BASIS,
- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
- * See the License for the specific language governing permissions and
- * limitations under the License.
- */
-
-package org.lineageos.settings.dirac;
-
-import android.os.Bundle;
-import android.preference.PreferenceActivity;
-
-public class DiracActivity extends PreferenceActivity {
-
-    private static final String TAG_DIRAC = "dirac";
-
-    @Override
-    protected void onCreate(Bundle savedInstanceState) {
-        super.onCreate(savedInstanceState);
-
-        getFragmentManager().beginTransaction().replace(android.R.id.content,
-                new DiracSettingsFragment(), TAG_DIRAC).commit();
-    }
-}
diff --git a/parts/src/org/lineageos/settings/dirac/DiracSettingsFragment.java b/parts/src/org/lineageos/settings/dirac/DiracSettingsFragment.java
deleted file mode 100644
index 1771bcc..0000000
--- a/parts/src/org/lineageos/settings/dirac/DiracSettingsFragment.java
+++ /dev/null
@@ -1,155 +0,0 @@
-/*
- * Copyright (C) 2018 The LineageOS Project
- *
- * Licensed under the Apache License, Version 2.0 (the "License");
- * you may not use this file except in compliance with the License.
- * You may obtain a copy of the License at
- *
- *      http://www.apache.org/licenses/LICENSE-2.0
- *
- * Unless required by applicable law or agreed to in writing, software
- * distributed under the License is distributed on an "AS IS" BASIS,
- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
- * See the License for the specific language governing permissions and
- * limitations under the License.
- */
-
-package org.lineageos.settings.dirac;
-
-import android.app.ActionBar;
-import android.app.Activity;
-import android.content.Context;
-import android.content.DialogInterface;
-import android.content.SharedPreferences;
-import android.os.Bundle;
-import android.os.Handler;
-import android.support.v14.preference.PreferenceFragment;
-import android.support.v14.preference.SwitchPreference;
-import android.support.v7.preference.ListPreference;
-import android.support.v7.preference.Preference;
-import android.support.v7.preference.PreferenceCategory;
-import android.support.v7.preference.Preference.OnPreferenceChangeListener;
-import android.view.LayoutInflater;
-import android.view.MenuItem;
-import android.view.View;
-import android.view.ViewGroup;
-import android.widget.CompoundButton;
-import android.widget.Switch;
-import android.widget.TextView;
-
-import org.lineageos.settings.R;
-
-public class DiracSettingsFragment extends PreferenceFragment implements
-        OnPreferenceChangeListener, CompoundButton.OnCheckedChangeListener {
-
-    private static final String PREF_HEADSET = "dirac_headset_pref";
-    private static final String PREF_PRESET = "dirac_preset_pref";
-
-    private TextView mTextView;
-    private View mSwitchBar;
-
-    private ListPreference mHeadsetType;
-    private ListPreference mPreset;
-
-    private DiracUtils mDiracUtils;
-    private Handler mHandler = new Handler();
-
-    @Override
-    public void onCreatePreferences(Bundle savedInstanceState, String rootKey) {
-        addPreferencesFromResource(R.xml.dirac_settings);
-
-        mDiracUtils = new DiracUtils(getContext());
-
-        final ActionBar actionBar = getActivity().getActionBar();
-        actionBar.setDisplayHomeAsUpEnabled(true);
-
-        boolean enhancerEnabled = mDiracUtils.isDiracEnabled();
-
-        mHeadsetType = (ListPreference) findPreference(PREF_HEADSET);
-        mHeadsetType.setOnPreferenceChangeListener(this);
-        mHeadsetType.setEnabled(enhancerEnabled);
-
-        mPreset = (ListPreference) findPreference(PREF_PRESET);
-        mPreset.setOnPreferenceChangeListener(this);
-        mPreset.setEnabled(enhancerEnabled);
-    }
-
-    @Override
-    public View onCreateView(LayoutInflater inflater, ViewGroup container,
-                             Bundle savedInstanceState) {
-        final View view = LayoutInflater.from(getContext()).inflate(R.layout.dirac,
-                container, false);
-        ((ViewGroup) view).addView(super.onCreateView(inflater, container, savedInstanceState));
-        return view;
-    }
-
-    @Override
-    public void onViewCreated(View view, Bundle savedInstanceState) {
-        super.onViewCreated(view, savedInstanceState);
-
-        boolean enhancerEnabled = mDiracUtils.isDiracEnabled();
-
-        mTextView = view.findViewById(R.id.switch_text);
-        mTextView.setText(getString(enhancerEnabled ?
-                R.string.switch_bar_on : R.string.switch_bar_off));
-
-        mSwitchBar = view.findViewById(R.id.switch_bar);
-        Switch switchWidget = mSwitchBar.findViewById(android.R.id.switch_widget);
-        switchWidget.setChecked(enhancerEnabled);
-        switchWidget.setOnCheckedChangeListener(this);
-        mSwitchBar.setActivated(enhancerEnabled);
-        mSwitchBar.setOnClickListener(v -> {
-            switchWidget.setChecked(!switchWidget.isChecked());
-            mSwitchBar.setActivated(switchWidget.isChecked());
-        });
-    }
-
-    @Override
-    public boolean onPreferenceChange(Preference preference, Object newValue) {
-        switch (preference.getKey()) {
-            case PREF_HEADSET:
-                mDiracUtils.setHeadsetType(Integer.parseInt(newValue.toString()));
-                return true;
-            case PREF_PRESET:
-                mDiracUtils.setLevel(String.valueOf(newValue));
-                return true;
-            default: return false;
-        }
-    }
-
-    @Override
-    public void onCheckedChanged(CompoundButton compoundButton, boolean isChecked) {
-        mDiracUtils.setEnabled(isChecked);
-        mTextView.setText(getString(isChecked ? R.string.switch_bar_on : R.string.switch_bar_off));
-        if (isChecked) {
-            mSwitchBar.setEnabled(false);
-            mHandler.postDelayed(new Runnable() {
-                @Override
-                public void run() {
-                    try {
-                        mSwitchBar.setEnabled(true);
-                        setEnabled(isChecked);
-                    } catch(Exception ignored) {
-                    }
-                }
-            }, 1020);
-        } else {
-            setEnabled(isChecked);
-        }
-    }
-
-    private void setEnabled(boolean enabled){
-        mSwitchBar.setActivated(enabled);
-        mHeadsetType.setEnabled(enabled);
-        mPreset.setEnabled(enabled);
-    }
-
-    @Override
-    public boolean onOptionsItemSelected(MenuItem item) {
-        if (item.getItemId() == android.R.id.home) {
-            getActivity().onBackPressed();
-            return true;
-        }
-        return false;
-    }
-}
diff --git a/parts/src/org/lineageos/settings/dirac/DiracUtils.java b/parts/src/org/lineageos/settings/dirac/DiracUtils.java
deleted file mode 100644
index 24fcc7a..0000000
--- a/parts/src/org/lineageos/settings/dirac/DiracUtils.java
+++ /dev/null
@@ -1,149 +0,0 @@
-/*
- * Copyright (C) 2018 The LineageOS Project
- *
- * Licensed under the Apache License, Version 2.0 (the "License");
- * you may not use this file except in compliance with the License.
- * You may obtain a copy of the License at
- *
- *      http://www.apache.org/licenses/LICENSE-2.0
- *
- * Unless required by applicable law or agreed to in writing, software
- * distributed under the License is distributed on an "AS IS" BASIS,
- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
- * See the License for the specific language governing permissions and
- * limitations under the License.
- */
-
-package org.lineageos.settings.dirac;
-
-import android.content.Context;
-import android.content.Intent;
-import android.os.Handler;
-import android.os.UserHandle;
-import android.os.SystemClock;
-import android.view.KeyEvent;
-import android.media.session.MediaController;
-import android.media.session.MediaSessionManager;
-import android.media.session.PlaybackState;
-import java.lang.IllegalArgumentException;
-import java.util.List;
-
-public final class DiracUtils {
-
-    protected DiracSound mDiracSound;
-    private static DiracUtils mInstance;
-    private MediaSessionManager mMediaSessionManager;
-    private Handler mHandler = new Handler();
-    private Context mContext;
-
-    public static DiracUtils getInstance() {
-        if (mInstance == null) {
-            throw new IllegalArgumentException("Trying to get instance without initializing!");
-        }
-        return mInstance;
-    }
-
-    public DiracUtils(final Context context) {
-        mContext = context;
-        mMediaSessionManager = (MediaSessionManager) context.getSystemService(Context.MEDIA_SESSION_SERVICE);
-        mDiracSound = new DiracSound(0, 0);
-    }
-
-    public void onBootCompleted() {
-        setEnabled(mDiracSound.getMusic() == 1);
-        mDiracSound.setHeadsetType(mDiracSound.getHeadsetType());
-        setLevel(getLevel());
-        mInstance = this;
-    }
-
-    protected void refreshPlaybackIfNecessary(){
-        if (mMediaSessionManager == null) {
-            mMediaSessionManager = (MediaSessionManager) mContext.getSystemService(Context.MEDIA_SESSION_SERVICE);
-        }
-        final List<MediaController> sessions
-                = mMediaSessionManager.getActiveSessionsForUser(
-                null, UserHandle.USER_ALL);
-        for (MediaController aController : sessions) {
-            if (PlaybackState.STATE_PLAYING ==
-                    getMediaControllerPlaybackState(aController)) {
-                triggerPlayPause(aController);
-                break;
-            }
-        }
-    }
-
-    private void triggerPlayPause(MediaController controller) {
-        long when = SystemClock.uptimeMillis();
-        final KeyEvent evDownPause = new KeyEvent(when, when, KeyEvent.ACTION_DOWN, KeyEvent.KEYCODE_MEDIA_PAUSE, 0);
-        final KeyEvent evUpPause = KeyEvent.changeAction(evDownPause, KeyEvent.ACTION_UP);
-        final KeyEvent evDownPlay = new KeyEvent(when, when, KeyEvent.ACTION_DOWN, KeyEvent.KEYCODE_MEDIA_PLAY, 0);
-        final KeyEvent evUpPlay = KeyEvent.changeAction(evDownPlay, KeyEvent.ACTION_UP);
-        mHandler.post(new Runnable() {
-            @Override
-            public void run() {
-                controller.dispatchMediaButtonEvent(evDownPause);
-            }
-        });
-        mHandler.postDelayed(new Runnable() {
-            @Override
-            public void run() {
-                controller.dispatchMediaButtonEvent(evUpPause);
-            }
-        }, 20);
-        mHandler.postDelayed(new Runnable() {
-            @Override
-            public void run() {
-                controller.dispatchMediaButtonEvent(evDownPlay);
-            }
-        }, 1000);
-        mHandler.postDelayed(new Runnable() {
-            @Override
-            public void run() {
-                controller.dispatchMediaButtonEvent(evUpPlay);
-            }
-        }, 1020);
-    }
-
-    private int getMediaControllerPlaybackState(MediaController controller) {
-        if (controller != null) {
-            final PlaybackState playbackState = controller.getPlaybackState();
-            if (playbackState != null) {
-                return playbackState.getState();
-            }
-        }
-        return PlaybackState.STATE_NONE;
-    }
-    protected void setEnabled(boolean enable) {
-        mDiracSound.setEnabled(enable);
-        mDiracSound.setMusic(enable ? 1 : 0);
-        if (enable) {
-            refreshPlaybackIfNecessary();
-        }
-    }
-
-    protected boolean isDiracEnabled() {
-        return mDiracSound.getMusic() == 1;
-    }
-
-    protected void setLevel(String preset) {
-        String[] level = preset.split("\\s*,\\s*");
-
-        for (int band = 0; band <= level.length - 1; band++) {
-            mDiracSound.setLevel(band, Float.valueOf(level[band]));
-        }
-    }
-
-    protected String getLevel() {
-        String selected = "";
-        for (int band = 0; band <= 6; band++) {
-            int temp = (int) mDiracSound.getLevel(band);
-            selected += String.valueOf(temp);
-            if (band != 6) selected += ",";
-        }
-        return selected;
-    }
-
-    protected void setHeadsetType(int paramInt) {
-         mDiracSound.setHeadsetType(paramInt);
-    }
-}
diff --git a/parts/src/org/lineageos/settings/doze/DozeService.java b/parts/src/org/lineageos/settings/doze/DozeService.java
deleted file mode 100644
index de03883..0000000
--- a/parts/src/org/lineageos/settings/doze/DozeService.java
+++ /dev/null
@@ -1,98 +0,0 @@
-/*
- * Copyright (C) 2015 The CyanogenMod Project
- *               2017-2018 The LineageOS Project
- *
- * Licensed under the Apache License, Version 2.0 (the "License");
- * you may not use this file except in compliance with the License.
- * You may obtain a copy of the License at
- *
- *      http://www.apache.org/licenses/LICENSE-2.0
- *
- * Unless required by applicable law or agreed to in writing, software
- * distributed under the License is distributed on an "AS IS" BASIS,
- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
- * See the License for the specific language governing permissions and
- * limitations under the License.
- */
-
-package org.lineageos.settings.doze;
-
-import android.app.Service;
-import android.content.BroadcastReceiver;
-import android.content.Context;
-import android.content.Intent;
-import android.content.IntentFilter;
-import android.os.IBinder;
-import android.util.Log;
-
-public class DozeService extends Service {
-    private static final String TAG = "DozeService";
-    private static final boolean DEBUG = false;
-
-    private ProximitySensor mProximitySensor;
-    private TiltSensor mTiltSensor;
-
-    @Override
-    public void onCreate() {
-        if (DEBUG) Log.d(TAG, "Creating service");
-        mProximitySensor = new ProximitySensor(this);
-        mTiltSensor = new TiltSensor(this);
-
-        IntentFilter screenStateFilter = new IntentFilter(Intent.ACTION_SCREEN_ON);
-        screenStateFilter.addAction(Intent.ACTION_SCREEN_OFF);
-        registerReceiver(mScreenStateReceiver, screenStateFilter);
-    }
-
-    @Override
-    public int onStartCommand(Intent intent, int flags, int startId) {
-        if (DEBUG) Log.d(TAG, "Starting service");
-        return START_STICKY;
-    }
-
-    @Override
-    public void onDestroy() {
-        if (DEBUG) Log.d(TAG, "Destroying service");
-        super.onDestroy();
-        this.unregisterReceiver(mScreenStateReceiver);
-        mProximitySensor.disable();
-        mTiltSensor.disable();
-    }
-
-    @Override
-    public IBinder onBind(Intent intent) {
-        return null;
-    }
-
-    private void onDisplayOn() {
-        if (DEBUG) Log.d(TAG, "Display on");
-        if (DozeUtils.isPickUpEnabled(this)) {
-            mTiltSensor.disable();
-        }
-        if (DozeUtils.isHandwaveGestureEnabled(this) ||
-                DozeUtils.isPocketGestureEnabled(this)) {
-            mProximitySensor.disable();
-        }
-    }
-
-    private void onDisplayOff() {
-        if (DEBUG) Log.d(TAG, "Display off");
-        if (DozeUtils.isPickUpEnabled(this)) {
-            mTiltSensor.enable();
-        }
-        if (DozeUtils.isHandwaveGestureEnabled(this) ||
-                DozeUtils.isPocketGestureEnabled(this)) {
-            mProximitySensor.enable();
-        }
-    }
-
-    private BroadcastReceiver mScreenStateReceiver = new BroadcastReceiver() {
-        @Override
-        public void onReceive(Context context, Intent intent) {
-            if (intent.getAction().equals(Intent.ACTION_SCREEN_ON)) {
-                onDisplayOn();
-            } else if (intent.getAction().equals(Intent.ACTION_SCREEN_OFF)) {
-                onDisplayOff();
-            }
-        }
-    };
-}
diff --git a/parts/src/org/lineageos/settings/doze/DozeSettingsActivity.java b/parts/src/org/lineageos/settings/doze/DozeSettingsActivity.java
deleted file mode 100644
index 1591b2c..0000000
--- a/parts/src/org/lineageos/settings/doze/DozeSettingsActivity.java
+++ /dev/null
@@ -1,34 +0,0 @@
-/*
- * Copyright (C) 2015-2016 The CyanogenMod Project
- *               2017 The LineageOS Project
- *
- * Licensed under the Apache License, Version 2.0 (the "License");
- * you may not use this file except in compliance with the License.
- * You may obtain a copy of the License at
- *
- *      http://www.apache.org/licenses/LICENSE-2.0
- *
- * Unless required by applicable law or agreed to in writing, software
- * distributed under the License is distributed on an "AS IS" BASIS,
- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
- * See the License for the specific language governing permissions and
- * limitations under the License.
- */
-
-package org.lineageos.settings.doze;
-
-import android.os.Bundle;
-import android.preference.PreferenceActivity;
-
-public class DozeSettingsActivity extends PreferenceActivity {
-
-    private static final String TAG_DOZE = "doze";
-
-    @Override
-    protected void onCreate(Bundle savedInstanceState) {
-        super.onCreate(savedInstanceState);
-
-        getFragmentManager().beginTransaction().replace(android.R.id.content,
-                new DozeSettingsFragment(), TAG_DOZE).commit();
-    }
-}
diff --git a/parts/src/org/lineageos/settings/doze/DozeSettingsFragment.java b/parts/src/org/lineageos/settings/doze/DozeSettingsFragment.java
deleted file mode 100644
index 8efbdf5..0000000
--- a/parts/src/org/lineageos/settings/doze/DozeSettingsFragment.java
+++ /dev/null
@@ -1,201 +0,0 @@
-/*
- * Copyright (C) 2015 The CyanogenMod Project
- *               2017-2019 The LineageOS Project
- *
- * Licensed under the Apache License, Version 2.0 (the "License");
- * you may not use this file except in compliance with the License.
- * You may obtain a copy of the License at
- *
- *      http://www.apache.org/licenses/LICENSE-2.0
- *
- * Unless required by applicable law or agreed to in writing, software
- * distributed under the License is distributed on an "AS IS" BASIS,
- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
- * See the License for the specific language governing permissions and
- * limitations under the License.
- */
-
-package org.lineageos.settings.doze;
-
-import android.app.ActionBar;
-import android.app.Activity;
-import android.app.AlertDialog;
-import android.app.Dialog;
-import android.app.DialogFragment;
-import android.content.Context;
-import android.content.DialogInterface;
-import android.content.SharedPreferences;
-import android.os.Bundle;
-import android.os.Handler;
-import android.support.v14.preference.PreferenceFragment;
-import android.support.v14.preference.SwitchPreference;
-import android.support.v7.preference.Preference;
-import android.support.v7.preference.PreferenceCategory;
-import android.support.v7.preference.Preference.OnPreferenceChangeListener;
-import android.view.LayoutInflater;
-import android.view.MenuItem;
-import android.view.View;
-import android.view.ViewGroup;
-import android.widget.CompoundButton;
-import android.widget.Switch;
-import android.widget.TextView;
-
-import org.lineageos.settings.R;
-
-public class DozeSettingsFragment extends PreferenceFragment implements OnPreferenceChangeListener,
-        CompoundButton.OnCheckedChangeListener {
-
-    private TextView mTextView;
-    private View mSwitchBar;
-
-    private SwitchPreference mAlwaysOnDisplayPreference;
-
-    private SwitchPreference mPickUpPreference;
-    private SwitchPreference mHandwavePreference;
-    private SwitchPreference mPocketPreference;
-
-    private Handler mHandler = new Handler();
-
-    @Override
-    public void onCreatePreferences(Bundle savedInstanceState, String rootKey) {
-        addPreferencesFromResource(R.xml.doze_settings);
-        final ActionBar actionBar = getActivity().getActionBar();
-        actionBar.setDisplayHomeAsUpEnabled(true);
-
-        SharedPreferences prefs = getActivity().getSharedPreferences("doze_settings",
-                Activity.MODE_PRIVATE);
-        if (savedInstanceState == null && !prefs.getBoolean("first_help_shown", false)) {
-            showHelp();
-        }
-
-        boolean dozeEnabled = DozeUtils.isDozeEnabled(getActivity());
-
-        mAlwaysOnDisplayPreference = (SwitchPreference) findPreference(DozeUtils.ALWAYS_ON_DISPLAY);
-        mAlwaysOnDisplayPreference.setEnabled(dozeEnabled);
-        mAlwaysOnDisplayPreference.setChecked(DozeUtils.isAlwaysOnEnabled(getActivity()));
-        mAlwaysOnDisplayPreference.setOnPreferenceChangeListener(this);
-
-        PreferenceCategory pickupSensorCategory = (PreferenceCategory) getPreferenceScreen().
-                findPreference(DozeUtils.CATEG_PICKUP_SENSOR);
-        PreferenceCategory proximitySensorCategory = (PreferenceCategory) getPreferenceScreen().
-                findPreference(DozeUtils.CATEG_PROX_SENSOR);
-
-        mPickUpPreference = (SwitchPreference) findPreference(DozeUtils.GESTURE_PICK_UP_KEY);
-        mPickUpPreference.setEnabled(dozeEnabled);
-        mPickUpPreference.setOnPreferenceChangeListener(this);
-
-        mHandwavePreference = (SwitchPreference) findPreference(DozeUtils.GESTURE_HAND_WAVE_KEY);
-        mHandwavePreference.setEnabled(dozeEnabled);
-        mHandwavePreference.setOnPreferenceChangeListener(this);
-
-        mPocketPreference = (SwitchPreference) findPreference(DozeUtils.GESTURE_POCKET_KEY);
-        mPocketPreference.setEnabled(dozeEnabled);
-        mPocketPreference.setOnPreferenceChangeListener(this);
-
-        // Hide proximity sensor related features if the device doesn't support them
-        if (!DozeUtils.getProxCheckBeforePulse(getActivity())) {
-            getPreferenceScreen().removePreference(proximitySensorCategory);
-        }
-
-        // Hide AOD if not supported and set all its dependents otherwise
-        if (!DozeUtils.alwaysOnDisplayAvailable(getActivity())) {
-            getPreferenceScreen().removePreference(mAlwaysOnDisplayPreference);
-        } else {
-            pickupSensorCategory.setDependency(DozeUtils.ALWAYS_ON_DISPLAY);
-            proximitySensorCategory.setDependency(DozeUtils.ALWAYS_ON_DISPLAY);
-        }
-    }
-
-    @Override
-    public View onCreateView(LayoutInflater inflater, ViewGroup container,
-                             Bundle savedInstanceState) {
-        final View view = LayoutInflater.from(getContext()).inflate(R.layout.doze,
-                container, false);
-        ((ViewGroup) view).addView(super.onCreateView(inflater, container, savedInstanceState));
-        return view;
-    }
-
-    @Override
-    public void onViewCreated(View view, Bundle savedInstanceState) {
-        super.onViewCreated(view, savedInstanceState);
-
-        boolean dozeEnabled = DozeUtils.isDozeEnabled(getActivity());
-
-        mTextView = view.findViewById(R.id.switch_text);
-        mTextView.setText(getString(dozeEnabled ?
-                R.string.switch_bar_on : R.string.switch_bar_off));
-
-        mSwitchBar = view.findViewById(R.id.switch_bar);
-        Switch switchWidget = mSwitchBar.findViewById(android.R.id.switch_widget);
-        switchWidget.setChecked(dozeEnabled);
-        switchWidget.setOnCheckedChangeListener(this);
-        mSwitchBar.setActivated(dozeEnabled);
-        mSwitchBar.setOnClickListener(v -> {
-            switchWidget.setChecked(!switchWidget.isChecked());
-            mSwitchBar.setActivated(switchWidget.isChecked());
-        });
-    }
-
-    @Override
-    public boolean onPreferenceChange(Preference preference, Object newValue) {
-        if (DozeUtils.ALWAYS_ON_DISPLAY.equals(preference.getKey())) {
-            DozeUtils.enableAlwaysOn(getActivity(), (Boolean) newValue);
-        }
-
-        mHandler.post(() -> DozeUtils.checkDozeService(getActivity()));
-
-        return true;
-    }
-
-    @Override
-    public void onCheckedChanged(CompoundButton compoundButton, boolean isChecked) {
-        DozeUtils.enableDoze(getActivity(), isChecked);
-        DozeUtils.checkDozeService(getActivity());
-
-        mTextView.setText(getString(isChecked ? R.string.switch_bar_on : R.string.switch_bar_off));
-        mSwitchBar.setActivated(isChecked);
-
-        if (!isChecked) {
-            DozeUtils.enableAlwaysOn(getActivity(), false);
-            mAlwaysOnDisplayPreference.setChecked(false);
-        }
-        mAlwaysOnDisplayPreference.setEnabled(isChecked);
-
-        mPickUpPreference.setEnabled(isChecked);
-        mHandwavePreference.setEnabled(isChecked);
-        mPocketPreference.setEnabled(isChecked);
-    }
-
-    @Override
-    public boolean onOptionsItemSelected(MenuItem item) {
-        if (item.getItemId() == android.R.id.home) {
-            getActivity().onBackPressed();
-            return true;
-        }
-        return false;
-    }
-
-    private static class HelpDialogFragment extends DialogFragment {
-        @Override
-        public Dialog onCreateDialog(Bundle savedInstanceState) {
-            return new AlertDialog.Builder(getActivity())
-                    .setTitle(R.string.doze_settings_help_title)
-                    .setMessage(R.string.doze_settings_help_text)
-                    .setNegativeButton(R.string.dialog_ok, (dialog, which) -> dialog.cancel())
-                    .create();
-        }
-
-        @Override
-        public void onCancel(DialogInterface dialog) {
-            getActivity().getSharedPreferences("doze_settings", Activity.MODE_PRIVATE)
-                    .edit()
-                    .putBoolean("first_help_shown", true)
-                    .commit();
-        }
-    }
-
-    private void showHelp() {
-        HelpDialogFragment fragment = new HelpDialogFragment();
-        fragment.show(getFragmentManager(), "help_dialog");
-    }
-}
diff --git a/parts/src/org/lineageos/settings/doze/DozeUtils.java b/parts/src/org/lineageos/settings/doze/DozeUtils.java
deleted file mode 100644
index 1d7a257..0000000
--- a/parts/src/org/lineageos/settings/doze/DozeUtils.java
+++ /dev/null
@@ -1,135 +0,0 @@
-/*
- * Copyright (C) 2015 The CyanogenMod Project
- *               2017-2019 The LineageOS Project
- *
- * Licensed under the Apache License, Version 2.0 (the "License");
- * you may not use this file except in compliance with the License.
- * You may obtain a copy of the License at
- *
- *      http://www.apache.org/licenses/LICENSE-2.0
- *
- * Unless required by applicable law or agreed to in writing, software
- * distributed under the License is distributed on an "AS IS" BASIS,
- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
- * See the License for the specific language governing permissions and
- * limitations under the License.
- */
-
-package org.lineageos.settings.doze;
-
-import android.content.Context;
-import android.content.Intent;
-import android.content.pm.PackageManager;
-import android.os.UserHandle;
-import android.support.v7.preference.PreferenceManager;
-import android.provider.Settings;
-import android.util.Log;
-
-import com.android.internal.hardware.AmbientDisplayConfiguration;
-
-import static android.provider.Settings.Secure.DOZE_ALWAYS_ON;
-import static android.provider.Settings.Secure.DOZE_ENABLED;
-
-public final class DozeUtils {
-
-    private static final String TAG = "DozeUtils";
-    private static final boolean DEBUG = false;
-
-    private static final String DOZE_INTENT = "com.android.systemui.doze.pulse";
-
-    protected static final String ALWAYS_ON_DISPLAY = "always_on_display";
-
-    protected static final String CATEG_PICKUP_SENSOR = "tilt_sensor";
-    protected static final String CATEG_PROX_SENSOR = "proximity_sensor";
-
-    protected static final String GESTURE_PICK_UP_KEY = "gesture_pick_up";
-    protected static final String GESTURE_HAND_WAVE_KEY = "gesture_hand_wave";
-    protected static final String GESTURE_POCKET_KEY = "gesture_pocket";
-
-    public static void startService(Context context) {
-        if (DEBUG) Log.d(TAG, "Starting service");
-        context.startServiceAsUser(new Intent(context, DozeService.class),
-                UserHandle.CURRENT);
-    }
-
-    protected static void stopService(Context context) {
-        if (DEBUG) Log.d(TAG, "Stopping service");
-        context.stopServiceAsUser(new Intent(context, DozeService.class),
-                UserHandle.CURRENT);
-    }
-
-    public static void checkDozeService(Context context) {
-        if (isDozeEnabled(context) && !isAlwaysOnEnabled(context) && sensorsEnabled(context)) {
-            startService(context);
-        } else {
-            stopService(context);
-        }
-    }
-
-    protected static boolean getProxCheckBeforePulse(Context context) {
-        try {
-            Context con = context.createPackageContext("com.android.systemui", 0);
-            int id = con.getResources().getIdentifier("doze_proximity_check_before_pulse",
-                    "bool", "com.android.systemui");
-            return con.getResources().getBoolean(id);
-        } catch (PackageManager.NameNotFoundException e) {
-            return false;
-        }
-    }
-
-    public static boolean isDozeEnabled(Context context) {
-        return Settings.Secure.getInt(context.getContentResolver(),
-                DOZE_ENABLED, 1) != 0;
-    }
-
-    protected static boolean enableDoze(Context context, boolean enable) {
-        return Settings.Secure.putInt(context.getContentResolver(),
-                DOZE_ENABLED, enable ? 1 : 0);
-    }
-
-    protected static void launchDozePulse(Context context) {
-        if (DEBUG) Log.d(TAG, "Launch doze pulse");
-        context.sendBroadcastAsUser(new Intent(DOZE_INTENT),
-                new UserHandle(UserHandle.USER_CURRENT));
-    }
-
-    protected static boolean enableAlwaysOn(Context context, boolean enable) {
-        return Settings.Secure.putIntForUser(context.getContentResolver(),
-                DOZE_ALWAYS_ON, enable ? 1 : 0, UserHandle.USER_CURRENT);
-    }
-
-    protected static boolean isAlwaysOnEnabled(Context context) {
-        final boolean enabledByDefault = context.getResources()
-                .getBoolean(com.android.internal.R.bool.config_dozeAlwaysOnEnabled);
-
-        return Settings.Secure.getIntForUser(context.getContentResolver(),
-                DOZE_ALWAYS_ON, alwaysOnDisplayAvailable(context) && enabledByDefault ? 1 : 0,
-                UserHandle.USER_CURRENT) != 0;
-    }
-
-    protected static boolean alwaysOnDisplayAvailable(Context context) {
-        return new AmbientDisplayConfiguration(context).alwaysOnAvailable();
-    }
-
-    protected static boolean isGestureEnabled(Context context, String gesture) {
-        return PreferenceManager.getDefaultSharedPreferences(context)
-                .getBoolean(gesture, false);
-    }
-
-    protected static boolean isPickUpEnabled(Context context) {
-        return isGestureEnabled(context, GESTURE_PICK_UP_KEY);
-    }
-
-    protected static boolean isHandwaveGestureEnabled(Context context) {
-        return isGestureEnabled(context, GESTURE_HAND_WAVE_KEY);
-    }
-
-    protected static boolean isPocketGestureEnabled(Context context) {
-        return isGestureEnabled(context, GESTURE_POCKET_KEY);
-    }
-
-    public static boolean sensorsEnabled(Context context) {
-        return isPickUpEnabled(context) || isHandwaveGestureEnabled(context)
-                || isPocketGestureEnabled(context);
-    }
-}
diff --git a/parts/src/org/lineageos/settings/doze/ProximitySensor.java b/parts/src/org/lineageos/settings/doze/ProximitySensor.java
deleted file mode 100644
index 1b293e4..0000000
--- a/parts/src/org/lineageos/settings/doze/ProximitySensor.java
+++ /dev/null
@@ -1,107 +0,0 @@
-/*
- * Copyright (c) 2015 The CyanogenMod Project
- *               2017-2018 The LineageOS Project
- *
- * Licensed under the Apache License, Version 2.0 (the "License");
- * you may not use this file except in compliance with the License.
- * You may obtain a copy of the License at
- *
- *      http://www.apache.org/licenses/LICENSE-2.0
- *
- * Unless required by applicable law or agreed to in writing, software
- * distributed under the License is distributed on an "AS IS" BASIS,
- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
- * See the License for the specific language governing permissions and
- * limitations under the License.
- */
-
-package org.lineageos.settings.doze;
-
-import android.content.Context;
-import android.hardware.Sensor;
-import android.hardware.SensorEvent;
-import android.hardware.SensorEventListener;
-import android.hardware.SensorManager;
-import android.util.Log;
-
-import java.util.concurrent.ExecutorService;
-import java.util.concurrent.Executors;
-import java.util.concurrent.Future;
-
-public class ProximitySensor implements SensorEventListener {
-
-    private static final boolean DEBUG = false;
-    private static final String TAG = "ProximitySensor";
-
-    // Maximum time for the hand to cover the sensor: 1s
-    private static final int HANDWAVE_MAX_DELTA_NS = 1000 * 1000 * 1000;
-
-    // Minimum time until the device is considered to have been in the pocket: 2s
-    private static final int POCKET_MIN_DELTA_NS = 2000 * 1000 * 1000;
-
-    private SensorManager mSensorManager;
-    private Sensor mSensor;
-    private Context mContext;
-    private ExecutorService mExecutorService;
-
-    private boolean mSawNear = false;
-    private long mInPocketTime = 0;
-
-    public ProximitySensor(Context context) {
-        mContext = context;
-        mSensorManager = mContext.getSystemService(SensorManager.class);
-        mSensor = mSensorManager.getDefaultSensor(Sensor.TYPE_PROXIMITY, false);
-        mExecutorService = Executors.newSingleThreadExecutor();
-    }
-
-    private Future<?> submit(Runnable runnable) {
-        return mExecutorService.submit(runnable);
-    }
-
-    @Override
-    public void onSensorChanged(SensorEvent event) {
-        boolean isNear = event.values[0] < mSensor.getMaximumRange();
-        if (mSawNear && !isNear) {
-            if (shouldPulse(event.timestamp)) {
-                DozeUtils.launchDozePulse(mContext);
-            }
-        } else {
-            mInPocketTime = event.timestamp;
-        }
-        mSawNear = isNear;
-    }
-
-    private boolean shouldPulse(long timestamp) {
-        long delta = timestamp - mInPocketTime;
-
-        if (DozeUtils.isHandwaveGestureEnabled(mContext) &&
-                DozeUtils.isPocketGestureEnabled(mContext)) {
-            return true;
-        } else if (DozeUtils.isHandwaveGestureEnabled(mContext)) {
-            return delta < HANDWAVE_MAX_DELTA_NS;
-        } else if (DozeUtils.isPocketGestureEnabled(mContext)) {
-            return delta >= POCKET_MIN_DELTA_NS;
-        }
-        return false;
-    }
-
-    @Override
-    public void onAccuracyChanged(Sensor sensor, int accuracy) {
-        /* Empty */
-    }
-
-    protected void enable() {
-        if (DEBUG) Log.d(TAG, "Enabling");
-        submit(() -> {
-            mSensorManager.registerListener(this, mSensor,
-                    SensorManager.SENSOR_DELAY_NORMAL);
-        });
-    }
-
-    protected void disable() {
-        if (DEBUG) Log.d(TAG, "Disabling");
-        submit(() -> {
-            mSensorManager.unregisterListener(this, mSensor);
-        });
-    }
-}
diff --git a/parts/src/org/lineageos/settings/doze/TiltSensor.java b/parts/src/org/lineageos/settings/doze/TiltSensor.java
deleted file mode 100644
index e86c0f8..0000000
--- a/parts/src/org/lineageos/settings/doze/TiltSensor.java
+++ /dev/null
@@ -1,94 +0,0 @@
-/*
- * Copyright (C) 2015 The CyanogenMod Project
- *               2017-2018 The LineageOS Project
- *
- * Licensed under the Apache License, Version 2.0 (the "License");
- * you may not use this file except in compliance with the License.
- * You may obtain a copy of the License at
- *
- *      http://www.apache.org/licenses/LICENSE-2.0
- *
- * Unless required by applicable law or agreed to in writing, software
- * distributed under the License is distributed on an "AS IS" BASIS,
- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
- * See the License for the specific language governing permissions and
- * limitations under the License.
- */
-
-package org.lineageos.settings.doze;
-
-import android.content.Context;
-import android.hardware.Sensor;
-import android.hardware.SensorEvent;
-import android.hardware.SensorEventListener;
-import android.hardware.SensorManager;
-import android.os.SystemClock;
-import android.util.Log;
-
-import java.util.concurrent.ExecutorService;
-import java.util.concurrent.Executors;
-import java.util.concurrent.Future;
-
-public class TiltSensor implements SensorEventListener {
-
-    private static final boolean DEBUG = false;
-    private static final String TAG = "TiltSensor";
-
-    private static final int BATCH_LATENCY_IN_MS = 100;
-    private static final int MIN_PULSE_INTERVAL_MS = 2500;
-
-    private SensorManager mSensorManager;
-    private Sensor mSensor;
-    private Context mContext;
-    private ExecutorService mExecutorService;
-
-    private long mEntryTimestamp;
-
-    public TiltSensor(Context context) {
-        mContext = context;
-        mSensorManager = mContext.getSystemService(SensorManager.class);
-        mSensor = mSensorManager.getDefaultSensor(Sensor.TYPE_TILT_DETECTOR);
-        mExecutorService = Executors.newSingleThreadExecutor();
-    }
-
-    private Future<?> submit(Runnable runnable) {
-        return mExecutorService.submit(runnable);
-    }
-
-    @Override
-    public void onSensorChanged(SensorEvent event) {
-        if (DEBUG) Log.d(TAG, "Got sensor event: " + event.values[0]);
-
-        long delta = SystemClock.elapsedRealtime() - mEntryTimestamp;
-        if (delta < MIN_PULSE_INTERVAL_MS) {
-            return;
-        } else {
-            mEntryTimestamp = SystemClock.elapsedRealtime();
-        }
-
-        if (event.values[0] == 1) {
-            DozeUtils.launchDozePulse(mContext);
-        }
-    }
-
-    @Override
-    public void onAccuracyChanged(Sensor sensor, int accuracy) {
-        /* Empty */
-    }
-
-    protected void enable() {
-        if (DEBUG) Log.d(TAG, "Enabling");
-        submit(() -> {
-            mSensorManager.registerListener(this, mSensor,
-                    SensorManager.SENSOR_DELAY_NORMAL, BATCH_LATENCY_IN_MS * 1000);
-            mEntryTimestamp = SystemClock.elapsedRealtime();
-        });
-    }
-
-    protected void disable() {
-        if (DEBUG) Log.d(TAG, "Disabling");
-        submit(() -> {
-            mSensorManager.unregisterListener(this, mSensor);
-        });
-    }
-}
